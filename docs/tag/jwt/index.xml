<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>JWT on withong</title>
    <link>https://withong.github.io/tag/jwt/</link>
    <description>Recent content in JWT on withong</description>
    <generator>Hugo -- 0.145.0</generator>
    <language>ko</language>
    <lastBuildDate>Fri, 30 May 2025 21:32:51 +0900</lastBuildDate>
    <atom:link href="https://withong.github.io/tag/jwt/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>JWT (JSON Web Token)</title>
      <link>https://withong.github.io/record/2025-05-30/</link>
      <pubDate>Fri, 30 May 2025 21:32:51 +0900</pubDate>
      <guid>https://withong.github.io/record/2025-05-30/</guid>
      <description>&lt;hr&gt;
&lt;br&gt;
&lt;h2 id=&#34;왜-등장했는가&#34;&gt;왜 등장했는가&lt;/h2&gt;
&lt;p&gt;웹 시스템의 인증은 전통적으로 세션 기반이었다.&lt;br&gt;
로그인 시 서버는 세션을 생성하고 클라이언트에 세션 ID를 쿠키로 전달하며, 이후 요청마다 서버가 세션 저장소를 통해 인증 상태를 식별한다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;상태 관리 부담&lt;/strong&gt;
서버 확장 시 세션 동기화 비용이 증가하며, Sticky Session 또는 외부 세션 저장소가 필요해진다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;REST API와의 부조화&lt;/strong&gt;
REST는 무상태(Stateless) 아키텍처를 전제로 하므로, 세션 기반 인증은 구조적으로 부적합하다.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;이러한 제약을 해결하기 위해 등장한 방식이 JWT(Json Web Token) 기반 인증이다.&lt;/p&gt;
&lt;br&gt;
&lt;h2 id=&#34;어떻게-작동하는가&#34;&gt;어떻게 작동하는가&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;클라이언트가 로그인 정보를 서버에 전송한다.&lt;/li&gt;
&lt;li&gt;서버는 인증에 성공하면 사용자 정보를 담은 JWT를 생성하여 응답한다.&lt;/li&gt;
&lt;li&gt;클라이언트는 이후 모든 요청에 &lt;code&gt;Authorization: Bearer &amp;lt;token&amp;gt;&lt;/code&gt; 헤더를 포함한다.&lt;/li&gt;
&lt;li&gt;서버는 매 요청마다 토큰의 서명을 검증하고, Payload의 클레임을 기반으로 인증 및 인가를 수행한다.&lt;/li&gt;
&lt;li&gt;별도의 세션 상태를 보존하지 않고 완전한 무상태 구조를 유지할 수 있다.&lt;/li&gt;
&lt;/ol&gt;
&lt;br&gt;
&lt;h2 id=&#34;토큰의-구성&#34;&gt;토큰의 구성&lt;/h2&gt;
&lt;p&gt;JWT는 &lt;code&gt;Header.Payload.Signature&lt;/code&gt; 세 부분으로 구성되며, 각각 Base64URL로 인코딩되고 &lt;code&gt;.&lt;/code&gt;으로 구분된다.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
