<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>트러블 슈팅 on withong</title>
    <link>https://withong.github.io/tag/%ED%8A%B8%EB%9F%AC%EB%B8%94-%EC%8A%88%ED%8C%85/</link>
    <description>Recent content in 트러블 슈팅 on withong</description>
    <generator>Hugo -- 0.145.0</generator>
    <language>ko</language>
    <lastBuildDate>Tue, 15 Apr 2025 17:53:03 +0900</lastBuildDate>
    <atom:link href="https://withong.github.io/tag/%ED%8A%B8%EB%9F%AC%EB%B8%94-%EC%8A%88%ED%8C%85/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>뉴스피드 API 트러블 슈팅</title>
      <link>https://withong.github.io/project/news-feed-01/</link>
      <pubDate>Tue, 15 Apr 2025 17:53:03 +0900</pubDate>
      <guid>https://withong.github.io/project/news-feed-01/</guid>
      <description>&lt;hr&gt;
&lt;br&gt;
&lt;h2 id=&#34;jsonformat을-이용한-사용자-요청-값-검증&#34;&gt;@JsonFormat을 이용한 사용자 요청 값 검증&lt;/h2&gt;
&lt;h3 id=&#34;상황&#34;&gt;상황&lt;/h3&gt;
&lt;p&gt;회원가입 시 사용자의 생년월일을 &lt;code&gt;UserCreateRequestDto&lt;/code&gt;에서 &lt;code&gt;LocalDate&lt;/code&gt; 타입으로 받고 있으며, 아래와 같이 &lt;code&gt;@JsonFormat&lt;/code&gt;을 사용하여 날짜 형식을 검증하고자 했음.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 생년월일&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nd&#34;&gt;@NotNull&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;message&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;생년월일은 필수 입력값입니다.&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nd&#34;&gt;@JsonFormat&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pattern&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;yyyyMMdd&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;final&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;LocalDate&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;birth&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;문제&#34;&gt;문제&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;@JsonFormat&lt;/code&gt;은 지정한 형식과 다른 값이 입력될 경우, 컨트롤러에 진입하기 전에 JSON → Java 객체로 변환하는 Jackson 역직렬화 과정에서 예외를 발생시킴. 이때 발생하는 예외는 &lt;code&gt;@Valid&lt;/code&gt;에서 처리되지 않고 &lt;code&gt;BindingResult&lt;/code&gt;이나 &lt;code&gt;MethodArgumentNotValidException&lt;/code&gt;으로도 잡을 수 없으며, &lt;code&gt;HttpMessageNotReadableException&lt;/code&gt;으로 처리되어 클라이언트에게는 단순한 400 Bad Request 응답으로 전달됨.&lt;/p&gt;</description>
    </item>
    <item>
      <title>일정 관리 API (JPA) 트러블 슈팅</title>
      <link>https://withong.github.io/project/schedule-02/</link>
      <pubDate>Thu, 03 Apr 2025 22:28:58 +0900</pubDate>
      <guid>https://withong.github.io/project/schedule-02/</guid>
      <description>&lt;hr&gt;
&lt;h2 id=&#34;github&#34;&gt;GitHub&lt;/h2&gt;
&lt;h3 id=&#34;-nbc-chapter-03-develop&#34;&gt;▶ &lt;a href=&#34;https://github.com/withong/nbc-chapter-03-develop.git&#34;&gt;nbc-chapter-03-develop&lt;/a&gt;&lt;/h3&gt;
&lt;hr&gt;
&lt;br&gt;
&lt;h2 id=&#34;1-이메일-형식-검증&#34;&gt;1. 이메일 형식 검증&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;문제&lt;/strong&gt;:&lt;br&gt;
&lt;code&gt;@Email&lt;/code&gt;을 어노테이션으로 이메일 형식을 검증해도&lt;br&gt;
&lt;code&gt;test@gmail&lt;/code&gt; 같은 @ 뒤에 마침표(.)가 존재하지 않는 이메일이 통과됨&amp;hellip;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;원인&lt;/strong&gt;:&lt;br&gt;
&lt;code&gt;@Email&lt;/code&gt;은 기본적으로 @ 기호와 텍스트 구조만 확인하고,&lt;br&gt;
도메인에 마침표가 포함되어야 한다는 조건은 강제하지 않음&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;분석&lt;/strong&gt;:&lt;br&gt;
&lt;code&gt;@Email&lt;/code&gt;만으로는 @뒤에 마침표가 1개 이상 존재하고,&lt;br&gt;
마지막 마침표 뒤에 문자열이 있다는 현실적인 이메일 형식 검증은 부족함&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;해결&lt;/strong&gt;:&lt;br&gt;
정규 표현식을 함께 사용해 @ 뒤에 마침표 포함 여부와 마침표 뒤의 문자열까지 추가로 검증&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
&lt;p&gt;▶ 공부 기록 &lt;a href=&#34;https://withong.github.io/record/2025-04-01-02/&#34;&gt;[정규 표현식을 활용한 사용자 등록 요청 데이터 검증]&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>일정 관리 API (JDBC) 트러블 슈팅</title>
      <link>https://withong.github.io/project/schedule-01/</link>
      <pubDate>Tue, 25 Mar 2025 20:20:11 +0900</pubDate>
      <guid>https://withong.github.io/project/schedule-01/</guid>
      <description>&lt;hr&gt;
&lt;h2 id=&#34;github&#34;&gt;GitHub&lt;/h2&gt;
&lt;h3 id=&#34;-nbc-chapter-03-basic&#34;&gt;▶ &lt;a href=&#34;https://github.com/withong/nbc-chapter-03-basic.git&#34;&gt;nbc-chapter-03-basic&lt;/a&gt;&lt;/h3&gt;
&lt;hr&gt;
&lt;br&gt;
&lt;h2 id=&#34;1-등록-시-createdat-updatedat-null&#34;&gt;1. 등록 시 createdAt, updatedAt Null&lt;/h2&gt;
&lt;p&gt;createdAt, updatedAt는 DB에서 자동 갱신됨&lt;/p&gt;
&lt;h3 id=&#34;11-문제&#34;&gt;1.1. 문제&lt;/h3&gt;
&lt;p&gt;일정/사용자 등록 후 반환된 createdAt, updatedAt 값이 Null&lt;/p&gt;
&lt;h3 id=&#34;12-원인&#34;&gt;1.2. 원인&lt;/h3&gt;
&lt;p&gt;당연함&amp;hellip; 등록 요청 시 전달받은 정보를 응답 DTO에 넣어주고 그 값을 반환하는데&lt;br&gt;
DB에서 자동으로 업데이트 하는 값은 안 들어오니까 안 넣어줬고&amp;hellip;&lt;br&gt;
DB 조회해서 가져오기 전까지 당연히 Null임.&lt;/p&gt;
&lt;h3 id=&#34;13-해결&#34;&gt;1.3. 해결&lt;/h3&gt;
&lt;p&gt;전달받은 식별자를 통해 재 조회한 결과 반환&lt;/p&gt;
&lt;br&gt;
&lt;hr&gt;
&lt;br&gt;
&lt;h2 id=&#34;2-변경-요청-시-변경된-내용이-없을-경우&#34;&gt;2. 변경 요청 시 변경된 내용이 없을 경우&lt;/h2&gt;
&lt;h3 id=&#34;21-문제&#34;&gt;2.1. 문제&lt;/h3&gt;
&lt;p&gt;클라이언트가 기존 정보와 동일한 정보로 변경 요청 시&lt;br&gt;
jdbcTempalte.update의 반환 값이 0이 올 것이라 예상했으나&lt;br&gt;
예상 결과와 다르게 동일한 값도 update 후 1이 반환됨&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
