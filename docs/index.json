[{"content":" GitHub ▶ nbc-chapter-03-develop 1. 이메일 형식 검증 문제:\n@Email을 어노테이션으로 이메일 형식을 검증해도\ntest@gmail 같은 @ 뒤에 마침표(.)가 존재하지 않는 이메일이 통과됨\u0026hellip;\n원인:\n@Email은 기본적으로 @ 기호와 텍스트 구조만 확인하고,\n도메인에 마침표가 포함되어야 한다는 조건은 강제하지 않음\n분석:\n@Email만으로는 @뒤에 마침표가 1개 이상 존재하고,\n마지막 마침표 뒤에 문자열이 있다는 현실적인 이메일 형식 검증은 부족함\n해결:\n정규 표현식을 함께 사용해 @ 뒤에 마침표 포함 여부와 마침표 뒤의 문자열까지 추가로 검증\n▶ 공부 기록 [정규 표현식을 활용한 사용자 등록 요청 데이터 검증]\n2. 해시된 비밀번호가 매번 다른데, 어떻게 비교해서 로그인하는지? 문제:\nbcrypt는 매번 다른 해시값을 생성하는데, 그러면 로그인 시 어떻게 비밀번호를 비교함?\n원인:\nbcrypt의 내부 구조(salt 포함, 비교 로직 내장)에 대한 이해 부족\n분석:\nbcrypt는 해시값 안에 salt, cost, 알고리즘 정보를 전부 포함하고 있음\n해결:\nBCrypt.verifyer().verify()를 사용하면 입력된 비밀번호와 기존 해시값을 내부적으로 비교 가능함\n▶ 공부 기록 [Bcrypt를 활용한 비밀번호 암호화]\n3. Filter에서 발생한 예외가 ExceptionHandler로 전달되지 않음 문제:\nFilter에서 throw new CustomException(...) 했는데,\n예외 핸들러가 작동하지 않고 500 에러만 발생\n원인:\nFilter는 Spring MVC 흐름 바깥이라 @ExceptionHandler가 작동하지 않음\n분석:\nDispatcherServlet 이전 단계에서 예외가 발생하면\nSpring의 예외 처리 체계까지 도달하지 않기 때문\n해결:\nsendError() 대신, ObjectMapper로 JSON 응답을 직접 작성해서\nresponse.getWriter().write(json) 방식으로 내려줌\nif (session == null || session.getAttribute(Const.LOGIN_USER) == null) { // 사용자 인증 실패 시 응답 반환 처리 // 사용자 정의 예외 코드 ExceptionCode code = ExceptionCode.NOT_LOGINED; // 사용자 정의 예외 응답 객체 ExceptionResponse responseBody = ExceptionResponse.builder() .status(code.getStatus().value()) .code(code.getCode()) .message(code.getMessage()) .build(); httpResponse.setStatus(code.getStatus().value()); // 응답 상태 코드 설정 httpResponse.setContentType(\u0026#34;application/json\u0026#34;); // 응답 타입 설정 (JSON) httpResponse.setCharacterEncoding(\u0026#34;UTF-8\u0026#34;); // 응답 인코딩 설정 String json = new ObjectMapper().writeValueAsString(responseBody); // 객체를 JSON 문자열로 변환 httpResponse.getWriter().write(json); // 응답 바디에 JSON 문자열 작성 return; } 4. 본인 일정만 조회 가능 vs 댓글 기능 요구사항 충돌 문제:\n본인 일정만 볼 수 있게 했는데, 댓글 기능을 추가하라 하니 구조상 말이 안 됨\n나만 보는 내 일정에 나만 보는 댓글을 나만 달 수 있다\u0026hellip;(?)\n원인:\n\u0026ldquo;본인 일정은 본인만 조회\u0026quot;로 설계해둔 상태에서 다른 사용자가 댓글을 달 수 없음\n분석:\n댓글 기능이 의미 있으려면 일정 조회 권한을 열어야 함\n→ 최소한 조회는 공개, 수정/삭제만 본인만 가능해야 함\n해결:\n일정 조회 API를 타인도 접근 가능하게 수정,\n전체 사용자 조회 → 특정 사용자 일정 조회 흐름으로 확장 설계\n5. 로그인 상태에서 다른 계정으로 중복 로그인 시도하면? 문제\n동일한 브라우저에서 A 탭으로 A 계정 로그인, B 탭으로 B 계정 로그인 시\n세션 충돌 또는 로그아웃은 어떻게 처리되는가?\n원인\nSpring에서 로그인 시 HttpSession은 클라이언트의 브라우저 쿠키(JSESSIONID) 기준으로 관리됨\n즉, 브라우저 단위로 세션 1개만 유지됨\n분석\nB 탭에서 로그인하면, 같은 브라우저니까 같은 세션에 LOGIN_USER가 덮어씌워짐\nA 탭은 여전히 로그인된 상태로 보이지만, 실제로는 이미 B로 덮인 세션 사용 중\nA 탭에서 B의 본인 정보 조회 및 정보 수정 접근 가능해짐\n해결\n로그인 전 기존 세션 무효화 처리 추가\nHttpSession existingSession = httpRequest.getSession(false); if (existingSession != null) { existingSession.invalidate(); } 6. QueryDSL 페이징 시 count 쿼리가 왜 따로 필요한지? 문제\n페이징 구현에서 .offset, .limit만으로 잘 동작하는데\n왜 굳이 count 쿼리를 따로 날려야 하는 건지?\n원인\nSpring Data JPA의 Page 객체는 전체 페이지 수 계산을 위해 총 데이터 개수(totalElements) 필요\n분석\n단순히 일부 데이터만 잘라서 가져오면 현재 페이지까지만 보여줄 수 있음\n하지만 프론트에서 \u0026ldquo;총 몇 페이지인지\u0026rdquo;, \u0026ldquo;다음 페이지 있는지\u0026quot;를 렌더링하려면 총 개수 필수\n해결\nPageImpl\u0026lt;\u0026gt;(content, pageable, totalCount) 형태로\ncontent + pageable + count 쿼리까지 포함해서 Page 객체 반환\n7. 일정 목록/단건 조회의 댓글 개수 처리 로직 분리 문제\n일정 목록 조회에도 일정 단건 조회에도 일정별 댓글 개수를 보여주고 싶은데,\n일정별 댓글 개수 조회를 countCommentsBySchedule(schedule) 하나로 처리하려니\n일정 목록을 조회할 때마다 일정 개수만큼 댓글 개수 쿼리가 반복 실행됨\n원인\ncountCommentsBySchedule는 단일 일정의 댓글 개수를 세는 쿼리인데,\n목록 전체에 대해 이 메서드를 반복 호출하면 N+1 문제처럼 작동해서 쿼리가 너무 많아짐.\n분석\n일정 목록을 조회하면서 일정별 댓글 개수도 같은 쿼리에서 함께 조회하는 게 효율적임. 해결\n일정 목록 조회 시: Querydsl을 사용해 일정 목록을 조회할 때 comment.count()를 groupBy(schedule.id)와 함께 조회함으로써 댓글 개수를 포함한 결과를 한 번의 쿼리로 가져오도록 처리함. 일정 단건 조회 시: CommentRepository.countCommentsBySchedule(schedule) 메서드를 그대로 활용해서, 단일 일정에 대한 댓글 개수만 별도로 조회. ▶ 공부 기록 [QueryDSL을 활용한 조건 기반 일정 조회]\n","permalink":"http://localhost:1313/project/schedule-02/","summary":"\u003chr\u003e\n\u003ch2 id=\"github\"\u003eGitHub\u003c/h2\u003e\n\u003ch3 id=\"-nbc-chapter-03-develop\"\u003e▶ \u003ca href=\"https://github.com/withong/nbc-chapter-03-develop.git\"\u003enbc-chapter-03-develop\u003c/a\u003e\u003c/h3\u003e\n\u003chr\u003e\r\n\u003cbr\u003e\r\n\u003ch2 id=\"1-이메일-형식-검증\"\u003e1. 이메일 형식 검증\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003e문제\u003c/strong\u003e:\u003cbr\u003e\n\u003ccode\u003e@Email\u003c/code\u003e을 어노테이션으로 이메일 형식을 검증해도\u003cbr\u003e\n\u003ccode\u003etest@gmail\u003c/code\u003e 같은 @ 뒤에 마침표(.)가 존재하지 않는 이메일이 통과됨\u0026hellip;\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003e원인\u003c/strong\u003e:\u003cbr\u003e\n\u003ccode\u003e@Email\u003c/code\u003e은 기본적으로 @ 기호와 텍스트 구조만 확인하고,\u003cbr\u003e\n도메인에 마침표가 포함되어야 한다는 조건은 강제하지 않음\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003e분석\u003c/strong\u003e:\u003cbr\u003e\n\u003ccode\u003e@Email\u003c/code\u003e만으로는 @뒤에 마침표가 1개 이상 존재하고,\u003cbr\u003e\n마지막 마침표 뒤에 문자열이 있다는 현실적인 이메일 형식 검증은 부족함\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003e해결\u003c/strong\u003e:\u003cbr\u003e\n정규 표현식을 함께 사용해 @ 뒤에 마침표 포함 여부와 마침표 뒤의 문자열까지 추가로 검증\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cbr\u003e\r\n\u003cp\u003e▶ 공부 기록 \u003ca href=\"https://withong.github.io/record/2025-04-01-02/\"\u003e[정규 표현식을 활용한 사용자 등록 요청 데이터 검증]\u003c/a\u003e\u003c/p\u003e","title":"일정 관리 API (JPA) 트러블 슈팅"},{"content":"\rQueryDSL이란? QueryDSL은 Java에서 **타입 안정성(type-safe)**을 보장하는 방식으로 SQL과 유사한 쿼리를 작성할 수 있게 해주는 **도메인 특화 언어(DSL: Domain Specific Language)**이다. 주로 JPA와 함께 사용되며, 복잡한 동적 쿼리 작성이나 조건 조합이 많은 경우 유용하다.\n기존 JPQL의 단점인 문자열 기반 쿼리 작성의 오류 위험성을 줄이고, IDE의 코드 자동완성 기능을 활용할 수 있도록 해준다.\n왜 QueryDSL을 사용하는가? 컴파일 타임에 문법 오류 확인 가능\n→ JPQL은 문자열이기 때문에 런타임에 오류가 나지만, QueryDSL은 Java 코드로 작성되기 때문에 컴파일 시점에 오류를 잡을 수 있다.\nIDE의 자동완성 기능 사용 가능\n→ 엔티티의 필드명이 바뀌어도 컴파일 오류가 발생하므로 추적이 쉽다.\n복잡한 조건과 동적 쿼리에 강력한 기능 제공\n→ 조건문 조합, 서브쿼리, 정렬 등 다양한 조합이 가능하다.\n가독성과 유지보수성 향상\n→ 쿼리 구조가 코드처럼 보여서 이해하기 쉬우며, 유지보수도 편하다.\n기본 사용 방법 1. 의존성 추가 // build.gradle (Spring Boot 3.x, Gradle 7 이상 기준) dependencies { implementation \u0026#39;com.querydsl:querydsl-jpa:5.0.0:jakarta\u0026#39; annotationProcessor \u0026#39;com.querydsl:querydsl-apt:5.0.0:jakarta\u0026#39; annotationProcessor \u0026#39;jakarta.persistence:jakarta.persistence-api\u0026#39; annotationProcessor \u0026#39;jakarta.annotation:jakarta.annotation-api\u0026#39; } 2. QueryDSL Q타입 클래스 생성 IntelliJ에서 ./gradlew clean build 하는 방법 IntelliJ 오른쪽 상단 탭 → Gradle 클릭 task \u0026gt; build \u0026gt; clean 더블클릭 task \u0026gt; build \u0026gt; build 더블클릭 Q클래스 생성 확인 QueryDSL은 Q클래스라는 이름의 도메인 클래스 전용 쿼리 객체를 생성해서 사용한다.\n예를 들어, Member 엔티티가 있다면 QMember 클래스가 생성된다.\nQ클래스는 보통 build/generated 디렉토리에 생성되며, 이 클래스를 통해 쿼리의 조건을 지정할 수 있다.\n3. Entity 예시 @Entity public class Member { @Id @GeneratedValue private Long id; private String username; private int age; } 4. 간단한 쿼리 예시 QMember member = QMember.member; List\u0026lt;Member\u0026gt; result = queryFactory .selectFrom(member) .where(member.username.eq(\u0026#34;query\u0026#34;)) .fetch(); queryFactory는 JPAQueryFactory 객체이며, 보통은 아래처럼 생성자 주입을 통해 사용한다.\n@RequiredArgsConstructor @Repository public class MemberRepositoryCustomImpl implements MemberRepositoryCustom { private final JPAQueryFactory queryFactory; public List\u0026lt;Member\u0026gt; findByUsername(String name) { QMember member = QMember.member; return queryFactory .selectFrom(member) .where(member.username.eq(name)) .fetch(); } } 동적 쿼리 작성 방법 QueryDSL은 BooleanBuilder 또는 where절에 조건을 null-safe하게 조립하는 방식으로 동적 쿼리를 처리할 수 있다.\n1. BooleanBuilder 사용 public List\u0026lt;Member\u0026gt; search(String username, Integer age) { QMember member = QMember.member; BooleanBuilder builder = new BooleanBuilder(); if (username != null) { builder.and(member.username.eq(username)); } if (age != null) { builder.and(member.age.eq(age)); } return queryFactory .selectFrom(member) .where(builder) .fetch(); } 2. where절 메서드 조립 public List\u0026lt;Member\u0026gt; search(String username, Integer age) { QMember member = QMember.member; return queryFactory .selectFrom(member) .where(usernameEq(username), ageEq(age)) .fetch(); } private BooleanExpression usernameEq(String username) { return username != null ? QMember.member.username.eq(username) : null; } private BooleanExpression ageEq(Integer age) { return age != null ? QMember.member.age.eq(age) : null; } ※ where()에 들어가는 조건이 null일 경우 자동으로 무시되므로, 동적 조립에 적합하다.\nTuple Tuple은 QueryDSL에서 여러 개의 값을 동시에 select할 때 결과를 담기 위해 사용하는 객체\nList\u0026lt;Tuple\u0026gt; result = queryFactory .select(member.username, member.age) .from(member) .fetch(); 이렇게 username, age를 동시에 조회하면 반환 타입은 Tuple이 된다.\nTuple = 여러 select 대상이 있을 때 사용하는 결과 타입\n대상이 엔티티일 수도 있고, 필드나 count() 같은 표현식일 수도 있음\n1. 엔티티 단일 조회 (Tuple 안 써도 됨) List\u0026lt;Member\u0026gt; result = queryFactory .selectFrom(member) .fetch(); → Member 엔티티 하나만 조회 → Tuple 불필요\n2. 엔티티 + 수치 값 같이 조회 (Tuple 필요) List\u0026lt;Tuple\u0026gt; result = queryFactory .select(member, comment.count()) .from(member) .leftJoin(comment).on(comment.member.eq(member)) .groupBy(member.id) .fetch(); → member는 엔티티, comment.count()는 수치 값 → 둘 다 조회하므로 Tuple 필요\n3. 엔티티 2개 이상 조회 (Tuple 필요) List\u0026lt;Tuple\u0026gt; result = queryFactory .select(order, member) .from(order) .join(order.member, member) .fetch(); → order, member 둘 다 엔티티 → Tuple 필요\n4. 특정 필드 여러 개 조회 (Tuple 필요) List\u0026lt;Tuple\u0026gt; result = queryFactory .select(member.username, member.age) .from(member) .fetch(); → username, age는 모두 필드 → 그래도 여러 개니까 Tuple 필요\n조회 조건 기반 특정 사용자의 일정 목록 조회 1. 메인 메서드: findByCondition @Override public Page\u0026lt;ScheduleResponse\u0026gt; findByCondition(Long userId, SearchScheduleRequest condition, Pageable pageable) { userId: 로그인한 사용자의 ID condition: 사용자가 검색 필터로 지정한 값(년, 월, 날짜, 제목, 내용 등) pageable: 요청한 페이지 번호, 사이즈, 정렬 기준 등 페이징 정보 2. 쿼리 작성 List\u0026lt;Tuple\u0026gt; query = queryFactory .select(schedule, comment.count()) .from(schedule) .leftJoin(comment).on(comment.schedule.eq(schedule)) .join(schedule.user, user) .where(builder) .groupBy(schedule.id) .offset(pageable.getOffset()) .limit(pageable.getPageSize()) .orderBy(schedule.updatedAt.desc()) .fetch(); 설명 구문 의미 select(schedule, comment.count()) 일정 정보와 댓글 수를 함께 조회 from(schedule) 기준이 되는 메인 테이블은 일정(schedules) leftJoin(comment)... 일정에 달린 댓글을 LEFT JOIN (댓글이 없어도 일정은 조회됨) join(schedule.user, user) 일정 작성자와 사용자를 JOIN하여, 해당 사용자의 일정만 필터링 where(builder) 아래 buildCondition()에서 만든 조건 적용 groupBy(schedule.id) 일정별로 댓글을 집계하므로, 그룹핑 필요 offset(), limit() 페이징 처리 orderBy(schedule.updatedAt.desc()) 최신 수정일 기준으로 정렬 검색 조건 동적 생성: buildCondition private BooleanBuilder buildCondition(Long userId, SearchScheduleRequest condition) 이 메서드는 null-safe하게 동적 조건을 만들어주는 핵심 로직이다.\nSearchScheduleRequest에는 다음과 같은 항목이 포함된다.\nyear: 연도 month: 월 date: 날짜(LocalDate 기준) title: 일정 제목 content: 일정 내용 동작 방식 BooleanBuilder builder = new BooleanBuilder(); builder.and(user.id.eq(userId)); → 항상 사용자 본인의 일정만 조회해야 하므로, 이 조건은 고정이다.\nif (condition.getYear() != null) builder.and(schedule.date.year().eq(condition.getYear())); if (condition.getMonth() != null) builder.and(schedule.date.month().eq(condition.getMonth())); if (condition.getDate() != null) builder.and(schedule.date.eq(condition.getDate())); → 날짜 조건은 각각 연/월/일 기준으로 분리해서 필터링할 수 있다.\nif (condition.getTitle() != null) builder.and(schedule.title.containsIgnoreCase(condition.getTitle())); if (condition.getContent() != null) builder.and(schedule.content.containsIgnoreCase(condition.getContent())); → 제목/내용은 대소문자 구분 없이 LIKE '%값%' 형태로 부분 검색이 가능하게 처리했다.\n결과 매핑 List\u0026lt;ScheduleResponse\u0026gt; scheduleResponses = query.stream() .map(tuple -\u0026gt; { Schedules schedules = tuple.get(schedule); Long commentCount = tuple.get(comment.count()); return new ScheduleResponse(schedules, commentCount); }) .collect(Collectors.toList()); Tuple은 QueryDSL에서 여러 값을 동시에 select했을 때 사용하는 결과 타입이다. 각 튜플에서 Schedule, 댓글 수를 꺼내서 DTO(ScheduleResponse)로 변환한다. 전체 개수 조회 public long countSchedulesByCondition(Long userId, SearchScheduleRequest condition) → 페이징 처리 시 PageImpl에 총 데이터 수(total count)가 필요하므로, 조건을 동일하게 적용해 개수만 따로 조회한다.\n","permalink":"http://localhost:1313/record/2025-04-03/","summary":"\u003chr\u003e\r\n\u003cbr\u003e\r\n\u003ch2 id=\"querydsl이란\"\u003eQueryDSL이란?\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eQueryDSL\u003c/strong\u003e은 Java에서 **타입 안정성(type-safe)**을 보장하는 방식으로 SQL과 유사한 쿼리를 작성할 수 있게 해주는 **도메인 특화 언어(DSL: Domain Specific Language)**이다. 주로 \u003cstrong\u003eJPA와 함께 사용\u003c/strong\u003e되며, 복잡한 동적 쿼리 작성이나 조건 조합이 많은 경우 유용하다.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e기존 JPQL의 단점인 문자열 기반 쿼리 작성의 오류 위험성을 줄이고, IDE의 코드 자동완성 기능을 활용할 수 있도록 해준다.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cbr\u003e\r\n\u003chr\u003e\r\n\u003cbr\u003e\r\n\u003ch2 id=\"왜-querydsl을-사용하는가\"\u003e왜 QueryDSL을 사용하는가?\u003c/h2\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003e컴파일 타임에 문법 오류 확인 가능\u003c/strong\u003e\u003cbr\u003e\n→ JPQL은 문자열이기 때문에 런타임에 오류가 나지만, QueryDSL은 Java 코드로 작성되기 때문에 컴파일 시점에 오류를 잡을 수 있다.\u003c/p\u003e","title":"QueryDSL을 활용한 조건 기반 일정 조회"},{"content":"\r정규 표현식(Regular Expression)이란? **정규 표현식(정규식, regex)**은 특정 문자열의 규칙을 표현하는 문법이다.\n일종의 패턴 언어로, 문자열이 특정한 조건을 만족하는지 검사하거나, 일부를 추출하거나, 변환할 때 사용된다.\n1. 정규 표현식은 언제, 왜 사용하는가? 입력값 검증 (Validation) 사용자가 입력한 값이 이메일 형식인지, 숫자인지, 비밀번호 조건에 맞는지 등을 검사할 때 사용한다. 프론트엔드/백엔드 양쪽에서 모두 널리 쓰인다. 문자열 추출 또는 치환 특정 문자나 단어가 포함된 부분을 찾아내거나, 그 값을 다른 값으로 바꾸는 작업도 가능하다. 패턴 기반 검색 로그 분석, 텍스트 필터링, 문서 내 키워드 찾기 등에서 활용된다. 2. 자주 사용하는 정규 표현식 기호 기호 의미 . 임의의 한 문자 (개행 제외) ^ 문자열의 시작 $ 문자열의 끝 * 앞 문자가 0개 이상 반복 + 앞 문자가 1개 이상 반복 ? 앞 문자가 0개 또는 1개 [] 괄호 안의 문자 중 하나 () 그룹 (하나의 단위로 묶음) \\\\d 숫자 (0~9) \\\\w 알파벳 또는 숫자 또는 밑줄 \\\\s 공백 문자 (스페이스, 탭 등) {n} 정확히 n개 반복 {n,} n개 이상 반복 {n,m} n개 이상, m개 이하 반복 CreateUserRequest DTO에 사용된 정규 표현식 분석 1. 이름 필드 @Pattern(regexp = \u0026#34;^[\\\\p{L}]+$\u0026#34;, message = \u0026#34;이름은 문자만 입력 가능합니다.\u0026#34;) 정규식: ^[\\\\p{L}]+$ 패턴 의미 ^ 문자열 시작 \\\\p{L} 유니코드 문자 중 \u0026lsquo;Letter\u0026rsquo;(문자) 범주에 해당하는 모든 글자 (한글, 영어, 일본어 등 모두 포함) + 1개 이상 반복 $ 문자열 끝 의미 요약: \u0026ldquo;문자만 1자 이상 포함된 문자열이며, 처음부터 끝까지 모두 문자인 경우만 허용\u0026rdquo;\n→ 숫자, 기호, 공백 등은 허용되지 않음.\n→ 유니코드 기준이라 영어, 한글 모두 지원됨.\n2. 이메일 필드 @Pattern(regexp = \u0026#34;^[^@\\\\s]+@[^@\\\\s]+\\\\.[^@\\\\s]+$\u0026#34;, message = \u0026#34;올바른 이메일이 아닙니다.\u0026#34;) 정규식: ^[^@\\\\s]+@[^@\\\\s]+\\\\.[^@\\\\s]+$ 패턴 의미 ^ 문자열 시작 [^@\\\\s]+ \u0026lsquo;@\u0026lsquo;와 공백을 제외한 문자 1개 이상 @ \u0026lsquo;@\u0026rsquo; 문자 [^@\\\\s]+ \u0026lsquo;@\u0026lsquo;와 공백을 제외한 문자 1개 이상 \\\\. \u0026lsquo;.\u0026rsquo; 문자 (도메인 구분용) [^@\\\\s]+ \u0026lsquo;@\u0026lsquo;와 공백을 제외한 문자 1개 이상 $ 문자열 끝 의미 요약: 이메일의 기본 형식인 aaa@bbb.ccc 형태를 따르며, \u0026lsquo;@\u0026lsquo;는 딱 하나 포함되고, 공백은 허용되지 않는다.\n@Email 어노테이션만 사용하면 aaa@bbb처럼 @ 뒤에 마침표가 없어도 유효한 이메일로 간주되는 문제가 있기 때문에, 이를 보완하기 위해 정규식을 함께 사용해 @ 뒤에 반드시 마침표(.)가 있고, 그 뒤에도 문자가 존재하는지를 추가 검증한다.\n3. 비밀번호 필드 @Pattern( regexp = \u0026#34;^(?=.*[A-Za-z])(?=.*\\\\d)(?=.*[!@#$%^\u0026amp;*])[A-Za-z\\\\d!@#$%^\u0026amp;*]{8,}$\u0026#34;, message = \u0026#34;비밀번호는 영문자, 숫자, 특수문자가 포함되어야 합니다.\u0026#34; ) 정규식: ^(?=.*[A-Za-z])(?=.*\\\\d)(?=.*[!@#$%^\u0026amp;*])[A-Za-z\\\\d!@#$%^\u0026amp;*]{8,}$\n패턴 의미 ^ 문자열 시작 (?=.*[A-Za-z]) 영문자가 최소 1개 이상 있어야 함 (?=.*\\\\d) 숫자(0~9)가 최소 1개 이상 있어야 함 (?=.*[!@#$%^\u0026amp;*]) 지정된 특수문자가 최소 1개 이상 있어야 함 [A-Za-z\\\\d!@#$%^\u0026amp;*]{8,} 위에 지정한 문자들로만 구성되어 있으며, 총 8자 이상 $ 문자열 끝 의미 요약:\n\u0026ldquo;영문자 + 숫자 + 특수문자를 최소 하나씩 포함하며, 8자 이상이고, 다른 문자는 허용하지 않음\u0026rdquo;\n→ 특수문자는 !@#$%^\u0026amp;*로 제한됨\n→ 공백이나 한글 등 다른 문자가 포함되면 검증 실패\n","permalink":"http://localhost:1313/record/2025-04-01-02/","summary":"\u003chr\u003e\r\n\u003cbr\u003e\r\n\u003ch2 id=\"정규-표현식regular-expression이란\"\u003e정규 표현식(Regular Expression)이란?\u003c/h2\u003e\n\u003cp\u003e**정규 표현식(정규식, regex)**은 특정 \u003cstrong\u003e문자열의 규칙을 표현하는 문법\u003c/strong\u003e이다.\u003cbr\u003e\n일종의 \u003cstrong\u003e패턴 언어\u003c/strong\u003e로, 문자열이 특정한 조건을 만족하는지 검사하거나, 일부를 추출하거나, 변환할 때 사용된다.\u003c/p\u003e\n\u003cbr\u003e\r\n\u003chr\u003e\r\n\u003cbr\u003e\r\n\u003ch3 id=\"1-정규-표현식은-언제-왜-사용하는가\"\u003e1. 정규 표현식은 언제, 왜 사용하는가?\u003c/h3\u003e\n\u003ch4 id=\"입력값-검증-validation\"\u003e입력값 검증 (Validation)\u003c/h4\u003e\n\u003cul\u003e\n\u003cli\u003e사용자가 입력한 값이 이메일 형식인지, 숫자인지, 비밀번호 조건에 맞는지 등을 검사할 때 사용한다.\u003c/li\u003e\n\u003cli\u003e프론트엔드/백엔드 양쪽에서 모두 널리 쓰인다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch4 id=\"문자열-추출-또는-치환\"\u003e문자열 추출 또는 치환\u003c/h4\u003e\n\u003cul\u003e\n\u003cli\u003e특정 문자나 단어가 포함된 부분을 찾아내거나, 그 값을 다른 값으로 바꾸는 작업도 가능하다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch4 id=\"패턴-기반-검색\"\u003e패턴 기반 검색\u003c/h4\u003e\n\u003cul\u003e\n\u003cli\u003e로그 분석, 텍스트 필터링, 문서 내 키워드 찾기 등에서 활용된다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cbr\u003e\r\n\u003chr\u003e\r\n\u003cbr\u003e\r\n\u003ch3 id=\"2-자주-사용하는-정규-표현식-기호\"\u003e2. 자주 사용하는 정규 표현식 기호\u003c/h3\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003e기호\u003c/th\u003e\n          \u003cth\u003e의미\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003ccode\u003e.\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003e임의의 한 문자 (개행 제외)\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003ccode\u003e^\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003e문자열의 시작\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003ccode\u003e$\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003e문자열의 끝\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003ccode\u003e*\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003e앞 문자가 0개 이상 반복\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003ccode\u003e+\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003e앞 문자가 1개 이상 반복\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003ccode\u003e?\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003e앞 문자가 0개 또는 1개\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003ccode\u003e[]\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003e괄호 안의 문자 중 하나\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003ccode\u003e()\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003e그룹 (하나의 단위로 묶음)\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003ccode\u003e\\\\d\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003e숫자 (0~9)\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003ccode\u003e\\\\w\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003e알파벳 또는 숫자 또는 밑줄\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003ccode\u003e\\\\s\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003e공백 문자 (스페이스, 탭 등)\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003ccode\u003e{n}\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003e정확히 n개 반복\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003ccode\u003e{n,}\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003en개 이상 반복\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003ccode\u003e{n,m}\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003en개 이상, m개 이하 반복\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003cbr\u003e\r\n\u003chr\u003e\r\n\u003cbr\u003e\r\n\u003ch2 id=\"createuserrequest-dto에-사용된-정규-표현식-분석\"\u003e\u003ccode\u003eCreateUserRequest\u003c/code\u003e DTO에 사용된 정규 표현식 분석\u003c/h2\u003e\n\u003ch3 id=\"1-이름-필드\"\u003e1. 이름 필드\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nd\"\u003e@Pattern\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eregexp\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;^[\\\\p{L}]+$\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003emessage\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;이름은 문자만 입력 가능합니다.\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"정규식-pl\"\u003e정규식: \u003ccode\u003e^[\\\\p{L}]+$\u003c/code\u003e\u003c/h4\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003e패턴\u003c/th\u003e\n          \u003cth\u003e의미\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003ccode\u003e^\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003e문자열 시작\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003ccode\u003e\\\\p{L}\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003e유니코드 문자 중 \u0026lsquo;Letter\u0026rsquo;(문자) 범주에 해당하는 모든 글자 (한글, 영어, 일본어 등 모두 포함)\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003ccode\u003e+\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003e1개 이상 반복\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003ccode\u003e$\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003e문자열 끝\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003e의미 요약\u003c/strong\u003e: \u0026ldquo;문자만 1자 이상 포함된 문자열이며, 처음부터 끝까지 모두 문자인 경우만 허용\u0026rdquo;\u003c/p\u003e","title":"정규 표현식을 활용한 사용자 등록 요청 데이터 검증"},{"content":"\r1. 해시(Hash)란? **해시 함수(hash function)**는 임의의 길이를 가진 입력값을 고정된 길이의 출력값으로 변환하는 함수다.\n출력값은 일반적으로 해시 값(hash value) 또는 **다이제스트(digest)**라고 부른다.\n예를 들어, \u0026ldquo;password123\u0026quot;이라는 문자열을 해시 함수에 넣으면,\nef92b778bafe771e89245b89ecbc08a44a4e166c06659911881f383d4473e94f 같은 고정된 길이의 문자열로 바뀐다.\n해시 함수의 주요 특징:\n입력값이 조금이라도 다르면 결과가 완전히 달라짐 해시 값만 보고는 원래 값을 알 수 없음 (일방향성) 같은 입력에 대해서는 항상 같은 출력이 나옴 2. 일반적인 해시 함수의 문제점 SHA-256, SHA-512 같은 일반적인 해시 함수는 속도가 매우 빠르다는 장점이 있지만,\n비밀번호 저장에는 오히려 그 점이 취약점이 된다.\n이유: 빠른 속도 때문에 공격자가 수백만 개의 비밀번호를 단시간에 대입해보는 Brute-force 공격이 가능하다. **Rainbow Table(무지개 테이블)**이라는 사전 해시값 DB를 활용해 평문 비밀번호를 유추할 수도 있다. 동일한 비밀번호는 항상 같은 해시 값을 가지기 때문에, 다른 사용자와의 중복 여부가 드러난다. 3. Bcrypt란? Bcrypt는 위와 같은 해시 함수의 한계를 극복하기 위해 고안된, 비밀번호 전용 해시 함수다.\n미국 Niels Provos와 David Mazières가 개발했으며, Blowfish 암호를 기반으로 설계되었다.\n4. Bcrypt의 주요 특징과 장점 느리도록 설계된 해시 함수 Bcrypt는 고의적으로 계산 속도를 느리게 만들어, Brute-force 공격에 강한 구조를 갖고 있다.\n속도를 조절할 수 있는 \u0026ldquo;work factor\u0026rdquo; 또는 \u0026ldquo;cost\u0026rdquo; 값을 설정함으로써, 컴퓨팅 성능이 좋아져도 보안을 유지할 수 있다.\n솔트(salt) 자동 추가 Bcrypt는 내부적으로 매번 **랜덤한 솔트(salt)**를 자동으로 생성하여 함께 해시한다.\n이를 통해 동일한 비밀번호라도 매번 다른 해시 값이 생성된다.\n즉, 두 사용자가 같은 비밀번호를 설정하더라도 해시 값이 완전히 다르다.\n결과 문자열 자체에 메타 정보 포함 Bcrypt가 반환하는 문자열은 다음 정보를 포함하고 있다:\n알고리즘 버전 ($2a$, $2b$ 등) cost(반복 횟수) 솔트 값 실제 해시 값 예시:\n$2a$10$7qKU8/1nB2Mb0Jt1Gm7sRuMO.zKYuCN7K45PxEknMzQBRZGeC2IsK\n5. 언제, 왜 Bcrypt를 써야 하는가? 구분 이유 비밀번호 저장 시 평문 저장은 절대 금지되며, 일반 해시 함수도 위험함 보안 공격 방어 Brute-force, rainbow table, 사전 공격에 대한 내성 시간 기반 방어 cost 조절로 해싱 속도를 느리게 해 공격 부담 증가 보안 가이드라인 준수 OWASP, NIST 등에서도 Bcrypt나 PBKDF2, Argon2 등 사용을 권장함 6. Spring Security에서의 Bcrypt 사용 예시 Spring에서는 BCryptPasswordEncoder 클래스를 통해 손쉽게 Bcrypt를 사용할 수 있다.\nimport org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder; BCryptPasswordEncoder encoder = new BCryptPasswordEncoder(); // 비밀번호 해시화 String hashedPassword = encoder.encode(\u0026#34;password123\u0026#34;); // 비밀번호 비교 boolean matches = encoder.matches(\u0026#34;password123\u0026#34;, hashedPassword); // true 주요 특징 .encode() 메서드는 자동으로 솔트를 포함해 해시 값을 생성 .matches()는 내부적으로 솔트를 추출하여 비교 수행 matches()가 true를 반환하면 비밀번호가 일치한다는 뜻 ","permalink":"http://localhost:1313/record/2025-04-01-03/","summary":"\u003chr\u003e\r\n\u003cbr\u003e\r\n\u003ch2 id=\"1-해시hash란\"\u003e1. 해시(Hash)란?\u003c/h2\u003e\n\u003cp\u003e**해시 함수(hash function)**는 임의의 길이를 가진 입력값을 고정된 길이의 출력값으로 변환하는 함수다.\u003cbr\u003e\n출력값은 일반적으로 \u003cstrong\u003e해시 값(hash value)\u003c/strong\u003e 또는 **다이제스트(digest)**라고 부른다.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e예를 들어, \u0026ldquo;password123\u0026quot;이라는 문자열을 해시 함수에 넣으면,\u003cbr\u003e\n\u003ccode\u003eef92b778bafe771e89245b89ecbc08a44a4e166c06659911881f383d4473e94f\u003c/code\u003e 같은 고정된 길이의 문자열로 바뀐다.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003e\u003cstrong\u003e해시 함수의 주요 특징:\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e입력값이 조금이라도 다르면 결과가 완전히 달라짐\u003c/li\u003e\n\u003cli\u003e해시 값만 보고는 원래 값을 알 수 없음 (일방향성)\u003c/li\u003e\n\u003cli\u003e같은 입력에 대해서는 항상 같은 출력이 나옴\u003c/li\u003e\n\u003c/ul\u003e\n\u003cbr\u003e\r\n\u003chr\u003e\r\n\u003cbr\u003e\r\n\u003ch2 id=\"2-일반적인-해시-함수의-문제점\"\u003e2. 일반적인 해시 함수의 문제점\u003c/h2\u003e\n\u003cp\u003eSHA-256, SHA-512 같은 일반적인 해시 함수는 속도가 매우 빠르다는 장점이 있지만,\u003cbr\u003e\n\u003cstrong\u003e비밀번호 저장\u003c/strong\u003e에는 오히려 그 점이 \u003cstrong\u003e취약점\u003c/strong\u003e이 된다.\u003c/p\u003e","title":"Bcrypt를 활용한 비밀번호 암호화"},{"content":"\r문제 숫자로 이루어진 문자열 t와 p가 주어질 때, t에서 p와 길이가 같은 부분문자열 중에서, 이 부분문자열이 나타내는 수가 p가 나타내는 수보다 작거나 같은 것이 나오는 횟수를 return하는 함수 solution을 완성하세요.\n예를 들어, t=\u0026ldquo;3141592\u0026quot;이고 p=\u0026ldquo;271\u0026rdquo; 인 경우, t의 길이가 3인 부분 문자열은 314, 141, 415, 159, 592입니다. 이 문자열이 나타내는 수 중 271보다 작거나 같은 수는 141, 159 2개 입니다.\n오답 일부 정답, 일부 런타임 에러 발생\nclass Solution { public int solution(String t, String p) { int count = 0; int pToInt = Integer.parseInt(p); for (int i = 0; i \u0026lt; t.length() - p.length() + 1; i++) { String s = t.substring(i, i + p.length()); int sToInt = Integer.parseInt(s); if (sToInt \u0026lt;= pToInt) count++; } return count; } } 원인: p의 길이가 최대 18이기 때문에, Long 범위를 초과할 수 있으며,\nInteger는 최대 2,147,483,647까지만 표현할 수 있어서 NumberFormatException이 발생할 수 있음.\n분석: long조차도 18자리 숫자를 담기엔 부족할 수 있으므로, 가장 안전한 방법은 문자열 자체를 비교하는 것\ncompareTo() 두 객체의 순서를 비교할 때 사용되며, 정렬 기준을 결정하는 데 주로 사용\n기본 구조와 반환값 a.compareTo(b) a와 b는 비교 대상 리턴값은 int 0: a와 b가 같다 \u0026lt; 0: a가 b보다 작다 \u0026gt; 0: a가 b보다 크다 문자열 비교 문자열 비교 시 compareTo()는 사전순 또는 유니코드 순서로 비교\n첫 글자부터 차례로 유니코드 값을 비교해서 판단 앞글자가 같으면 그다음 글자 비교 숫자 비교 int, double 같은 **기본형(primitive)**은 compareTo() 사용 불가 하지만 Integer, Long, Double 같은 **래퍼 클래스(Wrapper Class)**에서는 사용 가능 BigInteger, BigDecimal에서도 사용 가능 주의사항 null 값과 비교하면 NullPointerException 발생 문자열이 숫자로만 구성되었더라도, 길이가 다르면 compareTo()는 숫자 크기처럼 비교되지 않음 String 비교는 유니코드 기준이기 때문에, 정확한 숫자 크기 비교가 필요한 경우 BigInteger 또는 문자열 길이 + 문자 비교 방법이 더 안전함 compareTo()를 활용한 정답 class Solution { public int solution(String t, String p) { int len = p.length(); int count = 0; for (int i = 0; i \u0026lt; t.length() - len + 1; i++) { String s = t.substring(i, i + len); if (s.compareTo(p) \u0026lt;= 0) { count++; } } return count; } } ","permalink":"http://localhost:1313/record/2025-04-01-01/","summary":"\u003chr\u003e\r\n\u003cbr\u003e\r\n\u003ch2 id=\"문제\"\u003e문제\u003c/h2\u003e\n\u003cp\u003e숫자로 이루어진 문자열 t와 p가 주어질 때, t에서 p와 길이가 같은 부분문자열 중에서, 이 부분문자열이 나타내는 수가 p가 나타내는 수보다 작거나 같은 것이 나오는 횟수를 return하는 함수 solution을 완성하세요.\u003c/p\u003e\n\u003cp\u003e예를 들어, t=\u0026ldquo;3141592\u0026quot;이고 p=\u0026ldquo;271\u0026rdquo; 인 경우, t의 길이가 3인 부분 문자열은 314, 141, 415, 159, 592입니다. 이 문자열이 나타내는 수 중 271보다 작거나 같은 수는 141, 159 2개 입니다.\u003c/p\u003e\n\u003cbr\u003e\r\n\u003chr\u003e\r\n\u003cbr\u003e\r\n\u003ch2 id=\"오답\"\u003e오답\u003c/h2\u003e\n\u003cp\u003e일부 정답, 일부 런타임 에러 발생\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eSolution\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"nf\"\u003esolution\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003ecount\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003epToInt\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eInteger\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eparseInt\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"k\"\u003efor\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003elength\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003elength\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003esubstring\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003elength\u003c/span\u003e\u003cspan class=\"p\"\u003e());\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003esToInt\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eInteger\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eparseInt\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esToInt\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;=\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003epToInt\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003ecount\u003c/span\u003e\u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"k\"\u003ereturn\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"원인\"\u003e원인:\u003c/h3\u003e\n\u003cp\u003ep의 길이가 최대 18이기 때문에, Long 범위를 초과할 수 있으며,\u003cbr\u003e\nInteger는 최대 2,147,483,647까지만 표현할 수 있어서 NumberFormatException이 발생할 수 있음.\u003c/p\u003e","title":"문자열 사전순 비교: compareTo()"},{"content":" 인증(Authentication)과 인가(Authorization) 용어 의미 예시 인증 사용자가 누군지 확인하는 절차 로그인 (ID, PW 입력 후 사용자 확인) 인가 인증된 사용자가 무엇을 할 수 있는지 확인 본인이 쓴 글만 수정 가능, 관리자만 삭제 가능 → 인가는 항상 인증이 먼저 되어야 가능\nCookie 쿠키란? 클라이언트(브라우저)에 저장되는 작은 데이터 서버는 Set-Cookie라는 응답 헤더로 쿠키를 전달 이후 클라이언트는 모든 요청에 Cookie 값을 함께 보냄 왜 필요할까? HTTP는 기본적으로 Stateless(상태를 기억하지 않음) 이라서\n서버는 사용자가 누군지 매 요청마다 모르게 됨.\n→ 예: 로그인한 사용자인지 아닌지 모르니까, 매번 인증정보를 넣어야 함\n→ 그래서 사용자의 식별자 같은 정보를 쿠키에 저장해서 매번 같이 보냄\n쿠키 구조 Set-Cookie: userId=1; Max-Age=3600; Path=/; Domain=example.com; HttpOnly; Secure userId=1: 키-값 Max-Age=3600: 1시간 동안 유지 (없으면 브라우저 종료 시 삭제 = 세션 쿠키) HttpOnly: JS 접근 차단 (XSS 방지) Secure: HTTPS 통신에서만 쿠키 전송 Path=/: 어느 경로에서 쿠키를 사용할지 쿠키의 보안 문제 쿠키는 클라이언트가 임의로 조작 가능 브라우저 콘솔 → document.cookie → 값 수정 가능 탈취될 경우 누구든 userId를 바꾸고 접근 가능 민감 정보(userId, 주민번호 등)는 절대 저장 금지 Session 세션이란? 쿠키 방식의 보안 문제를 보완하기 위해 사용 서버가 상태를 저장하고, 클라이언트는 식별값만 가지고 있음 동작 흐름 로그인 성공 시, 서버가 랜덤한 sessionId를 생성 이 sessionId와 로그인한 사용자 정보를 서버 메모리에 저장 서버는 클라이언트에게 Set-Cookie: JSESSIONID=abc123 전송 이후 클라이언트가 요청할 때 JSESSIONID를 함께 전송 서버는 메모리에 저장된 세션을 보고 사용자 정보를 확인 사용자는 쿠키에 단순한 세션ID만 갖고 있고, 실제 정보는 모두 서버에 있음\n세션 문제점 서버 메모리를 사용 → 로그인 유저가 많아지면 메모리 터짐 서버가 여러 대일 경우, 세션 공유가 어려움 (Scale-Out의 한계) 세션 타임아웃 후 자동 로그아웃 (기본 30분) 모바일 앱이나 외부 API에는 불편 Token \u0026amp; JWT (JSON Web Token) Token이란? 클라이언트가 직접 가지고 있는 인증 정보 문자열로 이루어진 인증 수단 Cookie/Session 방식보다 Stateless해서 확장성이 뛰어남 JWT 구조 Header.Payload.Signature Header: 토큰의 정보 (알고리즘, 타입 등) Payload: 사용자 정보(Claims), 토큰 유효기간 등 Signature: 위의 두 개를 기반으로 암호화한 서명 (변조 방지용) 예시 Header: { \u0026#34;alg\u0026#34;: \u0026#34;HS256\u0026#34;, \u0026#34;typ\u0026#34;: \u0026#34;JWT\u0026#34; } Payload: { \u0026#34;sub\u0026#34;: \u0026#34;1\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Spring\u0026#34;, \u0026#34;exp\u0026#34;: 1710000000 } Signature: HMACSHA256( base64Url(header) + \u0026#34;.\u0026#34; + base64Url(payload), secret ) Header와 Payload는 Base64로 인코딩만 되어 있어서, 누구나 복호화 가능\n→ 민감 정보 저장 금지\nSignature는 서버만 아는 secret key로 암호화\n→ 변조 방지\nJWT 장점 vs 단점 장점 단점 DB 없이 유저 정보 포함 가능 Payload가 암호화되지 않음 Scale-Out에 유리 Token 탈취되면 대처 어려움 세션 없이 인증 처리 가능 Token 길이로 인한 트래픽 부담 Access Token \u0026amp; Refresh Token Access Token: API 요청에 사용하는 JWT Refresh Token: Access Token이 만료됐을 때 다시 발급받기 위한 Token → Refresh Token은 보통 DB에 저장하고 관리\n→ Access Token 유효기간은 짧게 (보안), Refresh Token은 상대적으로 길게\nServlet Filter 필터란? 모든 요청(Request)에 대해 가장 먼저 가로채는 중간 처리기 인증, 인코딩, 로깅 등 공통 관심사(Cross-cutting concerns) 처리에 사용 클라이언트 → [Filter] → [DispatcherServlet] → [Controller] 필터 구현 방법 Filter 인터페이스 구현 doFilter() 메서드에서 필터링 로직 작성 FilterRegistrationBean으로 필터 등록 @Configuration public class WebConfig { @Bean public FilterRegistrationBean\u0026lt;LoginFilter\u0026gt; loginFilter() { FilterRegistrationBean\u0026lt;LoginFilter\u0026gt; registration = new FilterRegistrationBean\u0026lt;\u0026gt;(); registration.setFilter(new LoginFilter()); registration.setOrder(1); registration.addUrlPatterns(\u0026#34;/*\u0026#34;); return registration; } } setOrder()는 실행 순서 (낮을수록 먼저 실행)\n실습 예시 /home 접근 시 Cookie에 userId 확인 없으면 로그인 페이지로 redirect 로그인 성공 시 userId 쿠키 생성 Filter에서 특정 URL 이외 요청에는 로그인 상태 확인 로그인 정보 없으면 예외 발생 핵심 정리 항목 설명 Cookie 클라이언트 저장, 보안 취약 Session 서버 저장, 메모리 사용 Token 클라이언트 저장, Stateless JWT Token 포맷, 변조 방지에 강함 Filter 공통 처리 로직 (인증, 로깅 등) ","permalink":"http://localhost:1313/record/2025-03-28/","summary":"\u003chr\u003e\n\u003ch2 id=\"인증authentication과-인가authorization\"\u003e인증(Authentication)과 인가(Authorization)\u003c/h2\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003e용어\u003c/th\u003e\n          \u003cth\u003e의미\u003c/th\u003e\n          \u003cth\u003e예시\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e인증\u003c/td\u003e\n          \u003ctd\u003e사용자가 \u003cstrong\u003e누군지 확인하는 절차\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd\u003e로그인 (ID, PW 입력 후 사용자 확인)\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e인가\u003c/td\u003e\n          \u003ctd\u003e인증된 사용자가 \u003cstrong\u003e무엇을 할 수 있는지 확인\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd\u003e본인이 쓴 글만 수정 가능, 관리자만 삭제 가능\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e→ 인가는 \u003cstrong\u003e항상 인증이 먼저\u003c/strong\u003e 되어야 가능\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"cookie\"\u003eCookie\u003c/h2\u003e\n\u003ch3 id=\"쿠키란\"\u003e쿠키란?\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e클라이언트(브라우저)에 저장되는 작은 데이터\u003c/li\u003e\n\u003cli\u003e서버는 \u003ccode\u003eSet-Cookie\u003c/code\u003e라는 응답 헤더로 쿠키를 전달\u003c/li\u003e\n\u003cli\u003e이후 클라이언트는 모든 요청에 \u003ccode\u003eCookie\u003c/code\u003e 값을 함께 보냄\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"왜-필요할까\"\u003e왜 필요할까?\u003c/h3\u003e\n\u003cp\u003eHTTP는 기본적으로 \u003cstrong\u003eStateless(상태를 기억하지 않음)\u003c/strong\u003e 이라서\u003cbr\u003e\n서버는 사용자가 누군지 매 요청마다 모르게 됨.\u003c/p\u003e","title":"Spring 심화 2"},{"content":" 1. Spring Container \u0026amp; Bean 1.1. Spring Container Spring 애플리케이션에서 객체(Bean)를 생성, 관리, 소멸하는 역할을 담당함.\n설정 파일이나 Annotation을 읽어 Bean을 생성하고 주입하는 과정을 컨트롤함. Java에서는 개발자가 객체를 직접 생성하지만, Spring에서는 Container가 관리함. Spring Container의 역할\nBean 생성, 관리, 의존성 주입을 담당함. 객체 간 결합도를 낮추어 OCP, DIP 원칙을 지킬 수 있음. Spring Container의 종류\nBeanFactory: Spring Container의 최상위 인터페이스 ApplicationContext: BeanFactory를 확장하여 다양한 기능 제공 (국제화, 환경변수, 이벤트, 리소스 조회 등) 실무에서는 ApplicationContext를 주로 사용함 → 보통 이것을 Spring Container라고 부름 1.2. Spring Bean Spring Container가 관리하는 객체를 의미함.\n일반 Java 객체에 Spring이 관리 권한을 부여하면 Bean이 됨. Spring Bean의 특징\nContainer에 의해 생성되고 관리됨 기본적으로 Singleton DI를 통해 다른 Bean과 의존관계를 가질 수 있음 생명주기(생성 → 초기화 → 사용 → 소멸)를 가짐 Bean 등록 방법\nXML 방식 (과거) Java Annotation (@Component, @Service 등) Java 설정 파일 (@Configuration + @Bean) // Annotation 방식 예시 @Component public class MyService { } @Configuration public class AppConfig { @Bean public MyService myService() { return new MyService(); } } 2. 객체 제어 원리 (IOC / DI) 2.1. IOC (Inversion of Control) 객체의 생성과 관리를 Spring Container가 담당하는 개념\n제어의 주체가 개발자에서 컨테이너로 바뀜 요리를 원하는 사람(개발자)이 직접 요리하지 않고, 요리사(Container)가 대신 요리해주는 개념 2.2. DI (Dependency Injection) Container가 객체 간의 의존성을 자동으로 주입해주는 개념\n개발자는 구현체를 직접 생성하지 않고, 인터페이스만 의존함 Spring이 객체 생성 → 주입까지 알아서 해줌 @Service public class MyServiceImpl implements MyService { private final MyRepository myRepository; @Autowired public MyServiceImpl(MyRepository myRepository) { this.myRepository = myRepository; } } DI 방식: 생성자 주입, Setter 주입, 필드 주입 등이 있음 필드 주입은 테스트 어려움, 순환 참조 발생 가능성으로 인해 실무에서는 권장되지 않음 3. Bean 등록 방식 3.1. 자동 등록 - @ComponentScan 지정된 패키지에서 @Component, @Service, @Repository, @Controller 등을 찾아 자동 등록함\n이 어노테이션들은 모두 @Component를 메타 어노테이션으로 포함하고 있음 @ComponentScan(basePackages = \u0026#34;com.example\u0026#34;) public class AppConfig { } 스캔 범위는 보통 애플리케이션의 루트 패키지부터 시작함 Spring Boot의 @SpringBootApplication은 @ComponentScan 포함 3.2. 수동 등록 - @Configuration, @Bean 개발자가 명시적으로 Java 설정 파일에 Bean 등록\n@Configuration public class AppConfig { @Bean public MyService myService() { return new MyServiceImpl(); } } 3.3. Bean 충돌 자동 vs 자동: 같은 이름의 Bean이 여러 개 존재하면 충돌 발생 → 예외 발생 자동 vs 수동: 수동 등록이 자동 등록을 오버라이드함 Spring Boot에서는 기본적으로 충돌 시 오류 발생 application.properties에서 설정 가능:\nspring.main.allow-bean-definition-overriding=true 4. 의존관계 설정 4.1. 의존관계 주입 @Autowired로 객체의 의존성을 주입받음\n생성자 주입 (권장), Setter 주입, 필드 주입 @Component public class MyApp { private final MyService myService; @Autowired public MyApp(MyService myService) { this.myService = myService; } } 4.2. 생성자 주입 불변성 보장, 테스트 용이성, 실수 방지 생성자가 하나면 @Autowired 생략 가능 final 필드에만 사용 가능 4.3. @RequiredArgsConstructor Lombok이 final 필드를 기반으로 생성자 자동 생성해주는 Annotation\n@RequiredArgsConstructor @Component public class MyApp { private final MyService myService; } 5. Bean 선택 충돌 해결 5.1. @Primary 같은 타입의 Bean이 여러 개일 때 우선순위 부여\n@Component @Primary public class MyServiceImplV1 implements MyService { } 5.2. @Qualifier 구분자 이름을 명시적으로 지정해 특정 Bean을 선택함\n@Autowired public MyApp(@Qualifier(\u0026#34;firstService\u0026#34;) MyService myService) { this.myService = myService; } 6. Singleton Pattern 6.1. Singleton 개요 인스턴스를 하나만 생성하여 공유하는 디자인 패턴\n메모리 절약, 동일 객체 사용 6.2. Spring의 Singleton Bean Spring Bean은 기본적으로 Singleton 수동 Singleton 구현 방식의 복잡함과 단점들을 Spring이 해결 6.3. Stateful Bean 주의 Bean은 무상태(stateless)로 설계해야 함\n상태를 가진 Bean은 동시성 문제 유발 가능 public class StatefulSingleton { private int value; // ❌ 상태를 가지면 안됨 } 7. Validation 7.1. BindingResult 검증 오류 정보를 보관하는 객체. Controller에서 유효성 검증 결과를 확인할 수 있음.\n@ModelAttribute 바로 뒤에 위치해야 함 필드 오류가 있어도 컨트롤러 호출 가능 오류 정보는 bindingResult.getAllErrors()로 확인 7.2. @ModelAttribute vs @RequestBody 요청 데이터를 바인딩하는 방식의 차이\n@ModelAttribute: 필드 단위 바인딩, 일부 실패해도 컨트롤러 호출 가능 @RequestBody: JSON 전체 파싱, 실패 시 컨트롤러 호출 불가 (BindingResult로 에러 처리 X) BindingResult 활용하여 JSON 오류 응답 처리 가능 7.3. Bean Validation 필드의 유효성을 Annotation으로 검증하는 표준 방식\n@NotBlank, @NotNull, @Range 등 사용 @Valid, @Validated와 함께 사용 spring-boot-starter-validation 의존성 필요 7.4. Field Error 개별 필드의 검증 오류 정보\nbindingResult.getFieldError() 등으로 확인 가능 @ModelAttribute 사용 시 부분 바인딩 가능 7.5. Validator 검증 로직을 수행하는 객체\nLocalValidatorFactoryBean이 글로벌 Validator로 자동 등록 타입 변환 실패한 필드는 Bean Validation 적용되지 않음 7.6. Error Message 에러 메시지는 기본 메시지 또는 커스터마이징 가능\n@NotBlank(message = \u0026quot;메시지\u0026quot;) 직접 설정 MessageSource 활용으로 다국어 지원 Spring의 DefaultMessageCodesResolver로 메시지 코드 생성 7.7. Object Error 객체 간 관계 또는 전체 검증 오류\n@ScriptAssert 가능하나, 자바 코드 방식 권장 예: 총합(price * count) 검증 → bindingResult.reject() 사용 7.8. Bean Validation의 충돌 등록/수정 요청마다 유효성 요구가 다를 때 발생\n하나의 DTO로 처리 시 상황별 제약 충돌 가능 7.9. groups 상황별로 다른 유효성 검증을 적용할 때 사용\n그룹 인터페이스 정의 후, @Validated(Group.class) 사용 Annotation에 groups = {} 지정 7.10. groups vs DTO 분리 실무에서는 DTO를 분리하는 방식 선호\n그룹 방식은 복잡하고 유지보수 어려움 어떤 필드가 어떤 상황에서 검증되는지 한눈에 파악하기 어려움 SaveRequestDto, UpdateRequestDto로 역할 분리 8. SOLID 원칙 SRP(단일 책임 원칙): 하나의 클래스는 하나의 책임만 가져야 한다. OCP(개방 폐쇄 원칙): 확장에는 열려 있고, 수정에는 닫혀 있어야 한다. LSP(리스코프 치환 원칙): 자식 클래스는 부모 클래스를 대체할 수 있어야 한다. ISP(인터페이스 분리 원칙): 작은 인터페이스 여러 개가 큰 범용 인터페이스보다 낫다. DIP(의존관계 역전 원칙): 구체적인 클래스가 아닌 추상화(인터페이스)에 의존해야 한다. ","permalink":"http://localhost:1313/record/2025-03-27-02/","summary":"\u003chr\u003e\n\u003ch2 id=\"1-spring-container--bean\"\u003e1. Spring Container \u0026amp; Bean\u003c/h2\u003e\n\u003ch3 id=\"11-spring-container\"\u003e1.1. Spring Container\u003c/h3\u003e\n\u003cp\u003eSpring 애플리케이션에서 객체(Bean)를 생성, 관리, 소멸하는 역할을 담당함.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e설정 파일이나 Annotation을 읽어 Bean을 생성하고 주입하는 과정을 컨트롤함.\u003c/li\u003e\n\u003cli\u003eJava에서는 개발자가 객체를 직접 생성하지만, Spring에서는 Container가 관리함.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cstrong\u003eSpring Container의 역할\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eBean 생성, 관리, 의존성 주입을 담당함.\u003c/li\u003e\n\u003cli\u003e객체 간 결합도를 낮추어 OCP, DIP 원칙을 지킬 수 있음.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cstrong\u003eSpring Container의 종류\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eBeanFactory: Spring Container의 최상위 인터페이스\u003c/li\u003e\n\u003cli\u003eApplicationContext: BeanFactory를 확장하여 다양한 기능 제공 (국제화, 환경변수, 이벤트, 리소스 조회 등)\u003c/li\u003e\n\u003cli\u003e실무에서는 ApplicationContext를 주로 사용함 → 보통 이것을 Spring Container라고 부름\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"12-spring-bean\"\u003e1.2. Spring Bean\u003c/h3\u003e\n\u003cp\u003eSpring Container가 관리하는 객체를 의미함.\u003c/p\u003e","title":"Spring 심화 1"},{"content":" 문제 설명 자연수 n이 매개변수로 주어집니다. n을 3진법 상에서 앞뒤로 뒤집은 후,\n이를 다시 10진법으로 표현한 수를 return 하도록 solution 함수를 완성해주세요.\n10진법 → k진법 n % k → 현재 자릿수 값 (맨 끝자리부터) n = n / k → 다음 자릿수를 위해 나눔 1~2를 반복하다가 n == 0이면 멈춤 나머지들을 역순으로 조합 k진법 → 10진법 int result = Integer.parseInt(\u0026#34;k진법으로 표현된 숫자\u0026#34;, k); 해당 문자열을 k진법으로 해석한 후 10진법 정수로 반환\n활용 class Solution { public int solution(int n) { String str = \u0026#34;\u0026#34;; while (n \u0026gt; 0) { str += n % 3; n /= 3; } return Integer.parseInt(str, 3); } } ","permalink":"http://localhost:1313/record/2025-03-27-01/","summary":"\u003chr\u003e\n\u003ch2 id=\"문제-설명\"\u003e문제 설명\u003c/h2\u003e\n\u003cp\u003e자연수 n이 매개변수로 주어집니다. n을 3진법 상에서 앞뒤로 뒤집은 후,\u003cbr\u003e\n이를 다시 10진법으로 표현한 수를 return 하도록 solution 함수를 완성해주세요.\u003c/p\u003e\n\u003cbr\u003e\r\n\u003ch2 id=\"10진법--k진법\"\u003e10진법 → k진법\u003c/h2\u003e\n\u003col\u003e\n\u003cli\u003en % k → 현재 자릿수 값 (맨 끝자리부터)\u003c/li\u003e\n\u003cli\u003en = n / k → 다음 자릿수를 위해 나눔\u003c/li\u003e\n\u003cli\u003e1~2를 반복하다가 n == 0이면 멈춤\u003c/li\u003e\n\u003cli\u003e나머지들을 역순으로 조합\u003c/li\u003e\n\u003c/ol\u003e\n\u003cbr\u003e\r\n\u003ch2 id=\"k진법--10진법\"\u003ek진법 → 10진법\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eresult\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eInteger\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eparseInt\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;k진법으로 표현된 숫자\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003ek\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e해당 문자열을 k진법으로 해석한 후 10진법 정수로 반환\u003c/p\u003e","title":"3진법 뒤집기"},{"content":" GitHub ▶ nbc-chapter-03-basic 1. 등록 시 createdAt, updatedAt Null createdAt, updatedAt는 DB에서 자동 갱신됨\n1.1. 문제 일정/사용자 등록 후 반환된 createdAt, updatedAt 값이 Null\n1.2. 원인 당연함\u0026hellip; 등록 요청 시 전달받은 정보를 응답 DTO에 넣어주고 그 값을 반환하는데\nDB에서 자동으로 업데이트 하는 값은 안 들어오니까 안 넣어줬고\u0026hellip;\nDB 조회해서 가져오기 전까지 당연히 Null임.\n1.3. 해결 전달받은 식별자를 통해 재 조회한 결과 반환\n2. 변경 요청 시 변경된 내용이 없을 경우 2.1. 문제 클라이언트가 기존 정보와 동일한 정보로 변경 요청 시\njdbcTempalte.update의 반환 값이 0이 올 것이라 예상했으나\n예상 결과와 다르게 동일한 값도 update 후 1이 반환됨\njdbcTemplate.update(\u0026hellip;)의 반환값: 영향받은 row의 개수\n2.2. 원인 동일한 값이어도 query의 문법 오류는 없으므로 실행됨\n2.3. 해결 repository에 전달하기 전에 변경 전 정보를 변수로 기억함.\n변경 후의 정보와 비교 후 동일한 값이면 204 No Content 응답 반환.\nQ\u0026hellip; 프론트에서 클라이언트에게 보여줄 메시지를 위해 해야 할 고민이었을까?\n하지만 데이터 관련 문제니까 백엔드에서 하는 게 맞는 것 같기도?\n3. DTO 목적별 분리 3.1. 문제 유효성 검증을 적용해야 하는데 등록할 때와 수정할 때의 필수 입력 값이 다름.\n등록할 때에는 이름과 이메일이 필수 입력 값이지만, 수정할 때에는 둘 다 Null이 가능함.\n3.2. 원인 하나의 requestDto를 등록/수정에서 같이 사용하고 있기 때문.\n3.3. 해결 DTO를 목적별로 분리하고 각 목적에 맞는 유효성 검증을 적용함.\n4. GET 요청 시 유효성 검증 실패 예외 메시지 4.1. 문제 @RequestParam에 @NotNull(message = \u0026ldquo;\u0026hellip;\u0026rdquo;) 같이 유효성 어노테이션을 붙였을 때,\n내가 작성한 예외 메시지 앞에 메서드 경로 정보가 포함되어 전달됨\u0026hellip;\n\u0026#34;message\u0026#34;: \u0026#34;findSchedulesWithUserByUserId.userId: userId는 필수 입력값입니다.\u0026#34; 4.2. 원인 @RequestParam + @Validated 조합에서는 내부적으로 ConstraintViolationException이 발생함. 이 예외 객체 안의 message는 \u0026lt;메서드이름\u0026gt;.\u0026lt;파라미터이름\u0026gt;: \u0026lt;어노테이션 message\u0026gt;와 같이 구성됨.\n4.3. 해결 파라미터들을 DTO로 묶은 후 @ModelAttribute로 받는 방식으로 변경\n/** * 일정 목록 조회 요청 DTO */ @Setter @Getter @NoArgsConstructor public class ScheduleQueryRequestDto { /** * 사용자 식별자 (필수) */ @NotNull(message = \u0026#34;사용자 ID는 필수 값입니다.\u0026#34;) private Long userId; ... } ","permalink":"http://localhost:1313/project/schedule-01/","summary":"\u003chr\u003e\n\u003ch2 id=\"github\"\u003eGitHub\u003c/h2\u003e\n\u003ch3 id=\"-nbc-chapter-03-basic\"\u003e▶ \u003ca href=\"https://github.com/withong/nbc-chapter-03-basic.git\"\u003enbc-chapter-03-basic\u003c/a\u003e\u003c/h3\u003e\n\u003chr\u003e\n\u003cbr\u003e\r\n\u003ch2 id=\"1-등록-시-createdat-updatedat-null\"\u003e1. 등록 시 createdAt, updatedAt Null\u003c/h2\u003e\n\u003cp\u003ecreatedAt, updatedAt는 DB에서 자동 갱신됨\u003c/p\u003e\n\u003ch3 id=\"11-문제\"\u003e1.1. 문제\u003c/h3\u003e\n\u003cp\u003e일정/사용자 등록 후 반환된 createdAt, updatedAt 값이 Null\u003c/p\u003e\n\u003ch3 id=\"12-원인\"\u003e1.2. 원인\u003c/h3\u003e\n\u003cp\u003e당연함\u0026hellip; 등록 요청 시 전달받은 정보를 응답 DTO에 넣어주고 그 값을 반환하는데\u003cbr\u003e\nDB에서 자동으로 업데이트 하는 값은 안 들어오니까 안 넣어줬고\u0026hellip;\u003cbr\u003e\nDB 조회해서 가져오기 전까지 당연히 Null임.\u003c/p\u003e\n\u003ch3 id=\"13-해결\"\u003e1.3. 해결\u003c/h3\u003e\n\u003cp\u003e전달받은 식별자를 통해 재 조회한 결과 반환\u003c/p\u003e\n\u003cbr\u003e\r\n\u003chr\u003e\r\n\u003cbr\u003e\r\n\u003ch2 id=\"2-변경-요청-시-변경된-내용이-없을-경우\"\u003e2. 변경 요청 시 변경된 내용이 없을 경우\u003c/h2\u003e\n\u003ch3 id=\"21-문제\"\u003e2.1. 문제\u003c/h3\u003e\n\u003cp\u003e클라이언트가 기존 정보와 동일한 정보로 변경 요청 시\u003cbr\u003e\njdbcTempalte.update의 반환 값이 0이 올 것이라 예상했으나\u003cbr\u003e\n예상 결과와 다르게 동일한 값도 update 후 1이 반환됨\u003c/p\u003e","title":"일정 관리 API (JDBC) 트러블 슈팅"},{"content":" 문제 설명 두 수를 입력받아 두 수의 최대공약수와 최소공배수를 반환하는 함수, solution을 완성해 보세요. 배열의 맨 앞에 최대공약수, 그다음 최소공배수를 넣어 반환하면 됩니다. 예를 들어 두 수 3, 12의 최대공약수는 3, 최소공배수는 12이므로 solution(3, 12)는 [3, 12]를 반환해야 합니다.\n코딩에서 쓰이는 공식 최대공약수(GCD): 유클리드 호제법 사용 GCD(a, b) = GCD(b, a % b) 나머지가 0이 될 때까지 반복하면, 그때의 값이 최대공약수\n최소공배수(LCM): LCM(a, b) = a * b / GCD(a, b) 곱해서 최대공약수로 나누면 최소공배수\npublic class Solution { public int[] solution(int n, int m) { int gcd = getGCD(n, m); int lcm = n * m / gcd; return new int[]{gcd, lcm}; } // 최대공약수 (유클리드 호제법) private int getGCD(int a, int b) { while (b != 0) { int temp = b; b = a % b; a = temp; } return a; } } java.math.BigInteger 내장 메서드 활용 Java 8 이상 사용 가능\nimport java.math.BigInteger; public class Solution { public int[] solution(int n, int m) { BigInteger a = BigInteger.valueOf(n); BigInteger b = BigInteger.valueOf(m); // 최대공약수 int gcd = a.gcd(b).intValue(); // 최소공배수 = (a * b) / gcd int lcm = n * m / gcd; return new int[]{gcd, lcm}; } } ","permalink":"http://localhost:1313/record/2025-03-25/","summary":"\u003chr\u003e\n\u003ch2 id=\"문제-설명\"\u003e문제 설명\u003c/h2\u003e\n\u003cp\u003e두 수를 입력받아 두 수의 최대공약수와 최소공배수를 반환하는 함수, solution을 완성해 보세요. 배열의 맨 앞에 최대공약수, 그다음 최소공배수를 넣어 반환하면 됩니다. 예를 들어 두 수 3, 12의 최대공약수는 3, 최소공배수는 12이므로 solution(3, 12)는 [3, 12]를 반환해야 합니다.\u003c/p\u003e\n\u003cbr\u003e\r\n\u003ch2 id=\"코딩에서-쓰이는-공식\"\u003e코딩에서 쓰이는 공식\u003c/h2\u003e\n\u003ch3 id=\"최대공약수gcd-유클리드-호제법-사용\"\u003e최대공약수(GCD): 유클리드 호제법 사용\u003c/h3\u003e\n\u003cp\u003eGCD(a, b) = GCD(b, a % b)\n나머지가 0이 될 때까지 반복하면, 그때의 값이 최대공약수\u003c/p\u003e\n\u003ch3 id=\"최소공배수lcm\"\u003e최소공배수(LCM):\u003c/h3\u003e\n\u003cp\u003eLCM(a, b) = a * b / GCD(a, b)\n곱해서 최대공약수로 나누면 최소공배수\u003c/p\u003e","title":"최대 공약수와 최소 공배수"},{"content":" Slf4j 인터페이스이며, Logback 같은 구현체를 사용할 수 있음.\nSpring Boot는 기본적으로 Logback을 제공.\nSystem.out.println() 대신 로깅 라이브러리를 사용.\nLog Level: TRACE → DEBUG → INFO → WARN → ERROR\n@Slf4j @RestController public class Slf4jController { @RequestMapping(\u0026#34;/logging\u0026#34;) public String logging() { String sparta = \u0026#34;Sparta\u0026#34;; log.info(\u0026#34;문자 info={}\u0026#34;, sparta); return \u0026#34;success\u0026#34;; } } Controller vs RestController @Controller: View 반환 (Thymeleaf, JSP 사용) @Controller public class ViewController { @RequestMapping(\u0026#34;/view\u0026#34;) public String example() { return \u0026#34;sparta\u0026#34;; // View Name 반환 } } @RestController: Data 반환 (REST API) @RestController public class ResponseController { @RequestMapping(\u0026#34;/string\u0026#34;) public String example() { return \u0026#34;sparta\u0026#34;; // HTTP Body에 Data 입력 } } Annotation @Component: Spring Bean 등록하는 역할을 수행. @Target: 애노테이션 적용 범위를 지정. @Retention: 유지 기간을 결정. (SOURCE, CLASS, RUNTIME) @Documented: 문서화 도구에 의해 문서화되도록 지정. RequestMapping 특정 URL 요청을 특정 메서드와 매핑함. 여러 요소(URL, HTTP Method 등)를 조합하여 매핑할 수 있음. Spring Boot 3.0부터 /example/ 대신 /example만 허용됨. @RestController public class RequestMappingController { @RequestMapping(value = \u0026#34;/v1\u0026#34;, method = RequestMethod.GET) public String exampleV1() { return \u0026#34;this is sparta!\u0026#34;; } @GetMapping(value = \u0026#34;/v2\u0026#34;) public String exampleV2() { return \u0026#34;this is sparta!\u0026#34;; } } PathVariable URL 값을 파라미터로 받아오는 방식. @GetMapping(\u0026#34;/{postId}\u0026#34;) public String pathVariable(@PathVariable Long postId) { return \u0026#34;Post ID: \u0026#34; + postId; } @GetMapping(\u0026#34;/{postId}/comments/{commentId}\u0026#34;) public String pathVariableMulti(@PathVariable Long postId, @PathVariable Long commentId) { return \u0026#34;Post ID: \u0026#34; + postId + \u0026#34;, Comment ID: \u0026#34; + commentId; } 특정 파라미터 매핑 Query Parameter 매핑 @GetMapping(value = \u0026#34;/users\u0026#34;, params = \u0026#34;gender=man\u0026#34;) public String params() { return \u0026#34;params API 호출됨\u0026#34;; } Header 매핑 @PostMapping(value = \u0026#34;/users\u0026#34;, headers = \u0026#34;Content-Type=application/json\u0026#34;) public String headers() { return \u0026#34;headers API 호출됨\u0026#34;; } MediaType 매핑 @PostMapping(value = \u0026#34;/users\u0026#34;, consumes = MediaType.APPLICATION_JSON_VALUE) public String consumes() { return \u0026#34;consumes API 호출됨\u0026#34;; } produces 속성을 이용해 특정 응답 타입을 지정할 수 있음. Spring이 지원하는 Parameter 요청 헤더 조회 @Slf4j @RestController public class RequestHeaderController { @GetMapping(\u0026#34;/request/headers\u0026#34;) public String headers(@RequestHeader(\u0026#34;host\u0026#34;) String host) { log.info(\u0026#34;host={}\u0026#34;, host); return \u0026#34;success\u0026#34;; } } MultiValueMap 여러 개의 값을 받을 때 사용 MultiValueMap\u0026lt;String, String\u0026gt; map = new LinkedMultiValueMap\u0026lt;\u0026gt;(); map.add(\u0026#34;key1\u0026#34;, \u0026#34;value1\u0026#34;); map.add(\u0026#34;key1\u0026#34;, \u0026#34;value2\u0026#34;); ","permalink":"http://localhost:1313/record/2025-03-19/","summary":"\u003chr\u003e\n\u003ch2 id=\"slf4j\"\u003eSlf4j\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e인터페이스이며, Logback 같은 구현체를 사용할 수 있음.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eSpring Boot는 기본적으로 Logback을 제공.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ccode\u003eSystem.out.println()\u003c/code\u003e 대신 로깅 라이브러리를 사용.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eLog Level: TRACE → DEBUG → INFO → WARN → ERROR\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nd\"\u003e@Slf4j\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nd\"\u003e@RestController\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eSlf4jController\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nd\"\u003e@RequestMapping\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;/logging\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"nf\"\u003elogging\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003esparta\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Sparta\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"n\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003einfo\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;문자 info={}\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003esparta\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"k\"\u003ereturn\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;success\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003chr\u003e\n\u003ch2 id=\"controller-vs-restcontroller\"\u003eController vs RestController\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003e@Controller\u003c/code\u003e: View 반환 (Thymeleaf, JSP 사용)\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nd\"\u003e@Controller\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eViewController\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nd\"\u003e@RequestMapping\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;/view\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"nf\"\u003eexample\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"k\"\u003ereturn\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;sparta\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"c1\"\u003e// View Name 반환\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e@RestController\u003c/code\u003e: Data 반환 (REST API)\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nd\"\u003e@RestController\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eResponseController\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nd\"\u003e@RequestMapping\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;/string\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"nf\"\u003eexample\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"k\"\u003ereturn\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;sparta\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"c1\"\u003e// HTTP Body에 Data 입력\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003chr\u003e\n\u003ch2 id=\"annotation\"\u003eAnnotation\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003e@Component\u003c/code\u003e: Spring Bean 등록하는 역할을 수행.\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e@Target\u003c/code\u003e: 애노테이션 적용 범위를 지정.\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e@Retention\u003c/code\u003e: 유지 기간을 결정. (SOURCE, CLASS, RUNTIME)\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e@Documented\u003c/code\u003e: 문서화 도구에 의해 문서화되도록 지정.\u003c/li\u003e\n\u003c/ul\u003e\n\u003chr\u003e\n\u003ch2 id=\"requestmapping\"\u003eRequestMapping\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e특정 URL 요청을 특정 메서드와 매핑함.\u003c/li\u003e\n\u003cli\u003e여러 요소(URL, HTTP Method 등)를 조합하여 매핑할 수 있음.\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eSpring Boot 3.0\u003c/code\u003e부터 \u003ccode\u003e/example/\u003c/code\u003e 대신 \u003ccode\u003e/example\u003c/code\u003e만 허용됨.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nd\"\u003e@RestController\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eRequestMappingController\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nd\"\u003e@RequestMapping\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003evalue\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;/v1\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003emethod\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eRequestMethod\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eGET\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"nf\"\u003eexampleV1\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"k\"\u003ereturn\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;this is sparta!\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nd\"\u003e@GetMapping\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003evalue\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;/v2\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"nf\"\u003eexampleV2\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"k\"\u003ereturn\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;this is sparta!\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"pathvariable\"\u003ePathVariable\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eURL 값을 파라미터로 받아오는 방식.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nd\"\u003e@GetMapping\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;/{postId}\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"nf\"\u003epathVariable\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nd\"\u003e@PathVariable\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eLong\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003epostId\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"k\"\u003ereturn\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Post ID: \u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003epostId\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nd\"\u003e@GetMapping\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;/{postId}/comments/{commentId}\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"nf\"\u003epathVariableMulti\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nd\"\u003e@PathVariable\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eLong\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003epostId\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"nd\"\u003e@PathVariable\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eLong\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003ecommentId\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"k\"\u003ereturn\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Post ID: \u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003epostId\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;, Comment ID: \u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003ecommentId\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003chr\u003e\n\u003ch2 id=\"특정-파라미터-매핑\"\u003e특정 파라미터 매핑\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eQuery Parameter 매핑\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nd\"\u003e@GetMapping\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003evalue\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;/users\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;gender=man\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"nf\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"k\"\u003ereturn\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;params API 호출됨\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003eHeader 매핑\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nd\"\u003e@PostMapping\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003evalue\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;/users\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eheaders\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Content-Type=application/json\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"nf\"\u003eheaders\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"k\"\u003ereturn\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;headers API 호출됨\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003eMediaType 매핑\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nd\"\u003e@PostMapping\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003evalue\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;/users\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003econsumes\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eMediaType\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eAPPLICATION_JSON_VALUE\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"nf\"\u003econsumes\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"k\"\u003ereturn\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;consumes API 호출됨\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eproduces\u003c/code\u003e 속성을 이용해 특정 응답 타입을 지정할 수 있음.\u003c/li\u003e\n\u003c/ul\u003e\n\u003chr\u003e\n\u003ch2 id=\"spring이-지원하는-parameter\"\u003eSpring이 지원하는 Parameter\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e요청 헤더 조회\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nd\"\u003e@Slf4j\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nd\"\u003e@RestController\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eRequestHeaderController\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nd\"\u003e@GetMapping\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;/request/headers\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"nf\"\u003eheaders\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nd\"\u003e@RequestHeader\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;host\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003ehost\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"n\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003einfo\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;host={}\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003ehost\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"k\"\u003ereturn\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;success\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003eMultiValueMap\n\u003cul\u003e\n\u003cli\u003e여러 개의 값을 받을 때 사용\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eMultiValueMap\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003emap\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003enew\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eLinkedMultiValueMap\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"n\"\u003emap\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eadd\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;key1\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;value1\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"n\"\u003emap\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eadd\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;key1\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;value2\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003chr\u003e","title":"Spring 기초 4"},{"content":" 1. MVC 패턴 Template Engine (템플릿 엔진) 동적인 웹 페이지를 생성하는 도구 HTML과 데이터를 결합해 서버에서 페이지를 렌더링함 대표적인 템플릿 엔진 Thymeleaf → Spring과 통합이 잘 되어 가장 많이 사용됨 JSP (Java Server Pages) → 예전에는 많이 사용했으나 현재는 거의 사용되지 않음 FreeMarker, Velocity, Mustache → 특정 환경에서 사용됨 과거에는 Java 코드로 직접 HTML을 생성했으나, 유지보수가 어려워서 HTML에 필요한 부분만 Java 코드로 처리하도록 발전함\nMVC 패턴 개요 원래 Servlet과 JSP만으로 웹 개발을 했으나, 비즈니스 로직과 UI가 한 파일에 섞이면서 유지보수가 어려워짐 MVC (Model-View-Controller) 패턴은 역할을 분리하여 코드의 유지보수를 쉽게 하기 위해 등장함 MVC 패턴 구조 컴포넌트 설명 Model 데이터를 저장하고 처리하는 역할 (비즈니스 로직) View 사용자에게 보여주는 UI (HTML, 템플릿 엔진) Controller 사용자의 요청을 받아 Model과 View를 연결 View가 변경되어도 Model(비즈니스 로직)에 영향을 주지 않도록 분리 Model이 변경되어도 View를 수정할 필요가 없음 MVC 패턴의 문제점 중복 코드 발생 dispatcher.forward(request, response) 호출이 중복됨 View의 경로 (/WEB-INF/views/...jsp)가 코드 곳곳에 하드코딩되어 변경이 어렵다 공통 기능이 많아질수록 Controller의 역할이 커짐 로깅, 인증, 인가 등의 기능이 모든 Controller에 중복 작성됨 → 프론트 컨트롤러 패턴\n2. 프론트 컨트롤러 패턴 프론트 컨트롤러란? 모든 요청을 하나의 컨트롤러(Servlet)에서 처리하는 패턴 공통 기능 (로그인 체크, 보안, 예외 처리 등)을 한 곳에서 처리할 수 있음 프론트 컨트롤러의 역할\n모든 요청을 받음 (DispatcherServlet이 역할 수행) 공통 기능을 처리 (인증, 보안, 로깅 등) 해당 요청을 적절한 Controller로 전달 프론트 컨트롤러의 문제점\n모든 Controller가 동일한 방식으로 응답해야 함 → 확장성이 떨어짐 → 어댑터 패턴 도입\n3. 어댑터 패턴 어댑터 패턴이란? 각기 다른 인터페이스를 가진 객체들이 함께 동작할 수 있도록 연결하는 패턴 Spring에서는 Handler Adapter가 역할을 수행함 장점\n새로운 컨트롤러가 추가되더라도 기존 공통 로직을 변경할 필요 없음 컨트롤러마다 다른 응답 형식을 사용할 수 있음 4. Spring MVC MVC 패턴 + 프론트 컨트롤러 패턴 + 어댑터 패턴이 적용된 웹 프레임워크 Spring MVC 구조 클라이언트 요청 → DispatcherServlet이 요청을 받음 Handler Mapping → 해당 요청을 처리할 Controller를 찾음 Handler Adapter → Controller가 다르면 적절한 어댑터를 사용하여 호출 Controller 실행 → 요청 처리 후 ModelAndView 반환 ViewResolver → 어떤 View를 렌더링할지 결정 View 렌더링 → 사용자에게 응답 DispatcherServlet Spring의 프론트 컨트롤러 역할 요청을 받아서 적절한 HandlerMapping, HandlerAdapter, ViewResolver를 실행 → DispatcherServlet이 모든 요청을 받아서 Spring 내부의 여러 기능을 조합하여 처리함\nHandler Mapping \u0026amp; Handler Adapter 컴포넌트 설명 Handler Mapping 요청 URL과 매칭되는 컨트롤러를 찾음 Handler Adapter 해당 컨트롤러를 실행할 수 있도록 도와줌 Spring Boot에서는 자동으로 Handler Mapping과 Handler Adapter가 등록됨\nSpring Boot의 자동 구성 (Handler Mapping \u0026amp; Adapter) HandlerMapping 종류 설명 RequestMappingHandlerMapping @RequestMapping이 붙은 컨트롤러를 매핑 BeanNameUrlHandlerMapping Bean 이름으로 매핑 HandlerAdapter 종류 설명 RequestMappingHandlerAdapter @RequestMapping 컨트롤러 실행 HttpRequestHandlerAdapter HttpRequestHandler 인터페이스 실행 SimpleControllerHandlerAdapter 옛날 Controller 인터페이스 실행 5. View Resolver View Resolver란? 컨트롤러에서 반환한 View 이름을 실제 View(JSP, Thymeleaf 등)로 변환하는 역할 ViewResolver 동작 방식\nController가 ModelAndView 객체를 반환\n→ model.addAttribute(\u0026quot;message\u0026quot;, \u0026quot;Hello Spring\u0026quot;)\n→ return \u0026quot;home\u0026quot;; View Resolver가 View 이름을 실제 경로로 변환\n→ /WEB-INF/views/home.jsp View 렌더링 및 응답 반환 Spring Boot에서 자동 등록되는 ViewResolver ViewResolver 종류 설명 BeanNameViewResolver Bean 이름을 기반으로 View를 찾음 InternalResourceViewResolver prefix와 suffix를 조합하여 View 경로 결정 Spring Boot에서는 application.properties에서 ViewResolver 설정 가능\nspring.mvc.view.prefix=/WEB-INF/views/ spring.mvc.view.suffix=.jsp 6. Spring MVC 동작 순서 정리 클라이언트가 HTTP 요청을 보냄 DispatcherServlet이 요청을 받음 Handler Mapping이 요청을 처리할 컨트롤러를 찾음 Handler Adapter가 적절한 컨트롤러를 실행함 Controller가 ModelAndView를 반환함 View Resolver가 적절한 View를 찾아 렌더링함 최종적으로 클라이언트에게 응답이 반환됨 7. InternalResourceViewResolver 동작 방식 InternalResourceViewResolver는 application.properties 설정을 기반으로 View 경로를 변환 return \u0026quot;home\u0026quot;; → /WEB-INF/views/home.jsp로 변환 후 View를 렌더링 Thymeleaf는 추가 설정 없이 자동으로 View를 렌더링함\n","permalink":"http://localhost:1313/record/2025-03-18-02/","summary":"\u003chr\u003e\n\u003ch2 id=\"1-mvc-패턴\"\u003e1. MVC 패턴\u003c/h2\u003e\n\u003ch3 id=\"template-engine-템플릿-엔진\"\u003eTemplate Engine (템플릿 엔진)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e동적인 웹 페이지를 생성하는 도구\u003c/li\u003e\n\u003cli\u003eHTML과 데이터를 결합해 서버에서 페이지를 렌더링함\u003c/li\u003e\n\u003cli\u003e대표적인 템플릿 엔진\n\u003cul\u003e\n\u003cli\u003eThymeleaf → Spring과 통합이 잘 되어 가장 많이 사용됨\u003c/li\u003e\n\u003cli\u003eJSP (Java Server Pages) → 예전에는 많이 사용했으나 현재는 거의 사용되지 않음\u003c/li\u003e\n\u003cli\u003eFreeMarker, Velocity, Mustache → 특정 환경에서 사용됨\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e과거에는 Java 코드로 직접 HTML을 생성했으나, 유지보수가 어려워서 HTML에 필요한 부분만 Java 코드로 처리하도록 발전함\u003c/p\u003e\n\u003chr\u003e\n\u003ch3 id=\"mvc-패턴-개요\"\u003eMVC 패턴 개요\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e원래 Servlet과 JSP만으로 웹 개발을 했으나, 비즈니스 로직과 UI가 한 파일에 섞이면서 유지보수가 어려워짐\u003c/li\u003e\n\u003cli\u003eMVC (Model-View-Controller) 패턴은 역할을 분리하여 코드의 유지보수를 쉽게 하기 위해 등장함\u003c/li\u003e\n\u003c/ul\u003e\n\u003chr\u003e\n\u003ch3 id=\"mvc-패턴-구조\"\u003eMVC 패턴 구조\u003c/h3\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003e컴포넌트\u003c/th\u003e\n          \u003cth\u003e설명\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eModel\u003c/td\u003e\n          \u003ctd\u003e데이터를 저장하고 처리하는 역할 (비즈니스 로직)\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eView\u003c/td\u003e\n          \u003ctd\u003e사용자에게 보여주는 UI (HTML, 템플릿 엔진)\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eController\u003c/td\u003e\n          \u003ctd\u003e사용자의 요청을 받아 Model과 View를 연결\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003cul\u003e\n\u003cli\u003eView가 변경되어도 Model(비즈니스 로직)에 영향을 주지 않도록 분리\u003c/li\u003e\n\u003cli\u003eModel이 변경되어도 View를 수정할 필요가 없음\u003c/li\u003e\n\u003c/ul\u003e\n\u003chr\u003e\n\u003ch3 id=\"mvc-패턴의-문제점\"\u003eMVC 패턴의 문제점\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e중복 코드 발생\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003edispatcher.forward(request, response)\u003c/code\u003e 호출이 중복됨\u003c/li\u003e\n\u003cli\u003eView의 경로 (\u003ccode\u003e/WEB-INF/views/...jsp\u003c/code\u003e)가 코드 곳곳에 하드코딩되어 변경이 어렵다\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e공통 기능이 많아질수록 Controller의 역할이 커짐\n\u003cul\u003e\n\u003cli\u003e로깅, 인증, 인가 등의 기능이 모든 Controller에 중복 작성됨\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e→ 프론트 컨트롤러 패턴\u003c/p\u003e","title":"Spring 기초 3"},{"content":" 1. 프레임워크와 라이브러리 프레임워크 (Framework) 소프트웨어 개발을 간편하게 만들기 위한 개발 환경. 일정한 틀(Frame) 안에서 개발해야 하며, 개발의 일관성을 제공함. 장점: 코드의 일관성, 보안 강화, 테스트 환경 제공, 커뮤니티 지원. 단점: 학습 곡선이 높음, 새로운 버전과의 호환성 문제 발생 가능, 구조 변경 어려움. 라이브러리 (Library) 특정 기능을 수행하는 코드의 모음. 개발자가 필요할 때 가져다 사용 가능. 장점: 개발 생산성 증가, 안정성이 높은 코드 활용 가능. 단점: 업데이트 또는 지원 중단 시 문제 발생, 호환성 이슈. 2. Annotation 코드에 메타데이터를 추가하는 기능으로, 컴파일러나 런타임에서 특정 동작을 트리거함.\n주요 어노테이션\n@Override: 상위 클래스의 메서드를 오버라이드함. @Deprecated: 더 이상 사용되지 않는 코드에 붙이며, 경고 발생. @SuppressWarnings: 컴파일 경고 억제. 사용자 정의 어노테이션도 가능하며, AOP (Aspect-Oriented Programming) 등의 기술과 결합하여 활용됨.\n3. Lombok 반복적인 코드(Boilerplate Code)를 자동으로 생성해주는 라이브러리. 주요 어노테이션 @Getter, @Setter: getter/setter 자동 생성. @ToString: toString() 자동 생성. @EqualsAndHashCode: equals() 및 hashCode() 자동 생성. @NoArgsConstructor, @AllArgsConstructor: 생성자 자동 생성. @Data: @Getter, @Setter, @ToString 등을 포함한 종합 어노테이션. @Builder: 빌더 패턴 적용. @Slf4j: 로깅 객체 자동 생성. 4. Spring Framework와 Spring Boot Spring Framework Java 기반의 엔터프라이즈 애플리케이션 개발 프레임워크. 대형 시스템(쇼핑몰, 금융 등) 개발 시 많은 트래픽과 보안, 유지보수 문제를 해결해 줌. 특징 객체지향 프로그래밍(OOP)의 특징(캡슐화, 상속, 다형성 등) 활용. 유연한 애플리케이션 구성 가능. 오픈소스 및 다양한 모듈 지원. Spring Boot Spring Framework를 더 쉽고 빠르게 사용할 수 있도록 만든 도구. Spring Boot의 특징 자동 설정(Auto-configuration): 설정 없이 기본값으로 동작. 내장 웹 서버(Tomcat 포함): 별도의 WAS 설치 없이 실행 가능. 스타터 패키지 제공: spring-boot-starter-web 추가 시 자동으로 웹 애플리케이션 환경 구성. 5. Gradle (빌드 관리 도구) Groovy 기반의 빌드 자동화 도구로, 다양한 소프트웨어 빌드를 유연하게 처리할 수 있음. 특징 Build Cache: 빌드 결과물 재사용하여 속도 향상. 점진적 빌드: 변경된 부분만 빌드하여 효율성 증가. 멀티 프로젝트 빌드 지원: 독립적인 모듈을 관리 가능. 설정 주입 방식: 프로젝트별 설정을 다르게 적용 가능. build.gradle 프로젝트의 빌드 설정을 관리하는 파일. 주요 구성 요소 플러그인 plugins { id \u0026#39;java\u0026#39; id \u0026#39;org.springframework.boot\u0026#39; version \u0026#39;3.1.5\u0026#39; id \u0026#39;io.spring.dependency-management\u0026#39; version \u0026#39;1.1.3\u0026#39; } 의존성 관리 dependencies { implementation \u0026#39;org.springframework.boot:spring-boot-starter-web\u0026#39; implementation \u0026#39;org.springframework.boot:spring-boot-starter-data-jpa\u0026#39; compileOnly \u0026#39;org.projectlombok:lombok\u0026#39; runtimeOnly \u0026#39;com.mysql:mysql-connector-j\u0026#39; } 저장소 설정 repositories { mavenCentral() } 6. Java 웹 기술의 역사 ① Servlet의 등장 (1997) Java 기반의 웹 개발이 시작됨. 클라이언트 요청을 받아 동적으로 HTML을 생성. 단점: 코드가 복잡하고 유지보수 어려움. ② JSP (JavaServer Pages) 도입 (1999) HTML 코드 내에 Java 코드를 삽입할 수 있도록 개선됨. 단점: 비즈니스 로직과 UI 분리가 어려움. ③ Servlet \u0026amp; JSP 기반의 MVC 패턴 도입 MVC (Model-View-Controller) 패턴 적용하여 구조화된 개발 방식 등장. 장점: 유지보수성 향상, 역할 분리 가능. 단점: 반복적인 설정 작업이 필요함. ④ MVC 프레임워크의 등장 (2000~2010) Struts, Spring MVC 등의 프레임워크 등장. 장점: 설정 자동화 및 구조적인 개발 가능. 단점: 여전히 복잡한 설정이 존재. ⑤ Annotation 기반의 Spring MVC (2007~현재) 어노테이션(@Controller, @RequestMapping 등) 활용하여 설정 복잡성 감소. 장점: 간결하고 직관적인 웹 개발 가능. ⑥ Spring Boot 등장 (2014~현재) 기존 Spring Framework의 설정을 자동화하고 내장 웹 서버 제공. 장점: 빠른 애플리케이션 개발 가능. 7. 최신 Java 웹 기술 동향 ① Spring MVC (Web Servlet) 동기 프로그래밍 기반으로 안정적인 웹 애플리케이션 개발 가능. 현재 가장 많이 사용되는 방식. ② Spring WebFlux (Web Reactive) 비동기 \u0026amp; 논블로킹(Non-blocking) 방식을 지원하는 웹 프레임워크. 높은 동시성을 요구하는 시스템에서 사용되며, Netty 등의 비동기 서버 기반으로 동작. ","permalink":"http://localhost:1313/record/2025-03-18-01/","summary":"\u003chr\u003e\n\u003ch2 id=\"1-프레임워크와-라이브러리\"\u003e1. 프레임워크와 라이브러리\u003c/h2\u003e\n\u003ch3 id=\"프레임워크-framework\"\u003e프레임워크 (Framework)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e소프트웨어 개발을 간편하게 만들기 위한 개발 환경.\u003c/li\u003e\n\u003cli\u003e일정한 틀(Frame) 안에서 개발해야 하며, 개발의 일관성을 제공함.\u003c/li\u003e\n\u003cli\u003e장점: 코드의 일관성, 보안 강화, 테스트 환경 제공, 커뮤니티 지원.\u003c/li\u003e\n\u003cli\u003e단점: 학습 곡선이 높음, 새로운 버전과의 호환성 문제 발생 가능, 구조 변경 어려움.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"라이브러리-library\"\u003e라이브러리 (Library)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e특정 기능을 수행하는 코드의 모음.\u003c/li\u003e\n\u003cli\u003e개발자가 필요할 때 가져다 사용 가능.\u003c/li\u003e\n\u003cli\u003e장점: 개발 생산성 증가, 안정성이 높은 코드 활용 가능.\u003c/li\u003e\n\u003cli\u003e단점: 업데이트 또는 지원 중단 시 문제 발생, 호환성 이슈.\u003c/li\u003e\n\u003c/ul\u003e\n\u003chr\u003e\n\u003ch2 id=\"2-annotation\"\u003e2. Annotation\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e코드에 메타데이터를 추가하는 기능으로, 컴파일러나 런타임에서 특정 동작을 트리거함.\u003c/p\u003e","title":"Spring 기초 2"},{"content":" 네트워크 인터넷(Internet) TCP/IP 기반으로 동작하는 글로벌 네트워크. 데이터 전송을 위해 유선(해저 케이블) 및 무선(위성 통신) 활용. 인터넷 프로토콜(IP, Internet Protocol) 네트워크 내에서 기기를 식별하는 주소 체계. 예시: 192.168.0.1 IP 방식의 문제점 애플리케이션 구분 불가능. 비연결성: 수신 대상의 상태를 고려하지 않고 전송. 비신뢰성: 패킷 손실 및 순서 뒤섞임 가능. TCP와 UDP TCP(Transmission Control Protocol) 신뢰성 있는 데이터 전송 (3-Way Handshake 방식). 패킷 순서 보장 및 오류 검출 가능. UDP(User Datagram Protocol) 빠른 전송 속도를 우선시 (비신뢰성 전송). 실시간 스트리밍, 온라인 게임 등에 사용. PORT 같은 IP에서 여러 프로세스를 구분하는 번호. 주요 포트 번호: HTTP(80), HTTPS(443), FTP(21), SSH(22). Web DNS(Domain Name System) 도메인과 IP 주소를 매핑하는 시스템. 사람이 이해하기 쉬운 도메인(google.com)을 IP 주소로 변환. URI(Uniform Resource Identifier) 인터넷 자원의 고유 식별자. URL(Uniform Resource Locator) 리소스의 위치를 나타내는 형식 (https://spartacodingclub.kr/). 브라우저에 URL을 입력하면 사용자가 브라우저에 URL을 입력. DNS 조회를 통해 도메인에 해당하는 IP 주소 확인. 웹 브라우저가 HTTP 요청을 생성. 요청 패킷이 서버로 전송. 서버에서 HTTP 요청을 처리 후 응답 생성. 응답 패킷이 클라이언트로 전송. 브라우저가 응답 데이터를 렌더링하여 화면 표시. 용어 모음 프로그래밍 명명규칙(Casing) snake_case: Python, DB 테이블에서 사용 (user_name). camelCase: Java, JavaScript에서 변수 및 메서드 이름에 사용 (userName). PascalCase: 클래스 및 객체 이름에 사용 (UserName). kebab-case: URL 및 CSS에서 사용 (user-name). JSON(JavaScript Object Notation) 클라이언트-서버 간 데이터 교환을 위한 경량 데이터 포맷. XML 대비 가독성이 뛰어나고 용량이 작음. Scale Up, Scale Out Scale Up: 단일 서버의 성능 향상 (CPU, RAM 증가). Scale Out: 여러 대의 서버 확장 (부하 분산). Stateful vs Stateless Stateful: 클라이언트의 상태를 유지해야 하는 서비스. Stateless: 서버가 클라이언트 상태를 저장하지 않음 (확장성 우수). Connection vs Connectionless Connection: 지속적 연결 유지 (HTTP/1.0). Connectionless: 필요할 때만 연결 (HTTP/1.1, HTTP/2). HTTP HTTP(HyperText Transfer Protocol) 인터넷 상에서 클라이언트와 서버 간 데이터를 교환하는 프로토콜. HTTP 특징 Stateless(무상태): 클라이언트의 상태를 저장하지 않음. Connectionless(비연결): 요청-응답 후 연결을 끊음. HTTP Message 구조 Request (요청) Start Line: HTTP Method, URL, HTTP Version. Header: 추가적인 요청 정보 (예: Content-Type). Body: 요청 데이터 포함 (POST 요청 등). Response (응답) Status Code: 요청의 처리 결과 (200 OK, 404 Not Found 등). Header: 응답 메타데이터. Body: 응답 데이터. HTTP Method와 상태 코드 HTTP Method GET: 데이터 조회. POST: 데이터 생성. PUT: 데이터 전체 수정. PATCH: 데이터 일부 수정. DELETE: 데이터 삭제. HTTP 상태 코드 200 OK: 정상 응답. 201 Created: 리소스 생성 완료. 400 Bad Request: 잘못된 요청. 401 Unauthorized: 인증 필요. 404 Not Found: 리소스 없음. 500 Internal Server Error: 서버 내부 오류. HTTP Header HTTP Header의 역할 요청과 응답의 부가 정보 제공. 자주 사용하는 Header Content-Type: 데이터 형식 지정 (application/json). Authorization: 인증 정보 포함. Cache-Control: 캐시 정책 (max-age, no-cache 등). Set-Cookie: 쿠키 설정 (세션 관리). Restful API REST (Representational State Transfer) 리소스를 기반으로 한 API 설계 원칙. RESTful API 설계 예시 POST /boards → 게시글 생성. GET /boards → 게시글 목록 조회. GET /boards/{id} → 특정 게시글 조회. PUT /boards/{id} → 게시글 수정. DELETE /boards/{id} → 게시글 삭제. Web Application Web Server vs WAS(Web Application Server) Web Server: 정적 콘텐츠 제공 (예: Nginx, Apache). WAS: 동적 콘텐츠 처리 (예: Tomcat, Spring Boot). Web System 구성 프론트엔드(클라이언트) → 백엔드(WAS) → 데이터베이스(DB). Servlet Servlet Java 기반 웹 애플리케이션을 처리하는 기술. Servlet 동작 순서 클라이언트가 요청 전송. Servlet Container가 요청을 분석하여 Servlet 실행. Servlet이 요청을 처리하고 응답 생성. 응답이 클라이언트에게 전달됨. Thread Thread 하나의 프로세스 내에서 실행되는 작업 단위. Multi-Thread 여러 작업을 동시에 실행하는 기술 (서버 성능 향상 가능). SSR(Server Side Rendering) vs CSR(Client Side Rendering) SSR: 서버에서 HTML을 생성하여 클라이언트로 전송 (초기 로딩 속도 빠름). CSR: 클라이언트에서 JavaScript를 이용해 동적으로 렌더링 (SPA에서 주로 사용). ","permalink":"http://localhost:1313/record/2025-03-17/","summary":"\u003chr\u003e\n\u003ch2 id=\"네트워크\"\u003e네트워크\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e인터넷(Internet)\n\u003cul\u003e\n\u003cli\u003eTCP/IP 기반으로 동작하는 글로벌 네트워크.\u003c/li\u003e\n\u003cli\u003e데이터 전송을 위해 유선(해저 케이블) 및 무선(위성 통신) 활용.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e인터넷 프로토콜(IP, Internet Protocol)\n\u003cul\u003e\n\u003cli\u003e네트워크 내에서 기기를 식별하는 주소 체계.\u003c/li\u003e\n\u003cli\u003e예시: \u003ccode\u003e192.168.0.1\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eIP 방식의 문제점\n\u003cul\u003e\n\u003cli\u003e애플리케이션 구분 불가능.\u003c/li\u003e\n\u003cli\u003e비연결성: 수신 대상의 상태를 고려하지 않고 전송.\u003c/li\u003e\n\u003cli\u003e비신뢰성: 패킷 손실 및 순서 뒤섞임 가능.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003chr\u003e\n\u003ch3 id=\"tcp와-udp\"\u003eTCP와 UDP\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eTCP(Transmission Control Protocol)\n\u003cul\u003e\n\u003cli\u003e신뢰성 있는 데이터 전송 (3-Way Handshake 방식).\u003c/li\u003e\n\u003cli\u003e패킷 순서 보장 및 오류 검출 가능.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eUDP(User Datagram Protocol)\n\u003cul\u003e\n\u003cli\u003e빠른 전송 속도를 우선시 (비신뢰성 전송).\u003c/li\u003e\n\u003cli\u003e실시간 스트리밍, 온라인 게임 등에 사용.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003ePORT\n\u003cul\u003e\n\u003cli\u003e같은 IP에서 여러 프로세스를 구분하는 번호.\u003c/li\u003e\n\u003cli\u003e주요 포트 번호: HTTP(80), HTTPS(443), FTP(21), SSH(22).\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003chr\u003e\n\u003ch2 id=\"web\"\u003eWeb\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eDNS(Domain Name System)\n\u003cul\u003e\n\u003cli\u003e도메인과 IP 주소를 매핑하는 시스템.\u003c/li\u003e\n\u003cli\u003e사람이 이해하기 쉬운 도메인(\u003ccode\u003egoogle.com\u003c/code\u003e)을 IP 주소로 변환.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eURI(Uniform Resource Identifier)\n\u003cul\u003e\n\u003cli\u003e인터넷 자원의 고유 식별자.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eURL(Uniform Resource Locator)\n\u003cul\u003e\n\u003cli\u003e리소스의 위치를 나타내는 형식 (\u003ccode\u003ehttps://spartacodingclub.kr/\u003c/code\u003e).\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003chr\u003e\n\u003ch3 id=\"브라우저에-url을-입력하면\"\u003e브라우저에 URL을 입력하면\u003c/h3\u003e\n\u003col\u003e\n\u003cli\u003e사용자가 브라우저에 URL을 입력.\u003c/li\u003e\n\u003cli\u003eDNS 조회를 통해 도메인에 해당하는 IP 주소 확인.\u003c/li\u003e\n\u003cli\u003e웹 브라우저가 HTTP 요청을 생성.\u003c/li\u003e\n\u003cli\u003e요청 패킷이 서버로 전송.\u003c/li\u003e\n\u003cli\u003e서버에서 HTTP 요청을 처리 후 응답 생성.\u003c/li\u003e\n\u003cli\u003e응답 패킷이 클라이언트로 전송.\u003c/li\u003e\n\u003cli\u003e브라우저가 응답 데이터를 렌더링하여 화면 표시.\u003c/li\u003e\n\u003c/ol\u003e\n\u003chr\u003e\n\u003ch2 id=\"용어-모음\"\u003e용어 모음\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e프로그래밍 명명규칙(Casing)\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003esnake_case\u003c/code\u003e: Python, DB 테이블에서 사용 (\u003ccode\u003euser_name\u003c/code\u003e).\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ecamelCase\u003c/code\u003e: Java, JavaScript에서 변수 및 메서드 이름에 사용 (\u003ccode\u003euserName\u003c/code\u003e).\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ePascalCase\u003c/code\u003e: 클래스 및 객체 이름에 사용 (\u003ccode\u003eUserName\u003c/code\u003e).\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ekebab-case\u003c/code\u003e: URL 및 CSS에서 사용 (\u003ccode\u003euser-name\u003c/code\u003e).\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eJSON(JavaScript Object Notation)\n\u003cul\u003e\n\u003cli\u003e클라이언트-서버 간 데이터 교환을 위한 경량 데이터 포맷.\u003c/li\u003e\n\u003cli\u003eXML 대비 가독성이 뛰어나고 용량이 작음.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eScale Up, Scale Out\n\u003cul\u003e\n\u003cli\u003eScale Up: 단일 서버의 성능 향상 (CPU, RAM 증가).\u003c/li\u003e\n\u003cli\u003eScale Out: 여러 대의 서버 확장 (부하 분산).\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eStateful vs Stateless\n\u003cul\u003e\n\u003cli\u003eStateful: 클라이언트의 상태를 유지해야 하는 서비스.\u003c/li\u003e\n\u003cli\u003eStateless: 서버가 클라이언트 상태를 저장하지 않음 (확장성 우수).\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eConnection vs Connectionless\n\u003cul\u003e\n\u003cli\u003eConnection: 지속적 연결 유지 (HTTP/1.0).\u003c/li\u003e\n\u003cli\u003eConnectionless: 필요할 때만 연결 (HTTP/1.1, HTTP/2).\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003chr\u003e\n\u003ch2 id=\"http\"\u003eHTTP\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eHTTP(HyperText Transfer Protocol)\n\u003cul\u003e\n\u003cli\u003e인터넷 상에서 클라이언트와 서버 간 데이터를 교환하는 프로토콜.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eHTTP 특징\n\u003cul\u003e\n\u003cli\u003eStateless(무상태): 클라이언트의 상태를 저장하지 않음.\u003c/li\u003e\n\u003cli\u003eConnectionless(비연결): 요청-응답 후 연결을 끊음.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eHTTP Message 구조\n\u003cul\u003e\n\u003cli\u003eRequest (요청)\n\u003cul\u003e\n\u003cli\u003eStart Line: HTTP Method, URL, HTTP Version.\u003c/li\u003e\n\u003cli\u003eHeader: 추가적인 요청 정보 (예: \u003ccode\u003eContent-Type\u003c/code\u003e).\u003c/li\u003e\n\u003cli\u003eBody: 요청 데이터 포함 (POST 요청 등).\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eResponse (응답)\n\u003cul\u003e\n\u003cli\u003eStatus Code: 요청의 처리 결과 (\u003ccode\u003e200 OK\u003c/code\u003e, \u003ccode\u003e404 Not Found\u003c/code\u003e 등).\u003c/li\u003e\n\u003cli\u003eHeader: 응답 메타데이터.\u003c/li\u003e\n\u003cli\u003eBody: 응답 데이터.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003chr\u003e\n\u003ch3 id=\"http-method와-상태-코드\"\u003eHTTP Method와 상태 코드\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eHTTP Method\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eGET\u003c/code\u003e: 데이터 조회.\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ePOST\u003c/code\u003e: 데이터 생성.\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ePUT\u003c/code\u003e: 데이터 전체 수정.\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ePATCH\u003c/code\u003e: 데이터 일부 수정.\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eDELETE\u003c/code\u003e: 데이터 삭제.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eHTTP 상태 코드\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003e200 OK\u003c/code\u003e: 정상 응답.\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e201 Created\u003c/code\u003e: 리소스 생성 완료.\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e400 Bad Request\u003c/code\u003e: 잘못된 요청.\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e401 Unauthorized\u003c/code\u003e: 인증 필요.\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e404 Not Found\u003c/code\u003e: 리소스 없음.\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e500 Internal Server Error\u003c/code\u003e: 서버 내부 오류.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003chr\u003e\n\u003ch3 id=\"http-header\"\u003eHTTP Header\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eHTTP Header의 역할\n\u003cul\u003e\n\u003cli\u003e요청과 응답의 부가 정보 제공.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e자주 사용하는 Header\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eContent-Type\u003c/code\u003e: 데이터 형식 지정 (\u003ccode\u003eapplication/json\u003c/code\u003e).\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eAuthorization\u003c/code\u003e: 인증 정보 포함.\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eCache-Control\u003c/code\u003e: 캐시 정책 (\u003ccode\u003emax-age\u003c/code\u003e, \u003ccode\u003eno-cache\u003c/code\u003e 등).\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eSet-Cookie\u003c/code\u003e: 쿠키 설정 (세션 관리).\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003chr\u003e\n\u003ch2 id=\"restful-api\"\u003eRestful API\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eREST (Representational State Transfer)\n\u003cul\u003e\n\u003cli\u003e리소스를 기반으로 한 API 설계 원칙.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eRESTful API 설계 예시\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003ePOST /boards\u003c/code\u003e → 게시글 생성.\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eGET /boards\u003c/code\u003e → 게시글 목록 조회.\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eGET /boards/{id}\u003c/code\u003e → 특정 게시글 조회.\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ePUT /boards/{id}\u003c/code\u003e → 게시글 수정.\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eDELETE /boards/{id}\u003c/code\u003e → 게시글 삭제.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003chr\u003e\n\u003ch2 id=\"web-application\"\u003eWeb Application\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eWeb Server vs WAS(Web Application Server)\n\u003cul\u003e\n\u003cli\u003eWeb Server: 정적 콘텐츠 제공 (예: Nginx, Apache).\u003c/li\u003e\n\u003cli\u003eWAS: 동적 콘텐츠 처리 (예: Tomcat, Spring Boot).\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eWeb System 구성\n\u003cul\u003e\n\u003cli\u003e프론트엔드(클라이언트) → 백엔드(WAS) → 데이터베이스(DB).\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003chr\u003e\n\u003ch3 id=\"servlet\"\u003eServlet\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eServlet\n\u003cul\u003e\n\u003cli\u003eJava 기반 웹 애플리케이션을 처리하는 기술.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eServlet 동작 순서\n\u003col\u003e\n\u003cli\u003e클라이언트가 요청 전송.\u003c/li\u003e\n\u003cli\u003eServlet Container가 요청을 분석하여 Servlet 실행.\u003c/li\u003e\n\u003cli\u003eServlet이 요청을 처리하고 응답 생성.\u003c/li\u003e\n\u003cli\u003e응답이 클라이언트에게 전달됨.\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003chr\u003e\n\u003ch3 id=\"thread\"\u003eThread\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eThread\n\u003cul\u003e\n\u003cli\u003e하나의 프로세스 내에서 실행되는 작업 단위.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eMulti-Thread\n\u003cul\u003e\n\u003cli\u003e여러 작업을 동시에 실행하는 기술 (서버 성능 향상 가능).\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003chr\u003e\n\u003ch3 id=\"ssrserver-side-rendering-vs-csrclient-side-rendering\"\u003eSSR(Server Side Rendering) vs CSR(Client Side Rendering)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eSSR: 서버에서 HTML을 생성하여 클라이언트로 전송 (초기 로딩 속도 빠름).\u003c/li\u003e\n\u003cli\u003eCSR: 클라이언트에서 JavaScript를 이용해 동적으로 렌더링 (SPA에서 주로 사용).\u003c/li\u003e\n\u003c/ul\u003e\n\u003chr\u003e","title":"Spring 기초 1"},{"content":" 코드의 주요 기능 CartItem 클래스를 도입해 장바구니 아이템을 관리. Discount Enum을 사용해 다양한 할인 유형 적용 가능. Kiosk에서 직접 사용자 입력을 처리하고 메뉴 탐색, 장바구니 관리 등을 수행. Main에서 Kiosk를 실행해 전체 기능을 제어. 분석 Cart와 CartItem을 활용해 객체지향적으로 장바구니를 관리. Discount Enum을 통해 생일, 리뷰 작성 등 다양한 할인 적용 가능. 코드 구조 및 객체지향 설계 Kiosk 클래스가 너무 많은 기능을 포함하고 있어 SRP(단일 책임 원칙)를 지키지 못하는 부분이 있다. UI 출력과 비즈니스 로직이 혼재되어 있어 유지보수성이 낮다. 코드 스타일 및 가독성 Kiosk에서 너무 많은 로직을 처리하여 일부 메서드가 길어지고 복잡해질 가능성이 있음. 예외 처리가 부족하여, 예상치 못한 입력이 들어왔을 때 프로그램이 멈출 가능성이 있음. 코드 내 중복이 일부 존재하며, 이를 줄이면 가독성이 더 좋아질 수 있음. 실행 흐름 Main에서 Kiosk를 초기화하고 start() 실행. 사용자의 입력을 받아 메뉴 탐색, 장바구니 관리 진행. 주문 시 할인 정보를 입력받아 Discount Enum을 활용해 적용. 결제 후 장바구니를 비움. 분석 Kiosk에서 거의 모든 것을 관리하기 때문에 실행 흐름이 길어질수록 복잡해질 가능성이 있음. 기능별로 적절히 분리하면 코드의 유지보수성과 확장성이 더 좋아질 수 있음. 개선할 점 Kiosk 클래스의 역할을 분리해 KioskService 같은 클래스를 만들어야 함. UI 출력과 비즈니스 로직을 분리하여 코드의 가독성과 유지보수성을 높여야 함. 예외 처리가 부족하므로 IllegalArgumentException 등을 적극 활용해야 함. 중복된 코드가 일부 존재하므로 메서드로 분리하여 코드의 일관성을 높일 필요가 있음. 사용자의 입력을 검증하는 로직을 별도로 분리하여 입력 오류를 방지해야 함. 🗨️ by GPT\n","permalink":"http://localhost:1313/project/kiosk-05/","summary":"\u003chr\u003e\n\u003ch3 id=\"코드의-주요-기능\"\u003e코드의 주요 기능\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eCartItem\u003c/code\u003e 클래스를 도입해 장바구니 아이템을 관리.\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eDiscount\u003c/code\u003e Enum을 사용해 다양한 할인 유형 적용 가능.\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eKiosk\u003c/code\u003e에서 직접 사용자 입력을 처리하고 메뉴 탐색, 장바구니 관리 등을 수행.\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eMain\u003c/code\u003e에서 \u003ccode\u003eKiosk\u003c/code\u003e를 실행해 전체 기능을 제어.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch4 id=\"분석\"\u003e분석\u003c/h4\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eCart\u003c/code\u003e와 \u003ccode\u003eCartItem\u003c/code\u003e을 활용해 객체지향적으로 장바구니를 관리.\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eDiscount\u003c/code\u003e Enum을 통해 생일, 리뷰 작성 등 다양한 할인 적용 가능.\u003c/li\u003e\n\u003c/ul\u003e\n\u003chr\u003e\n\u003ch3 id=\"코드-구조-및-객체지향-설계\"\u003e코드 구조 및 객체지향 설계\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eKiosk\u003c/code\u003e 클래스가 너무 많은 기능을 포함하고 있어 SRP(단일 책임 원칙)를 지키지 못하는 부분이 있다.\u003c/li\u003e\n\u003cli\u003eUI 출력과 비즈니스 로직이 혼재되어 있어 유지보수성이 낮다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003chr\u003e\n\u003ch3 id=\"코드-스타일-및-가독성\"\u003e코드 스타일 및 가독성\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eKiosk\u003c/code\u003e에서 너무 많은 로직을 처리하여 일부 메서드가 길어지고 복잡해질 가능성이 있음.\u003c/li\u003e\n\u003cli\u003e예외 처리가 부족하여, 예상치 못한 입력이 들어왔을 때 프로그램이 멈출 가능성이 있음.\u003c/li\u003e\n\u003cli\u003e코드 내 중복이 일부 존재하며, 이를 줄이면 가독성이 더 좋아질 수 있음.\u003c/li\u003e\n\u003c/ul\u003e\n\u003chr\u003e\n\u003ch3 id=\"실행-흐름\"\u003e실행 흐름\u003c/h3\u003e\n\u003col\u003e\n\u003cli\u003e\u003ccode\u003eMain\u003c/code\u003e에서 \u003ccode\u003eKiosk\u003c/code\u003e를 초기화하고 \u003ccode\u003estart()\u003c/code\u003e 실행.\u003c/li\u003e\n\u003cli\u003e사용자의 입력을 받아 메뉴 탐색, 장바구니 관리 진행.\u003c/li\u003e\n\u003cli\u003e주문 시 할인 정보를 입력받아 \u003ccode\u003eDiscount\u003c/code\u003e Enum을 활용해 적용.\u003c/li\u003e\n\u003cli\u003e결제 후 장바구니를 비움.\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch4 id=\"분석-1\"\u003e분석\u003c/h4\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eKiosk\u003c/code\u003e에서 거의 모든 것을 관리하기 때문에 실행 흐름이 길어질수록 복잡해질 가능성이 있음.\u003c/li\u003e\n\u003cli\u003e기능별로 적절히 분리하면 코드의 유지보수성과 확장성이 더 좋아질 수 있음.\u003c/li\u003e\n\u003c/ul\u003e\n\u003chr\u003e\n\u003ch3 id=\"개선할-점\"\u003e개선할 점\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eKiosk\u003c/code\u003e 클래스의 역할을 분리해 \u003ccode\u003eKioskService\u003c/code\u003e 같은 클래스를 만들어야 함.\u003c/li\u003e\n\u003cli\u003eUI 출력과 비즈니스 로직을 분리하여 코드의 가독성과 유지보수성을 높여야 함.\u003c/li\u003e\n\u003cli\u003e예외 처리가 부족하므로 \u003ccode\u003eIllegalArgumentException\u003c/code\u003e 등을 적극 활용해야 함.\u003c/li\u003e\n\u003cli\u003e중복된 코드가 일부 존재하므로 메서드로 분리하여 코드의 일관성을 높일 필요가 있음.\u003c/li\u003e\n\u003cli\u003e사용자의 입력을 검증하는 로직을 별도로 분리하여 입력 오류를 방지해야 함.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cbr\u003e\r\n\u003cp\u003e\u003cem\u003e🗨️ by GPT\u003c/em\u003e\u003c/p\u003e","title":"키오스크 회고"},{"content":" 1. 배열 vs. 컬렉션 배열: 크기 고정, 동일 타입 데이터만 저장, 인덱스로 접근 가능, 단순한 구조. 컬렉션: 크기 동적 조절 가능, 다양한 타입 지원(제네릭), List/Set/Map 등 다양한 자료구조 제공. 2. 컬렉션 주요 인터페이스 List (ArrayList, LinkedList): 순서 O, 중복 O, 인덱스로 접근 가능. Set (HashSet, TreeSet): 순서 X, 중복 X. Map (HashMap, TreeMap): 키-값 쌍 저장, 키 중복 X, 값 중복 O. 3. 원시 타입 vs. 래퍼 클래스 컬렉션에는 원시 타입(int, char)을 직접 저장할 수 없고, 래퍼 클래스(Integer, Character)를 사용해야 함. 래퍼 클래스는 객체로 취급되며, 다양한 메서드를 제공. 4. 스트림(Stream) 자바 8에서 도입된 데이터 처리 방식. 원본 데이터를 변경하지 않고 가공 가능. 중간 연산(필터링, 변환)과 최종 연산(집계, 출력)으로 구성됨. 5. 스트림 주요 연산 중간 연산 (Intermediate Operations)\nfilter(): 조건에 맞는 요소만 선택. map(): 요소를 변환. sorted(): 정렬. distinct(): 중복 제거. limit(n), skip(n): 특정 개수 제한 또는 건너뛰기. 최종 연산 (Terminal Operations)\nforEach(): 요소 하나씩 처리. collect(): 리스트, 집합 등으로 변환. reduce(): 하나의 결과값으로 축소. count(), max(), min(), findFirst(), findAny() 등. 6. 스트림 특징 함수형 스타일로 가독성 향상. 원본 데이터 변경 없이 불변성 유지. 최종 연산이 호출될 때 한꺼번에 실행됨 (Lazy Evaluation). parallelStream()을 사용하면 멀티코어를 활용한 병렬 처리 가능. 7. 반복문 vs. 스트림 반복문은 명령형 스타일, 코드가 길어질 수 있음. 스트림은 선언형 스타일, 가독성이 높고, 데이터 처리 로직을 직관적으로 표현 가능. 8. 실전 활용 컬렉션 데이터를 효과적으로 가공 및 필터링할 때 스트림 활용. 반복문보다 간결하고 유지보수하기 쉬운 코드 작성 가능. 데이터가 많거나 병렬 처리가 필요하면 parallelStream() 고려. ","permalink":"http://localhost:1313/record/2025-03-13/","summary":"\u003chr\u003e\n\u003ch3 id=\"1-배열-vs-컬렉션\"\u003e\u003cstrong\u003e1. 배열 vs. 컬렉션\u003c/strong\u003e\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e배열: 크기 고정, 동일 타입 데이터만 저장, 인덱스로 접근 가능, 단순한 구조.\u003c/li\u003e\n\u003cli\u003e컬렉션: 크기 동적 조절 가능, 다양한 타입 지원(제네릭), List/Set/Map 등 다양한 자료구조 제공.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"2-컬렉션-주요-인터페이스\"\u003e\u003cstrong\u003e2. 컬렉션 주요 인터페이스\u003c/strong\u003e\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eList\u003c/code\u003e (ArrayList, LinkedList): 순서 O, 중복 O, 인덱스로 접근 가능.\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eSet\u003c/code\u003e (HashSet, TreeSet): 순서 X, 중복 X.\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eMap\u003c/code\u003e (HashMap, TreeMap): 키-값 쌍 저장, 키 중복 X, 값 중복 O.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"3-원시-타입-vs-래퍼-클래스\"\u003e\u003cstrong\u003e3. 원시 타입 vs. 래퍼 클래스\u003c/strong\u003e\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e컬렉션에는 원시 타입(\u003ccode\u003eint\u003c/code\u003e, \u003ccode\u003echar\u003c/code\u003e)을 직접 저장할 수 없고, 래퍼 클래스(\u003ccode\u003eInteger\u003c/code\u003e, \u003ccode\u003eCharacter\u003c/code\u003e)를 사용해야 함.\u003c/li\u003e\n\u003cli\u003e래퍼 클래스는 객체로 취급되며, 다양한 메서드를 제공.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"4-스트림stream\"\u003e\u003cstrong\u003e4. 스트림(Stream)\u003c/strong\u003e\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e자바 8에서 도입된 데이터 처리 방식.\u003c/li\u003e\n\u003cli\u003e원본 데이터를 변경하지 않고 가공 가능.\u003c/li\u003e\n\u003cli\u003e중간 연산(필터링, 변환)과 최종 연산(집계, 출력)으로 구성됨.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"5-스트림-주요-연산\"\u003e\u003cstrong\u003e5. 스트림 주요 연산\u003c/strong\u003e\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003e중간 연산 (Intermediate Operations)\u003c/strong\u003e\u003c/p\u003e","title":"Collection \u0026 Stream"},{"content":" 요구사항 Lv 2. Enum, 람다 \u0026amp; 스트림을 활용한 주문 및 장바구니 관리 요구사항이 가지는 의도 의도 : 고급 자바 기능을 활용해 프로그램의 효율성과 코드의 가독성을 개선하는 것을 목표로 합니다. 목적 Enum을 통해 상수를 안전하게 관리하고, 프로그램 구조를 간결하게 제네릭을 활용하여 데이터 유연성을 높이고, 재사용 가능한 코드를 설계 스트림 API를 사용하여 데이터를 필터링하고, 간결한 코드로 동작을 구현 Enum을 활용한 사용자 유형별 할인율 관리하기 사용자 유형의 Enum 정의 및 각 사용자 유형에 따른 할인율 적용 예시 : 군인, 학생, 일반인 주문 시, 사용자 유형에 맞는 할인율 적용해 총 금액 계산 람다 \u0026amp; 스트림을 활용한 장바구니 조회 기능 기존에 생성한 Menu의 MenuItem을 조회 할 때 스트림을 사용하여 출력하도록 수정 기존 장바구니에서 특정 메뉴 빼기 기능을 통한 스트림 활용 예시 : 장바구니에 SmokeShack 가 들어 있다면, stream.filter를 활용하여 특정 메뉴 이름을 가진 메뉴 장바구니에서 제거 구현 기능 # 전체 코드\n할인 기능 추가 enum Discount 추가 public enum Discount { BIRTHDAY(\u0026#34;생일\u0026#34;,0.2), REVIEW(\u0026#34;리뷰 작성\u0026#34;, 0.1), SNS(\u0026#34;SNS 업로드\u0026#34;, 0.1), STUDENT(\u0026#34;학생\u0026#34;, 0.05); private final String name; private final double rate; Discount(String name, double rate) { this.name = name; this.rate = rate; } public int getDiscounted(int price) { return price - (int) (price * rate); } public String getName() { return name; } public double getRate() { return rate; } } 할인 메뉴 리스트 포맷팅하여 반환하는 메서드 추가 private String getDisplayDiscount() { Discount[] discounts = Discount.values(); String discountList = IntStream.range(0, discounts.length) .mapToObj(i -\u0026gt; String.format(\u0026#34; [%d] %s\\t\\uD83D\\uDD25 %.0f%%\u0026#34;, i + 1, getDisplayName(discounts[i].getName()), discounts[i].getRate() * 100)) .collect(Collectors.joining(\u0026#34;\\n\u0026#34;)); return \u0026#34;\\n☰ 홈 \u0026gt; 결제 \u0026gt; 할인\\n\u0026#34; + discountList + \u0026#34;\\n [\u0026#34; + (discounts.length + 1) + \u0026#34;] 해당 없음\\n [0] 홈으로\u0026#34;; } Kiosk 클래스에 discount() 메서드 추가 할인 대상인지 확인 후 할인율 적용된 가격 담아서 결제 메서드 호출 private int discount() { while (true) { int price = cart.getTotalPrice(); Discount[] discounts = Discount.values(); int lastNumber = Discount.values().length + 1; // 해당 없음 // 할인 메뉴 출력 System.out.println(getDisplayDiscount()); // 사용자 입력 값 검증 int input = getInteger(); // -1 반환 시 재입력 요청 if (input == -1) continue; if (input == 0) { System.out.println(\u0026#34; 결제가 취소되었습니다.\u0026#34;); return 0; } if (input \u0026lt; 1 || input \u0026gt; lastNumber) { System.out.println(\u0026#34; 올바른 메뉴 번호를 입력하세요.\u0026#34;); continue; } if (input == lastNumber) { pay(price); } int discountedPrice = discounts[input-1].getDiscounted(price); int result = pay(discountedPrice); if (result == 0) return 0; } } 람다 \u0026amp; 스트림 활용 장바구니 목록 삭제 [변경 전]\nif (quantity - input \u0026lt; 1 || cartItem.getQuantity() \u0026lt; 1) { cart.getCartItems().remove(cartItem); } [변경 후]\ncart.setCartItems(cart.getCartItems().stream() .filter(item -\u0026gt; item.getQuantity() \u0026gt; 0) .collect(Collectors.toList())); [변경 전]\ncart.getCartItems().remove(cartItem); [변경 후]\n// 수량이 1개면 바로 삭제 cart.setCartItems(cart.getCartItems().stream() .filter(item -\u0026gt; !item.equals(cartItem)) .collect(Collectors.toList())); 카테고리별 메뉴 출력 [변경 전]\nprivate String getDisplayMenu(Menu menu) { StringBuilder sb = new StringBuilder(); List\u0026lt;MenuItem\u0026gt; menuItems = menu.getMenuItems(); String category = menu.getCategory(); sb.append(\u0026#34;\\n☰ 홈 \u0026gt; \u0026#34; + category + \u0026#34;\\n\u0026#34;); for (int i = 0; i \u0026lt; menuItems.size(); i++) { MenuItem item = menuItems.get(i); String menuName = getDisplayName(item.getName()); String formatPrice = String.format(\u0026#34;￦ %,d\u0026#34;, item.getPrice()); sb.append(\u0026#34; [\u0026#34; + (i + 1) + \u0026#34;] \u0026#34; + menuName + \u0026#34;\\t| \u0026#34; + formatPrice + \u0026#34; | \u0026#34; + item.getDesc() + \u0026#34;\\n\u0026#34;); } sb.append(\u0026#34;\\n [0] 홈으로\u0026#34;); int index = menus.indexOf(menu); // 메뉴 네비게이션 바 조건: 첫 번째 메뉴면 다음 메뉴만, 마지막 메뉴면 이전 메뉴만, 아니면 모두 출력 if (index == 0) { sb.append(\u0026#34; [n] 다음 메뉴\u0026#34;); } else if (index == (menus.size() - 1)) { sb.append(\u0026#34; [p] 이전 메뉴\u0026#34;); } else if (0 \u0026lt; index || index \u0026lt; (menus.size() - 1)) { sb.append(\u0026#34; [p] 이전 메뉴 [n] 다음 메뉴\u0026#34;); } // 장바구니가 비어 있지 않을 때만 네비게이션 바에 출력 if (!cart.isEmpty()) { sb.append(\u0026#34; [c] 장바구니\u0026#34;); } return sb.toString(); } [변경 후]\nprivate String getDisplayMenu(Menu menu) { List\u0026lt;MenuItem\u0026gt; menuItems = menu.getMenuItems(); String category = menu.getCategory(); String menuList = menuItems.stream() .map(item -\u0026gt; String.format(\u0026#34; [%d] %s\\t| ￦ %,d | %s\u0026#34;, menuItems.indexOf(item) + 1, getDisplayName(item.getName()), item.getPrice(), item.getDesc())) .collect(Collectors.joining(\u0026#34;\\n\u0026#34;)); int index = menus.indexOf(menu); String navigation = \u0026#34;\\n [0] 홈으로\u0026#34;; // 메뉴 네비게이션 바 조건: 첫 번째 메뉴면 다음 메뉴만, 마지막 메뉴면 이전 메뉴만, 아니면 모두 출력 if (index == 0) { navigation += \u0026#34; [n] 다음 메뉴\u0026#34;; } else if (index == (menus.size() - 1)) { navigation += \u0026#34; [p] 이전 메뉴\u0026#34;; } else if (0 \u0026lt; index || index \u0026lt; (menus.size() - 1)) { navigation += \u0026#34; [p] 이전 메뉴 [n] 다음 메뉴\u0026#34;; } // 장바구니가 비어 있지 않을 때만 네비게이션 바에 출력 if (!cart.isEmpty()) { navigation += \u0026#34; [c] 장바구니\u0026#34;; } return \u0026#34;\\n☰ 홈 \u0026gt; \u0026#34; + category + \u0026#34;\\n\u0026#34; + menuList + navigation; } 장바구니 목록 출력 [변경 전]\nprivate String getDisplayCartItems() { StringBuilder sb = new StringBuilder(); List\u0026lt;CartItem\u0026gt; cartItems = cart.getCartItems(); sb.append(\u0026#34;\\n☰ 홈 \u0026gt; 장바구니\\n\u0026#34;); sb.append(\u0026#34;--------------------------------------\\n\u0026#34;); for (int i = 0; i \u0026lt; cartItems.size(); i++) { CartItem item = cartItems.get(i); String itemName = getDisplayName(item.getMenuItem().getName()); String formatPrice = String.format(\u0026#34;￦ %,d\u0026#34;, item.getTotalPrice()); sb.append(\u0026#34; [\u0026#34; + (i + 1) + \u0026#34;] \u0026#34; + itemName + \u0026#34;\\t× \u0026#34; + item.getQuantity() + \u0026#34; = \u0026#34; + formatPrice + \u0026#34;\\n\u0026#34;); } String formatTotalPrice = String.format(\u0026#34;￦ %,d\u0026#34;, cart.getTotalPrice()); sb.append(\u0026#34;--------------------------------------\\n\u0026#34;); sb.append(\u0026#34; 총 결제 금액\\t\\t\\t\\t\\t \u0026#34; + formatTotalPrice); return sb.toString(); } [변경 후]\nprivate String getDisplayCartItems() { List\u0026lt;CartItem\u0026gt; cartItems = cart.getCartItems(); String line =\u0026#34;--------------------------------------\\n\u0026#34;; String cartList = cartItems.stream() .filter(item -\u0026gt; item.getQuantity() \u0026gt; 0) .map(item -\u0026gt; String.format(\u0026#34; [%d] %s\\t× %d = ￦ %,d\u0026#34;, cartItems.indexOf(item) + 1, getDisplayName(item.getMenuItem().getName()), item.getQuantity(), item.getTotalPrice())) .collect(Collectors.joining(\u0026#34;\\n\u0026#34;)); String formatTotalPrice = String.format(\u0026#34;￦ %,d\u0026#34;, cart.getTotalPrice()); return \u0026#34;\\n☰ 홈 \u0026gt; 장바구니\\n\u0026#34; + line + cartList + \u0026#34;\\n\u0026#34; + line + \u0026#34; 총 결제 금액 \\t = \u0026#34; + formatTotalPrice; } 할인 대상 목록 [변경 전]\nprivate String getDisplayDiscount() { StringBuilder sb = new StringBuilder(); Discount[] discounts = Discount.values(); sb.append(\u0026#34;\\n☰ 홈 \u0026gt; 결제 \u0026gt; 할인\\n\u0026#34;); for (int i = 0; i \u0026lt; discounts.length; i++) { String displayName = getDisplayName(discounts[i].getName()); String displayRate = String.format(\u0026#34;%.0f%%\u0026#34;, discounts[i].getRate() * 100); sb.append(\u0026#34; [\u0026#34; + (i + 1) + \u0026#34;] \u0026#34; + displayName + \u0026#34;\\t\\uD83D\\uDD25 \u0026#34; + displayRate + \u0026#34;\\n\u0026#34;); } sb.append(\u0026#34; [\u0026#34; + (discounts.length + 1) + \u0026#34;] 해당 없음\\n\u0026#34;); sb.append(\u0026#34; [0] 홈으로\u0026#34;); return sb.toString(); } [변경 후]\nprivate String getDisplayDiscount() { Discount[] discounts = Discount.values(); String discountList = IntStream.range(0, discounts.length) .mapToObj(i -\u0026gt; String.format(\u0026#34; [%d] %s\\t\\uD83D\\uDD25 %.0f%%\u0026#34;, i + 1, getDisplayName(discounts[i].getName()), discounts[i].getRate() * 100)) .collect(Collectors.joining(\u0026#34;\\n\u0026#34;)); return \u0026#34;\\n☰ 홈 \u0026gt; 결제 \u0026gt; 할인\\n\u0026#34; + discountList + \u0026#34;\\n [\u0026#34; + (discounts.length + 1) + \u0026#34;] 해당 없음\\n [0] 홈으로\u0026#34;; } 구현 과정 toList() vs collect(Collectors.toList()) 장바구니 목록 삭제 기능을 스트림으로 수정하면서 처음에는 toList()를 사용하여 장바구니 리스트를 세팅함. 장바구니 목록 삭제 후 새로운 메뉴 추가를 시도하면 UnsupportedOperationException 예외 발생. toList()는 불변 리스트를, collect(Collectors.toList())는 가변 리스트를 반환함. 계속해서 메뉴 추가되고 삭제될 가능성이 있는 장바구니에는 가변 리스트가 적합. 깔끔해서 쓰고 싶었는데\u0026hellip;🥲\n실행 예시 ☰ 홈 [1] 햄버거 [2] 음료 [3] 사이드 [0] 종료하기 ⮞ 1 ☰ 홈 \u0026gt; 햄버거 [1] 불고기 버거 | ￦ 4,200 | 불고기 소스에 패티와 마요네즈, 양상추의 맛있는 조합. [2] 치즈 버거 | ￦ 3,600 | 맛있는 치즈와 100% 순 쇠고기 패티, 클래식 치즈 버거. [3] 슈비 버거 | ￦ 6,600 | 탱글한 통새우살에 비프 패티를 더해 푸짐한 슈비 버거. [4] 슈슈 버거 | ￦ 5,500 | 탱글한 통새우살이 가득한 슈슈 버거. [0] 홈으로 [n] 다음 메뉴 ⮞ 3 ☰ 홈 \u0026gt; 햄버거 [1] 불고기 버거 | ￦ 4,200 | 불고기 소스에 패티와 마요네즈, 양상추의 맛있는 조합. [2] 치즈 버거 | ￦ 3,600 | 맛있는 치즈와 100% 순 쇠고기 패티, 클래식 치즈 버거. [3] 슈비 버거 | ￦ 6,600 | 탱글한 통새우살에 비프 패티를 더해 푸짐한 슈비 버거. [4] 슈슈 버거 | ￦ 5,500 | 탱글한 통새우살이 가득한 슈슈 버거. [0] 홈으로 [n] 다음 메뉴 [c] 장바구니 ⮞ n ☰ 홈 \u0026gt; 음료 [1] 코카콜라 | ￦ 2,600 | 갈증 해소뿐만이 아니라 기분까지 상쾌하게 [2] 스프라이트 | ￦ 2,600 | 청량함에 레몬, 라임향을 더한 시원함 [3] 아메리카노 | ￦ 3,300 | 바로 내린 100% 친환경 커피로 더 신선하게 [0] 홈으로 [p] 이전 메뉴 [n] 다음 메뉴 [c] 장바구니 ⮞ 1 ☰ 홈 \u0026gt; 음료 [1] 코카콜라 | ￦ 2,600 | 갈증 해소뿐만이 아니라 기분까지 상쾌하게 [2] 스프라이트 | ￦ 2,600 | 청량함에 레몬, 라임향을 더한 시원함 [3] 아메리카노 | ￦ 3,300 | 바로 내린 100% 친환경 커피로 더 신선하게 [0] 홈으로 [p] 이전 메뉴 [n] 다음 메뉴 [c] 장바구니 ⮞ p ☰ 홈 \u0026gt; 햄버거 [1] 불고기 버거 | ￦ 4,200 | 불고기 소스에 패티와 마요네즈, 양상추의 맛있는 조합. [2] 치즈 버거 | ￦ 3,600 | 맛있는 치즈와 100% 순 쇠고기 패티, 클래식 치즈 버거. [3] 슈비 버거 | ￦ 6,600 | 탱글한 통새우살에 비프 패티를 더해 푸짐한 슈비 버거. [4] 슈슈 버거 | ￦ 5,500 | 탱글한 통새우살이 가득한 슈슈 버거. [0] 홈으로 [n] 다음 메뉴 [c] 장바구니 ⮞ 4 ☰ 홈 \u0026gt; 햄버거 [1] 불고기 버거 | ￦ 4,200 | 불고기 소스에 패티와 마요네즈, 양상추의 맛있는 조합. [2] 치즈 버거 | ￦ 3,600 | 맛있는 치즈와 100% 순 쇠고기 패티, 클래식 치즈 버거. [3] 슈비 버거 | ￦ 6,600 | 탱글한 통새우살에 비프 패티를 더해 푸짐한 슈비 버거. [4] 슈슈 버거 | ￦ 5,500 | 탱글한 통새우살이 가득한 슈슈 버거. [0] 홈으로 [n] 다음 메뉴 [c] 장바구니 ⮞ n ☰ 홈 \u0026gt; 음료 [1] 코카콜라 | ￦ 2,600 | 갈증 해소뿐만이 아니라 기분까지 상쾌하게 [2] 스프라이트 | ￦ 2,600 | 청량함에 레몬, 라임향을 더한 시원함 [3] 아메리카노 | ￦ 3,300 | 바로 내린 100% 친환경 커피로 더 신선하게 [0] 홈으로 [p] 이전 메뉴 [n] 다음 메뉴 [c] 장바구니 ⮞ n ☰ 홈 \u0026gt; 사이드 [1] 후렌치 후라이\t| ￦ 3,000 | 남다른 맛과 바삭함 [2] 코울슬로 | ￦ 2,700 | 아삭하게 씹히는 샐러드 [3] 치즈스틱 | ￦ 3,600 | 속이 꽉 찬 황금빛 바삭함 [0] 홈으로 [p] 이전 메뉴 [c] 장바구니 ⮞ 1 ☰ 홈 \u0026gt; 사이드 [1] 후렌치 후라이\t| ￦ 3,000 | 남다른 맛과 바삭함 [2] 코울슬로 | ￦ 2,700 | 아삭하게 씹히는 샐러드 [3] 치즈스틱 | ￦ 3,600 | 속이 꽉 찬 황금빛 바삭함 [0] 홈으로 [p] 이전 메뉴 [c] 장바구니 ⮞ 3 ☰ 홈 \u0026gt; 사이드 [1] 후렌치 후라이\t| ￦ 3,000 | 남다른 맛과 바삭함 [2] 코울슬로 | ￦ 2,700 | 아삭하게 씹히는 샐러드 [3] 치즈스틱 | ￦ 3,600 | 속이 꽉 찬 황금빛 바삭함 [0] 홈으로 [p] 이전 메뉴 [c] 장바구니 ⮞ c ☰ 홈 \u0026gt; 장바구니 -------------------------------------- [1] 슈비 버거 × 1 = ￦ 6,600 [2] 코카콜라 × 1 = ￦ 2,600 [3] 슈슈 버거 × 1 = ￦ 5,500 [4] 후렌치 후라이\t× 1 = ￦ 3,000 [5] 치즈스틱 × 1 = ￦ 3,600 -------------------------------------- 총 결제 금액 = ￦ 21,300 -------------------------------------- [1] 결제하기 [2] 메뉴 삭제하기 [3] 장바구니 비우기 [0] 홈으로 ⮞ 2 삭제할 메뉴의 번호를 입력하세요. ⮞ 3 ☰ 홈 \u0026gt; 장바구니 -------------------------------------- [1] 슈비 버거 × 1 = ￦ 6,600 [2] 코카콜라 × 1 = ￦ 2,600 [3] 후렌치 후라이\t× 1 = ￦ 3,000 [4] 치즈스틱 × 1 = ￦ 3,600 -------------------------------------- 총 결제 금액 = ￦ 15,800 -------------------------------------- [1] 결제하기 [2] 메뉴 삭제하기 [3] 장바구니 비우기 [0] 홈으로 ⮞ 1 ☰ 홈 \u0026gt; 결제 \u0026gt; 할인 [1] 생일 🔥 20% [2] 리뷰 작성 🔥 10% [3] SNS 업로드 🔥 10% [4] 학생 🔥 5% [5] 해당 없음 [0] 홈으로 ⮞ 1 ☰ 홈 \u0026gt; 결제 총 결제 금액 [ ￦ 12,640 ] 지불할 금액을 입력하세요. (취소: 0) ⮞ 15000 [잔액] ￦ 2,360 결제가 완료되었습니다. 감사합니다. ☰ 홈 [1] 햄버거 [2] 음료 [3] 사이드 [0] 종료하기 ⮞ 0 프로그램을 종료합니다. ","permalink":"http://localhost:1313/project/kiosk-04/","summary":"\u003chr\u003e\n\u003ch2 id=\"요구사항\"\u003e요구사항\u003c/h2\u003e\n\u003ch3 id=\"lv-2-enum-람다--스트림을-활용한-주문-및-장바구니-관리\"\u003eLv 2. Enum, 람다 \u0026amp; 스트림을 활용한 주문 및 장바구니 관리\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003e요구사항이 가지는 의도\u003c/strong\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003e의도\u003c/strong\u003e : 고급 자바 기능을 활용해 프로그램의 효율성과 코드의 가독성을 개선하는 것을 목표로 합니다.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e목적\u003c/strong\u003e\n\u003cul\u003e\n\u003cli\u003eEnum을 통해 상수를 안전하게 관리하고, 프로그램 구조를 간결하게\u003c/li\u003e\n\u003cli\u003e제네릭을 활용하여 데이터 유연성을 높이고, 재사용 가능한 코드를 설계\u003c/li\u003e\n\u003cli\u003e스트림 API를 사용하여 데이터를 필터링하고, 간결한 코드로 동작을 구현\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eEnum을 활용한 사용자 유형별 할인율 관리하기\u003c/strong\u003e\n\u003cul\u003e\n\u003cli\u003e사용자 유형의 Enum 정의 및 각 사용자 유형에 따른 할인율 적용\n\u003cul\u003e\n\u003cli\u003e예시 : 군인, 학생, 일반인\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e주문 시, 사용자 유형에 맞는 할인율 적용해 총 금액 계산\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e람다 \u0026amp; 스트림을 활용한 장바구니 조회 기능\u003c/strong\u003e\n\u003cul\u003e\n\u003cli\u003e기존에 생성한 Menu의 MenuItem을 조회 할 때 스트림을 사용하여 출력하도록 수정\u003c/li\u003e\n\u003cli\u003e기존 장바구니에서 특정 메뉴 빼기 기능을 통한 스트림 활용\n\u003cul\u003e\n\u003cli\u003e예시 : 장바구니에 SmokeShack 가 들어 있다면, stream.filter를 활용하여 특정 메뉴 이름을 가진 메뉴 장바구니에서 제거\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003chr\u003e\n\u003ch2 id=\"구현-기능\"\u003e구현 기능\u003c/h2\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/withong/nbc-chapter-02/tree/main/kiosk/challenge/level2\"\u003e# 전체 코드\u003c/a\u003e\u003c/p\u003e","title":"키오스크 도전 Lv 2"},{"content":" 요구사항 Lv 1. 장바구니 및 구매하기 기능을 추가하기 요구사항이 가지는 의도 의도: 클래스 간 연계를 통해 객체 지향 프로그래밍의 기본적인 설계를 익히고, 사용자 입력에 따른 프로그램 흐름 제어와 상태 관리를 학습 목표 클래스 간 역할 분리를 이해하고, 적절히 협력하는 객체를 설계 프로그램 상태 변경 및 데이터 저장을 연습 사용자 입력에 따른 예외 처리와 조건 분기를 연습 장바구니 생성 및 관리 기능 사용자가 선택한 메뉴를 장바구니에 추가할 수 있는 기능을 제공합니다. 장바구니는 메뉴명, 수량, 가격 정보를 저장하며, 항목을 동적으로 추가 및 조회할 수 있어야 합니다. 사용자가 잘못된 선택을 했을 경우 예외를 처리합니다(예: 유효하지 않은 메뉴 번호 입력) 장바구니 출력 및 금액 계산 사용자가 결제를 시도하기 전에, 장바구니에 담긴 모든 메뉴와 총 금액을 출력합니다. 출력 예시 각 메뉴의 이름, 가격, 수량 총 금액 합계 장바구니 담기 기능 메뉴를 클릭하면 장바구니에 추가할 지 물어보고, 입력값에 따라 “추가”, “취소” 처리합니다. 메뉴는 한 번에 1개만 담을 수 있습니다. 장바구니에 담은 목록을 출력합니다. 주문 기능 장바구니에 담긴 모든 항목을 출력합니다. 합산하여 총 금액을 계산하고, “주문하기”를 누르면 장바구니를 초기화합니다. 구현 기능 # 전체 코드\n장바구니 아이템 관리 CartItem 클래스 추가 public class CartItem { private MenuItem menuItem; private int quantity; CartItem(MenuItem menuItem) { this.menuItem = menuItem; this.quantity = 1; } public void addQuantity() { this.quantity++; } public MenuItem getMenuItem() { return menuItem; } public int getQuantity() { return quantity; } public void setQuantity(int quantity) { this.quantity = quantity; } public int getTotalPrice() { return menuItem.getPrice() * this.quantity; } } 장바구니 관리 Cart 클래스 추가 public class Cart { private List\u0026lt;CartItem\u0026gt; cartItems; Cart() { this.cartItems = new ArrayList\u0026lt;\u0026gt;(); } public void addCartItem(MenuItem menuItem) { for (CartItem cartItem : cartItems) { if (cartItem.getMenuItem().getName().equals(menuItem.getName())) { cartItem.addQuantity(); return; } } cartItems.add(new CartItem(menuItem)); } public List\u0026lt;CartItem\u0026gt; getCartItems() { return cartItems; } public int getTotalPrice() { int total = 0; for (CartItem cartItem : cartItems) { total += cartItem.getTotalPrice(); } return total; } public void clearCart() { cartItems.clear(); } public boolean isEmpty() { return cartItems.isEmpty(); } } 키오스크 프로그램 메뉴 출력 시, 장바구니가 비어 있지 않으면 장바구니 메뉴도 출력 int maxMenuNumber = menus.size(); System.out.println(\u0026#34;\\n☰ 홈\u0026#34;); // 카테고리 리스트(menus)의 카테고리명 가져와서 메뉴 출력 for (int i = 0; i \u0026lt; maxMenuNumber; i++) { System.out.println(\u0026#34; [\u0026#34; + (i + 1) + \u0026#34;] \u0026#34; + menus.get(i).getCategory()); } if (!cart.isEmpty()) { maxMenuNumber++; System.out.println(\u0026#34; [\u0026#34; + maxMenuNumber + \u0026#34;] 장바구니\u0026#34;); } System.out.println(\u0026#34; [0] 종료하기\u0026#34;); order() 메서드에서 메뉴 선택 시 장바구니에 추가 // 장바구니에 추가 cart.addCartItem(menuItem); cart() 메서드 추가 결제, 메뉴 삭제, 장바구니 비우기, 홈으로 돌아가기 가능 메뉴 삭제 시 수량이 2 이상인 경우 삭제할 수량을 입력받아서 진행 결제하기 선택 시 pay() 메서드 호출 private int cart() { if (cart.isEmpty()) { System.out.println(\u0026#34;\\n 장바구니에 담긴 상품이 없습니다.\u0026#34;); return 0; } while (true) { System.out.println(getDisplayCartItems()); System.out.println(\u0026#34;--------------------------------------\u0026#34;); System.out.println(\u0026#34; [1] 결제하기\u0026#34;); System.out.println(\u0026#34; [2] 메뉴 삭제하기\u0026#34;); System.out.println(\u0026#34; [3] 장바구니 비우기\u0026#34;); System.out.println(\u0026#34; [0] 홈으로\u0026#34;); int input = getInteger(); switch (input) { case 1 -\u0026gt; { int result = pay(); if (result == 0) return 0; } case 2 -\u0026gt; { System.out.println(\u0026#34;\\n 삭제할 메뉴의 번호를 입력하세요.\u0026#34;); input = getInteger(); int cartSize = cart.getCartItems().size(); if (input \u0026lt; 1 || input \u0026gt; cartSize) { System.out.println(\u0026#34; 올바른 메뉴 번호를 입력하세요.\u0026#34;); continue; } CartItem cartItem = cart.getCartItems().get(input - 1); int quantity = cartItem.getQuantity(); if (quantity \u0026gt; 1) { System.out.println(\u0026#34;\\n [\u0026#34; + cartItem.getMenuItem().getName() + \u0026#34;] 현재 수량 \u0026#34; + quantity + \u0026#34;개\u0026#34;); System.out.println(\u0026#34; 삭제할 수량을 입력하세요.\u0026#34;); input = getInteger(); if (input \u0026gt; quantity) { System.out.println(\u0026#34; 수량보다 큰 숫자를 입력할 수 없습니다.\u0026#34;); continue; } cartItem.setQuantity(quantity - input); if (quantity - input \u0026lt; 1 || cartItem.getQuantity() \u0026lt; 1) { cart.getCartItems().remove(cartItem); } } else { cart.getCartItems().remove(cartItem); } } case 3 -\u0026gt; { cart.clearCart(); return 0; } case 0 -\u0026gt; { return 0; } } } } 메뉴 출력 시 네비게이션 바 추가 sb.append(\u0026#34;\\n [0] 홈으로\u0026#34;); int index = menus.indexOf(menu); // 메뉴 네비게이션 바 조건: 첫 번째 메뉴면 다음 메뉴만, 마지막 메뉴면 이전 메뉴만, 아니면 모두 출력 if (index == 0) { sb.append(\u0026#34; [n] 다음 메뉴\u0026#34;); } else if (index == (menus.size() - 1)) { sb.append(\u0026#34; [p] 이전 메뉴\u0026#34;); } else if (0 \u0026lt; index || index \u0026lt; (menus.size() - 1)) { sb.append(\u0026#34; [p] 이전 메뉴 [n] 다음 메뉴\u0026#34;); } // 장바구니가 비어 있지 않을 때만 네비게이션 바에 출력 if (!cart.isEmpty()) { sb.append(\u0026#34; [c] 장바구니\u0026#34;); } 주문 시 네비게이션 바 입력 값에 따른 처리 // 메뉴 네비게이션 바 입력 값 검사 if (userInput == 112) { // p 이전 메뉴 index = index - 1; continue; } else if (userInput == 110) { // n 다음 메뉴 index = index + 1; continue; } else if (userInput == 99) { // c 장바구니 if (cart.isEmpty()) { throw new ArrayIndexOutOfBoundsException(); } int result = cart(); if (result == 0) break; } 예외 처리 추가 catch (ArrayIndexOutOfBoundsException e) { // 메뉴 네비게이션 바 입력 값 예외 처리: 없는 인덱스거나, 빈 장바구니 호출 시 실행 System.out.println(\u0026#34; 올바른 메뉴를 입력하세요.\u0026#34;); } 구현 과정 메뉴 네비게이션 바 추가 메뉴 하나를 선택할 때마다 홈으로 돌아갔다가 다시 메뉴 카테고리를 선택해서 들어가는 순서가 번거롭게 느껴졌음. 원래 방향키를 이용해서 이동하고 싶었는데 scanner는 방향키 입력을 인지할 수 없어서 int로 변환 가능한 char을 사용해 입력받기로 결정. 초기 order 메서드는 메뉴 카테고리와 메뉴 리스트를 불러오는 로직이 while문 밖에 있었음. 이 부분을 인지하지 못하고 네비게이션 메뉴를 입력받을 때 계속해서 order 메서드를 중복 호출함 → break; 해도 기존 order 메서드가 끝나지 않은 상태라 start 메서드로 돌아가지 못하는 문제 발생. 메뉴 카테고리와 메뉴 리스트를 가져오는 로직을 while문 시작으로 옮기고, 네비게이션 메뉴 입력 시 index 값을 변경하는 방식으로 수정. 메뉴 출력 시 카테고리의 인덱스를 확인하고 적절한 네비게이션 메뉴만을 출력하고 있지만, 실제 입력 시에는 없는 네비게이션 메뉴도 입력받을 수 있는 상태이기 때문에 존재하지 않는 인덱스를 호출할 때의의 예외 처리 추가. 실행 예시 ☰ 홈 [1] 햄버거 [2] 음료 [3] 사이드 [0] 종료하기 ⮞ 1 ☰ 홈 \u0026gt; 햄버거 [1] 불고기 버거 | ￦ 4,200 | 불고기 소스에 패티와 마요네즈, 양상추의 맛있는 조합. [2] 치즈 버거 | ￦ 3,600 | 맛있는 치즈와 100% 순 쇠고기 패티, 클래식 치즈 버거. [3] 슈비 버거 | ￦ 6,600 | 탱글한 통새우살에 비프 패티를 더해 푸짐한 슈비 버거. [4] 슈슈 버거 | ￦ 5,500 | 탱글한 통새우살이 가득한 슈슈 버거. [0] 홈으로 [n] 다음 메뉴 ⮞ 3 ☰ 홈 \u0026gt; 햄버거 [1] 불고기 버거 | ￦ 4,200 | 불고기 소스에 패티와 마요네즈, 양상추의 맛있는 조합. [2] 치즈 버거 | ￦ 3,600 | 맛있는 치즈와 100% 순 쇠고기 패티, 클래식 치즈 버거. [3] 슈비 버거 | ￦ 6,600 | 탱글한 통새우살에 비프 패티를 더해 푸짐한 슈비 버거. [4] 슈슈 버거 | ￦ 5,500 | 탱글한 통새우살이 가득한 슈슈 버거. [0] 홈으로 [n] 다음 메뉴 [c] 장바구니 ⮞ n ☰ 홈 \u0026gt; 음료 [1] 코카콜라 | ￦ 2,600 | 갈증 해소뿐만이 아니라 기분까지 상쾌하게 [2] 스프라이트 | ￦ 2,600 | 청량함에 레몬, 라임향을 더한 시원함 [3] 아메리카노 | ￦ 3,300 | 바로 내린 100% 친환경 커피로 더 신선하게 [0] 홈으로 [p] 이전 메뉴 [n] 다음 메뉴 [c] 장바구니 ⮞ 1 ☰ 홈 \u0026gt; 음료 [1] 코카콜라 | ￦ 2,600 | 갈증 해소뿐만이 아니라 기분까지 상쾌하게 [2] 스프라이트 | ￦ 2,600 | 청량함에 레몬, 라임향을 더한 시원함 [3] 아메리카노 | ￦ 3,300 | 바로 내린 100% 친환경 커피로 더 신선하게 [0] 홈으로 [p] 이전 메뉴 [n] 다음 메뉴 [c] 장바구니 ⮞ n ☰ 홈 \u0026gt; 사이드 [1] 후렌치 후라이\t| ￦ 3,000 | 남다른 맛과 바삭함 [2] 코울슬로 | ￦ 2,700 | 아삭하게 씹히는 샐러드 [3] 치즈스틱 | ￦ 3,600 | 속이 꽉 찬 황금빛 바삭함 [0] 홈으로 [p] 이전 메뉴 [c] 장바구니 ⮞ 1 ☰ 홈 \u0026gt; 사이드 [1] 후렌치 후라이\t| ￦ 3,000 | 남다른 맛과 바삭함 [2] 코울슬로 | ￦ 2,700 | 아삭하게 씹히는 샐러드 [3] 치즈스틱 | ￦ 3,600 | 속이 꽉 찬 황금빛 바삭함 [0] 홈으로 [p] 이전 메뉴 [c] 장바구니 ⮞ 3 ☰ 홈 \u0026gt; 사이드 [1] 후렌치 후라이\t| ￦ 3,000 | 남다른 맛과 바삭함 [2] 코울슬로 | ￦ 2,700 | 아삭하게 씹히는 샐러드 [3] 치즈스틱 | ￦ 3,600 | 속이 꽉 찬 황금빛 바삭함 [0] 홈으로 [p] 이전 메뉴 [c] 장바구니 ⮞ c ☰ 홈 \u0026gt; 장바구니 -------------------------------------- [1] 슈비 버거 × 1 = ￦ 6,600 [2] 코카콜라 × 1 = ￦ 2,600 [3] 후렌치 후라이\t× 1 = ￦ 3,000 [4] 치즈스틱 × 1 = ￦ 3,600 -------------------------------------- 총 결제 금액 ￦ 15,800 -------------------------------------- [1] 결제하기 [2] 메뉴 삭제하기 [3] 장바구니 비우기 [0] 홈으로 ⮞ 1 ☰ 홈 \u0026gt; 결제 총 결제 금액 [ ￦ 15,800 ] 지불할 금액을 입력하세요. (취소: 0) ⮞ 20000 [잔액] ￦ 4,200 결제가 완료되었습니다. 감사합니다. ☰ 홈 [1] 햄버거 [2] 음료 [3] 사이드 [0] 종료하기 ⮞ 0 프로그램을 종료합니다. ","permalink":"http://localhost:1313/project/kiosk-03/","summary":"\u003chr\u003e\n\u003ch2 id=\"요구사항\"\u003e요구사항\u003c/h2\u003e\n\u003ch3 id=\"lv-1-장바구니-및-구매하기-기능을-추가하기\"\u003eLv 1. 장바구니 및 구매하기 기능을 추가하기\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003e요구사항이 가지는 의도\u003c/strong\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003e의도\u003c/strong\u003e: 클래스 간 연계를 통해 객체 지향 프로그래밍의 기본적인 설계를 익히고, 사용자 입력에 따른 프로그램 흐름 제어와 상태 관리를 학습\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e목표\u003c/strong\u003e\n\u003cul\u003e\n\u003cli\u003e클래스 간 역할 분리를 이해하고, 적절히 협력하는 객체를 설계\u003c/li\u003e\n\u003cli\u003e프로그램 상태 변경 및 데이터 저장을 연습\u003c/li\u003e\n\u003cli\u003e사용자 입력에 따른 예외 처리와 조건 분기를 연습\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e장바구니 생성 및 관리 기능\u003c/strong\u003e\n\u003cul\u003e\n\u003cli\u003e사용자가 선택한 메뉴를 장바구니에 추가할 수 있는 기능을 제공합니다.\u003c/li\u003e\n\u003cli\u003e장바구니는 메뉴명, 수량, 가격 정보를 저장하며, 항목을 동적으로 추가 및 조회할 수 있어야 합니다.\u003c/li\u003e\n\u003cli\u003e사용자가 잘못된 선택을 했을 경우 예외를 처리합니다(예: 유효하지 않은 메뉴 번호 입력)\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e장바구니 출력 및 금액 계산\u003c/strong\u003e\n\u003cul\u003e\n\u003cli\u003e사용자가 결제를 시도하기 전에, 장바구니에 담긴 모든 메뉴와 총 금액을 출력합니다.\u003c/li\u003e\n\u003cli\u003e출력 예시\n\u003cul\u003e\n\u003cli\u003e각 메뉴의 이름, 가격, 수량\u003c/li\u003e\n\u003cli\u003e총 금액 합계\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e장바구니 담기 기능\u003c/strong\u003e\n\u003cul\u003e\n\u003cli\u003e메뉴를 클릭하면 장바구니에 추가할 지 물어보고, 입력값에 따라 “추가”, “취소” 처리합니다.\n\u003cul\u003e\n\u003cli\u003e메뉴는 한 번에 1개만 담을 수 있습니다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e장바구니에 담은 목록을 출력합니다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e주문 기능\u003c/strong\u003e\n\u003cul\u003e\n\u003cli\u003e장바구니에 담긴 모든 항목을 출력합니다.\u003c/li\u003e\n\u003cli\u003e합산하여 총 금액을 계산하고, “주문하기”를 누르면 장바구니를 초기화합니다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003chr\u003e\n\u003ch2 id=\"구현-기능\"\u003e구현 기능\u003c/h2\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/withong/nbc-chapter-02/tree/main/kiosk/challenge/level1\"\u003e# 전체 코드\u003c/a\u003e\u003c/p\u003e","title":"키오스크 도전 Lv 1"},{"content":" Enum → 단순한 상수의 모음이 아니라, 객체처럼 동작하는 데이터 타입 동등성 (equals()) → 내용이 같으면 true 동일성 (==) → 메모리 주소가 같으면 true hashCode() → 컬렉션에서 일관성 있게 동작하도록 필수적으로 재정의해야 한다. 1. Enum (열거형) Enum은 서로 연관된 상수들의 집합을 정의하는 특별한 데이터 타입이다.\n기존 final static 상수를 사용하는 것보다 더 안전하고 가독성이 좋다.\nEnum의 특징 상수들의 집합으로 사용된다. 내부적으로 final class처럼 동작하며, 새로운 인스턴스를 생성할 수 없다. 객체처럼 필드와 메서드를 가질 수 있다. 타입 안정성을 제공한다. enum Day { SUNDAY, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY; } Day는 요일을 표현하는 상수 그룹이다.\nEnum의 내부 동작 Enum도 객체이다.\n각 Enum 값들은 싱글턴 객체(Singleton Object) 로 관리되며, 자동으로 생성된다.\nenum CoffeeSize { SMALL(200), MEDIUM(300), LARGE(400); private int ml; CoffeeSize(int ml) { // 생성자 this.ml = ml; } public int getMl() { // 메서드 return ml; } } public class Main { public static void main(String[] args) { CoffeeSize size = CoffeeSize.LARGE; System.out.println(size.getMl()); // 400 } } LARGE.getMl()처럼 객체처럼 동작할 수 있다.\nEnum의 활용 1) 단순한 상수로 사용 enum Color { RED, GREEN, BLUE; } 2) 값과 함께 사용 enum Status { SUCCESS(200), ERROR(500); private int code; Status(int code) { this.code = code; } public int getCode() { return code; } } Status.SUCCESS.getCode() → 200\n3) 상태값 관리 enum OrderStatus { PENDING, SHIPPED, DELIVERED, CANCELLED; } public class Order { private OrderStatus status = OrderStatus.PENDING; public void shipOrder() { if (status == OrderStatus.PENDING) { this.status = OrderStatus.SHIPPED; } } } OrderStatus를 사용하면 String을 비교하는 것보다 타입 안정성이 보장된다.\n4) Enum과 메서드 활용 enum Direction { NORTH { @Override public void describe() { System.out.println(\u0026#34;위쪽 방향입니다.\u0026#34;); } }, SOUTH { @Override public void describe() { System.out.println(\u0026#34;아래쪽 방향입니다.\u0026#34;); } }; public abstract void describe(); } Enum 값마다 서로 다른 동작을 정의할 수 있다.\nEnum과 인터페이스 Enum은 인터페이스도 구현할 수 있다.\ninterface Printable { void print(); } enum Level implements Printable { LOW { public void print() { System.out.println(\u0026#34;낮은 레벨\u0026#34;); } }, HIGH { public void print() { System.out.println(\u0026#34;높은 레벨\u0026#34;); } } } Enum이 인터페이스를 구현하면 다형성을 활용할 수 있다.\n2. 동등성(Equality)과 동일성(Identity) 1) 동등성(Equality) 내용이 같은 것 equals() 메서드를 통해 비교한다. String a = new String(\u0026#34;hello\u0026#34;); String b = new String(\u0026#34;hello\u0026#34;); System.out.println(a.equals(b)); // true 문자열의 내용이 같으므로 true 반환.\n2) 동일성(Identity) 메모리 주소가 같은 것 == 연산자를 통해 비교한다. String a = new String(\u0026#34;hello\u0026#34;); String b = new String(\u0026#34;hello\u0026#34;); System.out.println(a == b); // false a와 b는 서로 다른 객체이므로 false 반환.\n3) Primitive Type vs Reference Type 기본 타입(Primitive Type)은 값을 저장하지만, 참조 타입(Reference Type)은 메모리 주소를 저장한다. int x = 5; int y = 5; System.out.println(x == y); // true (값이 같음) Book book1 = new Book(\u0026#34;Java\u0026#34;); Book book2 = new Book(\u0026#34;Java\u0026#34;); System.out.println(book1 == book2); // false (다른 객체) System.out.println(book1.equals(book2)); // 기본적으로 false 4) equals() 오버라이딩 equals()를 재정의하면 내용 비교가 가능해진다. class Book { private String title; Book(String title) { this.title = title; } @Override public boolean equals(Object obj) { if (this == obj) return true; if (obj == null || getClass() != obj.getClass()) return false; Book book = (Book) obj; return Objects.equals(title, book.title); } } 이제 title이 같으면 equals()가 true를 반환함.\n5) hashCode()란? equals()를 오버라이딩하면, hashCode()도 함께 재정의해야 한다. HashMap, HashSet 같은 컬렉션에서 올바르게 동작하기 위해 필요하다. @Override public int hashCode() { return Objects.hash(title); } 정리 개념 설명 비교 방식 Enum 서로 연관된 상수들의 집합 Enum 객체 비교 (== 사용) 동등성 (Equality) 내용이 같은 경우 equals() 사용 동일성 (Identity) 메모리 주소가 같은 경우 == 사용 Primitive Type 값 자체를 저장 == 비교 가능 Reference Type 객체의 주소를 저장 == 사용하면 주소 비교 ","permalink":"http://localhost:1313/record/2025-03-11/","summary":"\u003chr\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eEnum\u003c/strong\u003e → 단순한 상수의 모음이 아니라, \u003cstrong\u003e객체처럼 동작하는 데이터 타입\u003c/strong\u003e\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e동등성 (\u003ccode\u003eequals()\u003c/code\u003e)\u003c/strong\u003e → \u003cstrong\u003e내용\u003c/strong\u003e이 같으면 \u003ccode\u003etrue\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e동일성 (\u003ccode\u003e==\u003c/code\u003e)\u003c/strong\u003e → \u003cstrong\u003e메모리 주소\u003c/strong\u003e가 같으면 \u003ccode\u003etrue\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e\u003ccode\u003ehashCode()\u003c/code\u003e\u003c/strong\u003e → 컬렉션에서 \u003cstrong\u003e일관성 있게 동작하도록 필수적으로 재정의해야 한다.\u003c/strong\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003chr\u003e\n\u003ch2 id=\"1-enum-열거형\"\u003e\u003cstrong\u003e1. Enum (열거형)\u003c/strong\u003e\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eEnum\u003c/strong\u003e은 서로 연관된 상수들의 집합을 정의하는 \u003cstrong\u003e특별한 데이터 타입\u003c/strong\u003e이다.\u003cbr\u003e\n기존 \u003ccode\u003efinal static\u003c/code\u003e 상수를 사용하는 것보다 \u003cstrong\u003e더 안전하고 가독성이 좋다.\u003c/strong\u003e\u003c/p\u003e\n\u003ch3 id=\"enum의-특징\"\u003e\u003cstrong\u003eEnum의 특징\u003c/strong\u003e\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e상수들의 집합으로 사용된다.\u003c/li\u003e\n\u003cli\u003e내부적으로 \u003ccode\u003efinal class\u003c/code\u003e처럼 동작하며, 새로운 인스턴스를 생성할 수 없다.\u003c/li\u003e\n\u003cli\u003e객체처럼 필드와 메서드를 가질 수 있다.\u003c/li\u003e\n\u003cli\u003e타입 안정성을 제공한다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003eenum\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eDay\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"n\"\u003eSUNDAY\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eMONDAY\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eTUESDAY\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eWEDNESDAY\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eTHURSDAY\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eFRIDAY\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eSATURDAY\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003ccode\u003eDay\u003c/code\u003e는 요일을 표현하는 상수 그룹이다.\u003c/p\u003e","title":"Enum \u0026 동일성/동등성"},{"content":" 요구사항 Lv 4. 객체 지향 설계를 적용해 음식 메뉴와 주문 내역을 클래스 기반으로 관리하기 Menu 클래스 생성하기 설명 : MenuItem 클래스를 관리하는 클래스입니다. 예를 들어, 버거 메뉴, 음료 메뉴 등 각 카테고리 내에 여러 MenuItem을 포함합니다. List\u0026lt;MenuItem\u0026gt; 은 Kiosk 클래스가 관리하기에 적절하지 않으므로 Menu 클래스가 관리하도록 변경합니다. 여러 버거들을 포함하는 상위 개념 ‘버거’ 같은 카테고리 이름 필드를 갖습니다. 메뉴 카테고리 이름을 반환하는 메서드가 구현되어야 합니다. Lv 5. 캡슐화 적용하기 MenuItem, Menu 그리고 Kiosk 클래스의 필드에 직접 접근하지 못하도록 설정합니다. Getter와 Setter 메서드를 사용해 데이터를 관리합니다. 구현 기능 #전체 코드\nMain.java 메인 프로그램 List\u0026lt;Menu\u0026gt;를 생성하여 메뉴 카테고리를 추가 new Menu()를 생성하고 .addMenuItems()를 사용해 카테고리별 메뉴 추가 Kiosk 객체를 생성하고 start()를 호출하여 프로그램 실행 List\u0026lt;Menu\u0026gt; menu = Arrays.asList( new Menu(\u0026#34;햄버거\u0026#34;).addMenuItems( new MenuItem(\u0026#34;불고기 버거\u0026#34;, 4200, \u0026#34;불고기 소스에 패티와 마요네즈, 양상추의 맛있는 조합.\u0026#34;), new MenuItem(\u0026#34;치즈 버거\u0026#34;, 3600, \u0026#34;맛있는 치즈와 100% 순 쇠고기 패티, 클래식 치즈 버거.\u0026#34;), new MenuItem(\u0026#34;슈비 버거\u0026#34;, 6600, \u0026#34;탱글한 통새우살에 비프 패티를 더해 푸짐한 슈비 버거.\u0026#34;), new MenuItem(\u0026#34;슈슈 버거\u0026#34;, 5500, \u0026#34;탱글한 통새우살이 가득한 슈슈 버거.\u0026#34;) ), new Menu(\u0026#34;음료\u0026#34;).addMenuItems( new MenuItem(\u0026#34;코카콜라\u0026#34;, 2600, \u0026#34;갈증 해소뿐만이 아니라 기분까지 상쾌하게\u0026#34;), new MenuItem(\u0026#34;스프라이트\u0026#34;, 2600, \u0026#34;청량함에 레몬, 라임향을 더한 시원함\u0026#34;), new MenuItem(\u0026#34;아메리카노\u0026#34;, 3300, \u0026#34;바로 내린 100% 친환경 커피로 더 신선하게\u0026#34;) ), new Menu(\u0026#34;사이드\u0026#34;).addMenuItems( new MenuItem(\u0026#34;코카콜라\u0026#34;, 2600, \u0026#34;갈증 해소뿐만이 아니라 기분까지 상쾌하게\u0026#34;), new MenuItem(\u0026#34;스프라이트\u0026#34;, 2600, \u0026#34;청량함에 레몬, 라임향을 더한 시원함\u0026#34;), new MenuItem(\u0026#34;아메리카노\u0026#34;, 3300, \u0026#34;바로 내린 100% 친환경 커피로 더 신선하게\u0026#34;) ) ); Kiosk kiosk = new Kiosk(menu); kiosk.start(); MenuItem.java 메뉴 관리 메뉴 상세 정보 저장 메뉴명, 가격, 메뉴 설명을 포함하는 객체 public class MenuItem { private String name; private int price; private String desc; MenuItem(String name, int price, String desc) { this.name = name; this.price = price; this.desc = desc; } public String getName() { return name; } public int getPrice() { return price; } public String getDesc() { return desc; } } Menu.java 메뉴 카테고리 관리 카테고리에 속하는 메뉴 리스트 관리 addMenuItems(MenuItem... menu)를 사용해 여러 개의 메뉴를 한 번에 추가 public class Menu { private String category; private List\u0026lt;MenuItem\u0026gt; menuItems; Menu(String category) { this.category = category; menuItems = new ArrayList\u0026lt;\u0026gt;(); } public String getCategory() { return category; } public List\u0026lt;MenuItem\u0026gt; getMenuItems() { return menuItems; } public Menu addMenuItems(MenuItem... menu) { this.menuItems.addAll(Arrays.asList(menu)); return this; } } Kiosk.java 키오스크 프로그램 start() 메인 메뉴를 출력하고, 사용자 입력을 받아 order() 호출 0 입력 시 프로그램 종료 void start() { while (true) { System.out.println(\u0026#34;\\n☰ 메뉴\u0026#34;); for (int i = 0; i \u0026lt; menus.size(); i++) { System.out.println(\u0026#34; [\u0026#34; + (i + 1) + \u0026#34;] \u0026#34; + menus.get(i).getCategory()); } System.out.println(\u0026#34; [0] 종료하기\u0026#34;); int userInput = getInteger(); if (userInput == -1) continue; if (userInput \u0026lt; 0 || userInput \u0026gt; menus.size()) { System.out.println(\u0026#34; 올바른 메뉴 번호를 입력하세요.\u0026#34;); continue; } if (userInput == 0) { System.out.println(\u0026#34;프로그램을 종료합니다.\u0026#34;); break; } Menu userChoice = menus.get(userInput - 1); order(userChoice); } } order() 메뉴 출력 및 선택 선택한 카테고리에 포함된 메뉴를 출력 메뉴 선택 시 pay() 호출하여 결제 진행 0 입력 시 뒤로 가기 private void order(Menu userChoice) { List\u0026lt;MenuItem\u0026gt; menuItems = userChoice.getMenuItems(); while (true) { System.out.println(getDisplayMenu(userChoice)); int userInput = getInteger(); if (userInput == -1) continue; if (userInput == 0) { break; } if (userInput \u0026lt; 0 || userInput \u0026gt; menuItems.size()) { System.out.println(\u0026#34; 올바른 메뉴 번호를 입력하세요.\u0026#34;); continue; } MenuItem menuItem = menuItems.get(userInput - 1); int result = pay(menuItem); if (result == 0) break; } } pay() 선택한 메뉴 가격을 출력하고, 결제 여부 확인 사용자가 금액을 입력하면 가격과 비교하여 결제 성공 또는 실패 처리 금액이 부족하면 결제 여부 재확인 private int pay(MenuItem menuItem) { while (true) { String menuItemName = menuItem.getName(); int price = menuItem.getPrice(); String displayPrice = String.format(\u0026#34;￦ %,d\u0026#34;, price); System.out.println(\u0026#34;\\n☰ 메뉴 \u0026gt; 결제\u0026#34;); System.out.println(\u0026#34; [ \u0026#34; + menuItemName + \u0026#34; ] \u0026#34; + displayPrice); System.out.println(\u0026#34; 결제하시겠습니까? (예: 1, 아니오: 2)\u0026#34;); int input = getInteger(); switch (input) { case 1 -\u0026gt; { System.out.println(\u0026#34;\\n (결제중...) 금액을 입력하세요.\u0026#34;); int amount = getInteger(); if (amount \u0026lt; price) { System.out.println(\u0026#34; 금액이 부족합니다.\u0026#34;); continue; } else if (amount \u0026gt; price) { System.out.println(String.format(\u0026#34;\\n [잔액] ￦ %,d\u0026#34;, (amount - price))); } System.out.println(\u0026#34; 결제가 완료되었습니다. 감사합니다.\u0026#34;); return 0; // 0:홈 } case 2 -\u0026gt; { System.out.println(\u0026#34; 결제가 취소되었습니다.\u0026#34;); return 0; } case -1 -\u0026gt; {} default -\u0026gt; System.out.println(\u0026#34; 올바른 메뉴 번호를 입력하세요.\u0026#34;); } } } 구현 과정 메뉴 추가 방식 개선 Menu 클래스가 추가되면서 Main에서의 초기화 코드가 복잡해지고 가독성이 떨어짐. Menu 객체 생성 후 get(index)를 사용해 카테고리별 메뉴를 추가할 경우, 어느 카테고리에 어떤 메뉴가 추가되는지 직관적으로 파악하기 어려움. setMenuItems() 대신 가변 인자를 갖는 addMenuItems()를 추가하고, return this를 활용해 메서드 체이닝이 가능하도록 개선 [변경 전]\nList\u0026lt;Menu\u0026gt; menu = Arrays.asList( new Menu(\u0026#34;햄버거\u0026#34;), new Menu(\u0026#34;음료\u0026#34;), new Menu(\u0026#34;사이드\u0026#34;) ); menu.get(0).setMenuItems(Arrays.asList( new MenuItem(\u0026#34;불고기 버거\u0026#34;, 4200, \u0026#34;불고기 소스에 패티와 마요네즈, 양상추의 맛있는 조합.\u0026#34;), new MenuItem(\u0026#34;치즈 버거\u0026#34;, 3600, \u0026#34;맛있는 치즈와 100% 순 쇠고기 패티, 클래식 치즈 버거.\u0026#34;), new MenuItem(\u0026#34;슈비 버거\u0026#34;, 6600, \u0026#34;탱글한 통새우살에 비프 패티를 더해 푸짐한 슈비 버거.\u0026#34;), new MenuItem(\u0026#34;슈슈 버거\u0026#34;, 5500, \u0026#34;탱글한 통새우살이 가득한 슈슈 버거.\u0026#34;) )); menu.get(1).setMenuItems(Arrays.asList( new MenuItem(\u0026#34;코카콜라\u0026#34;, 2600, \u0026#34;갈증 해소뿐만이 아니라 기분까지 상쾌하게\u0026#34;), new MenuItem(\u0026#34;스프라이트\u0026#34;, 2600, \u0026#34;청량함에 레몬, 라임향을 더한 시원함\u0026#34;), new MenuItem(\u0026#34;아메리카노\u0026#34;, 3300, \u0026#34;바로 내린 100% 친환경 커피로 더 신선하게\u0026#34;) )); menu.get(2).setMenuItems(Arrays.asList( new MenuItem(\u0026#34;후렌치 후라이\u0026#34;, 3000, \u0026#34;남다른 맛과 바삭함\u0026#34;), new MenuItem(\u0026#34;코울슬로\u0026#34;, 2700, \u0026#34;아삭하게 씹히는 샐러드\u0026#34;), new MenuItem(\u0026#34;치즈스틱\u0026#34;, 3600, \u0026#34;속이 꽉 찬 황금빛 바삭함\u0026#34;) )); [변경 후]\nList\u0026lt;Menu\u0026gt; menu = Arrays.asList( new Menu(\u0026#34;햄버거\u0026#34;).addMenuItems( new MenuItem(\u0026#34;불고기 버거\u0026#34;, 4200, \u0026#34;불고기 소스에 패티와 마요네즈, 양상추의 맛있는 조합.\u0026#34;), new MenuItem(\u0026#34;치즈 버거\u0026#34;, 3600, \u0026#34;맛있는 치즈와 100% 순 쇠고기 패티, 클래식 치즈 버거.\u0026#34;), new MenuItem(\u0026#34;슈비 버거\u0026#34;, 6600, \u0026#34;탱글한 통새우살에 비프 패티를 더해 푸짐한 슈비 버거.\u0026#34;), new MenuItem(\u0026#34;슈슈 버거\u0026#34;, 5500, \u0026#34;탱글한 통새우살이 가득한 슈슈 버거.\u0026#34;) ), new Menu(\u0026#34;음료\u0026#34;).addMenuItems( new MenuItem(\u0026#34;코카콜라\u0026#34;, 2600, \u0026#34;갈증 해소뿐만이 아니라 기분까지 상쾌하게\u0026#34;), new MenuItem(\u0026#34;스프라이트\u0026#34;, 2600, \u0026#34;청량함에 레몬, 라임향을 더한 시원함\u0026#34;), new MenuItem(\u0026#34;아메리카노\u0026#34;, 3300, \u0026#34;바로 내린 100% 친환경 커피로 더 신선하게\u0026#34;) ), new Menu(\u0026#34;사이드\u0026#34;).addMenuItems( new MenuItem(\u0026#34;후렌치 후라이\u0026#34;, 3000, \u0026#34;남다른 맛과 바삭함\u0026#34;), new MenuItem(\u0026#34;코울슬로\u0026#34;, 2700, \u0026#34;아삭하게 씹히는 샐러드\u0026#34;), new MenuItem(\u0026#34;치즈스틱\u0026#34;, 3600, \u0026#34;속이 꽉 찬 황금빛 바삭함\u0026#34;) ) ); 실행 예시 ☰ 메뉴 [1] 햄버거 [2] 음료 [3] 사이드 [0] 종료하기 ⮞ 1 ☰ 메뉴 \u0026gt; 햄버거 [1] 불고기 버거\t| ￦ 4,200\t| 불고기 소스에 패티와 마요네즈, 양상추의 맛있는 조합. [2] 치즈 버거 | ￦ 3,600\t| 맛있는 치즈와 100% 순 쇠고기 패티, 클래식 치즈 버거. [3] 슈비 버거 | ￦ 6,600\t| 탱글한 통새우살에 비프 패티를 더해 푸짐한 슈비 버거. [4] 슈슈 버거 | ￦ 5,500\t| 탱글한 통새우살이 가득한 슈슈 버거. [0] 뒤로 가기 ⮞ 3 ☰ 메뉴 \u0026gt; 결제 [ 슈비 버거 ] ￦ 6,600 결제하시겠습니까? (예: 1, 아니오: 2) ⮞ 1 (결제중...) 금액을 입력하세요. ⮞ 10000 [잔액] ￦ 3,400 결제가 완료되었습니다. 감사합니다. ☰ 메뉴 [1] 햄버거 [2] 음료 [3] 사이드 [0] 종료하기 ⮞ 2 ☰ 메뉴 \u0026gt; 음료 [1] 코카콜라 | ￦ 2,600\t| 갈증 해소뿐만이 아니라 기분까지 상쾌하게 [2] 스프라이트\t| ￦ 2,600\t| 청량함에 레몬, 라임향을 더한 시원함 [3] 아메리카노\t| ￦ 3,300\t| 바로 내린 100% 친환경 커피로 더 신선하게 [0] 뒤로 가기 ⮞ 0 ☰ 메뉴 [1] 햄버거 [2] 음료 [3] 사이드 [0] 종료하기 ⮞ 3 ☰ 메뉴 \u0026gt; 사이드 [1] 후렌치 후라이\t| ￦ 3,000\t| 남다른 맛과 바삭함 [2] 코울슬로 | ￦ 2,700\t| 아삭하게 씹히는 샐러드 [3] 치즈스틱 | ￦ 3,600\t| 속이 꽉 찬 황금빛 바삭함 [0] 뒤로 가기 ⮞ 3 ☰ 메뉴 \u0026gt; 결제 [ 치즈스틱 ] ￦ 3,600 결제하시겠습니까? (예: 1, 아니오: 2) ⮞ 2 결제가 취소되었습니다. ☰ 메뉴 [1] 햄버거 [2] 음료 [3] 사이드 [0] 종료하기 ⮞ 3 ☰ 메뉴 \u0026gt; 사이드 [1] 후렌치 후라이\t| ￦ 3,000\t| 남다른 맛과 바삭함 [2] 코울슬로 | ￦ 2,700\t| 아삭하게 씹히는 샐러드 [3] 치즈스틱 | ￦ 3,600\t| 속이 꽉 찬 황금빛 바삭함 [0] 뒤로 가기 ⮞ 2 ☰ 메뉴 \u0026gt; 결제 [ 코울슬로 ] ￦ 2,700 결제하시겠습니까? (예: 1, 아니오: 2) ⮞ 1 (결제중...) 금액을 입력하세요. ⮞ 2500 금액이 부족합니다. ☰ 메뉴 \u0026gt; 결제 [ 코울슬로 ] ￦ 2,700 결제하시겠습니까? (예: 1, 아니오: 2) ⮞ 1 (결제중...) 금액을 입력하세요. ⮞ 2700 결제가 완료되었습니다. 감사합니다. ☰ 메뉴 [1] 햄버거 [2] 음료 [3] 사이드 [0] 종료하기 ⮞ 2 ☰ 메뉴 \u0026gt; 음료 [1] 코카콜라 | ￦ 2,600\t| 갈증 해소뿐만이 아니라 기분까지 상쾌하게 [2] 스프라이트\t| ￦ 2,600\t| 청량함에 레몬, 라임향을 더한 시원함 [3] 아메리카노\t| ￦ 3,300\t| 바로 내린 100% 친환경 커피로 더 신선하게 [0] 뒤로 가기 ⮞ 0 ☰ 메뉴 [1] 햄버거 [2] 음료 [3] 사이드 [0] 종료하기 ⮞ 0 프로그램을 종료합니다. ","permalink":"http://localhost:1313/project/kiosk-02/","summary":"\u003chr\u003e\n\u003ch2 id=\"요구사항\"\u003e요구사항\u003c/h2\u003e\n\u003ch3 id=\"lv-4-객체-지향-설계를-적용해-음식-메뉴와-주문-내역을-클래스-기반으로-관리하기\"\u003eLv 4. 객체 지향 설계를 적용해 음식 메뉴와 주문 내역을 클래스 기반으로 관리하기\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003e\u003ccode\u003eMenu\u003c/code\u003e 클래스 생성하기\u003c/strong\u003e\n\u003cul\u003e\n\u003cli\u003e설명 : MenuItem 클래스를 관리하는 클래스입니다.\n예를 들어, 버거 메뉴, 음료 메뉴 등 각 카테고리 내에 여러 \u003ccode\u003eMenuItem\u003c/code\u003e을 포함합니다.\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eList\u0026lt;MenuItem\u0026gt;\u003c/code\u003e 은 \u003ccode\u003eKiosk\u003c/code\u003e 클래스가 관리하기에 적절하지 않으므로 Menu 클래스가 관리하도록 변경합니다.\u003c/li\u003e\n\u003cli\u003e여러 버거들을 포함하는 상위 개념 ‘버거’ 같은 \u003ccode\u003e카테고리 이름\u003c/code\u003e 필드를 갖습니다.\u003c/li\u003e\n\u003cli\u003e메뉴 카테고리 이름을 반환하는 메서드가 구현되어야 합니다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cbr\u003e\r\n\u003ch3 id=\"lv-5-캡슐화-적용하기\"\u003eLv 5. 캡슐화 적용하기\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eMenuItem\u003c/code\u003e, \u003ccode\u003eMenu\u003c/code\u003e 그리고 \u003ccode\u003eKiosk\u003c/code\u003e 클래스의 필드에 직접 접근하지 못하도록 설정합니다.\u003c/li\u003e\n\u003cli\u003eGetter와 Setter 메서드를 사용해 데이터를 관리합니다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003chr\u003e\n\u003ch2 id=\"구현-기능\"\u003e구현 기능\u003c/h2\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/withong/nbc-chapter-02/tree/main/kiosk/basic/level4\"\u003e#전체 코드\u003c/a\u003e\u003c/p\u003e","title":"키오스크 필수 Lv 4-5"},{"content":" 요구사항 Lv 1. 기본적인 키오스크를 프로그래밍해보자 요구사항이 가지는 의도\n입력 처리와 간단한 흐름 제어를 복습합니다. (프로그래밍 검증) Scanner 활용법, 조건문, 반복문을 재확인하며 입력 데이터를 처리하는 방법 강화 햄버거 메뉴 출력 및 선택하기\n실행시 햄버거 메뉴가 표시되고, 이후 Scanner로 숫자를 입력받아서 메뉴를 선택할 수 있다. 제시된 메뉴 중 입력받은 숫자에 따라 다른 로직을 실행하는 코드를 작성합니다. 반복문을 이용해서 특정 번호가 입력되면 프로그램을 종료합니다. Lv 2. 객체 지향 설계를 적용해 햄버거 메뉴를 클래스로 관리하기 요구사항이 가지는 의도\n객체 지향 개념을 학습하고, 데이터를 구조적으로 관리하며 프로그램을 설계하는 방법을 익힙니다. 햄버거 메뉴를 MenuItem 클래스와 List를 통해 관리합니다. MenuItem 클래스 생성하기\n설명 : 개별 음식 항목을 관리하는 클래스입니다. 현재는 햄버거만 관리합니다. 클래스는 이름, 가격, 설명 필드를 갖습니다. main 함수에서 MenuItem 클래스를 활용하여 햄버거 메뉴를 출력합니다.\nMenuItem 객체 생성을 통해 이름, 가격, 설명을 세팅합니다. 키워드: new List를 선언하여 여러 MenuItem을 추가합니다. List\u0026lt;MenuItem\u0026gt; menuItems = new ArrayList\u0026lt;\u0026gt;(); 반복문을 활용해 menuItems를 탐색하면서 하나씩 접근합니다. Lv 3. 객체 지향 설계를 적용해 순서 제어를 클래스로 관리하기 요구사항이 가지는 의도 객체 지향 개념을 학습하고, 데이터를 구조적으로 관리하며 프로그램을 설계하는 방법을 익힙니다. main 함수에서 관리하던 전체 순서 제어를 Kiosk 클래스를 통해 관리합니다. Kiosk 클래스 생성하기 설명: 키오스크 프로그램의 메뉴를 관리하고 사용자 입력을 처리하는 클래스입니다. MenuItem을 관리하는 리스트가 필드로 존재합니다. main 함수에서 관리하던 입력과 반복문 로직은 이제 start 함수를 만들어 관리합니다. List\u0026lt;MenuItem\u0026gt; menuItems 는 Kiosk 클래스 생성자를 통해 값을 할당합니다. Kiosk 객체를 생성하고 사용하는 main 함수에서 객체를 생성할 때 값을 넘겨줍니다. 요구사항에 부합하는지 검토 키오스크 프로그램을 시작하는 메서드가 구현되어야 합니다. 콘솔에 햄버거 메뉴를 출력합니다. 사용자의 입력을 받아 메뉴를 선택하거나 프로그램을 종료합니다. 유효하지 않은 입력에 대해 오류 메시지를 출력합니다. 0을 입력하면 프로그램이 ‘뒤로가기’되거나 ‘종료’됩니다. 기능 구현 Main.java public class Main { public static void main(String[] args) { List\u0026lt;MenuItem\u0026gt; menuItems = Arrays.asList( new MenuItem(\u0026#34;불고기 버거\u0026#34;, 4200, \u0026#34;불고기 소스에 패티와 마요네즈, 양상추의 맛있는 조합.\u0026#34;), new MenuItem(\u0026#34;치즈 버거\u0026#34;, 3600, \u0026#34;맛있는 치즈와 100% 순 쇠고기 패티, 클래식 치즈 버거.\u0026#34;), new MenuItem(\u0026#34;슈비 버거\u0026#34;, 6600, \u0026#34;탱글한 통새우살에 비프 패티를 더해 푸짐한 슈비 버거.\u0026#34;), new MenuItem(\u0026#34;슈슈 버거\u0026#34;, 5500, \u0026#34;탱글한 통새우살이 가득한 슈슈 버거.\u0026#34;) ); Kiosk kiosk = new Kiosk(menuItems); kiosk.start(); } } MenuItem.java public class MenuItem { private String name; private int price; private String desc; MenuItem(String name, int price, String desc) { this.name = name; this.price = price; this.desc = desc; } public String getName() { return name; } public int getPrice() { return price; } public String getDesc() { return desc; } } Kiosk.java public class Kiosk { private List\u0026lt;MenuItem\u0026gt; menuItems; Kiosk(List\u0026lt;MenuItem\u0026gt; menuItems) { this.menuItems = menuItems; } void start() { Scanner scanner = new Scanner(System.in); while (true) { System.out.println(\u0026#34;\\n[ MENU - BURGER ]\u0026#34;); for (int i = 0; i \u0026lt; menuItems.size(); i++) { MenuItem menu = menuItems.get(i); String menuName = getDisplayBurgerName(menuItems, menu.getName()); String formatPrice = String.format(\u0026#34;￦ %,d\u0026#34;, menu.getPrice()); System.out.println((i + 1) + \u0026#34;. \u0026#34; + menuName + \u0026#34;\\t| \u0026#34; + formatPrice + \u0026#34; | \u0026#34; + menu.getDesc()); } System.out.println(\u0026#34;0. 종료하기\u0026#34;); int userInput = getInteger(scanner, \u0026#34;\\n주문할 메뉴의 번호를 입력하세요: \u0026#34;); if (userInput \u0026lt; 0 || userInput \u0026gt; menuItems.size()) { System.out.println(\u0026#34;올바른 메뉴 번호를 입력하세요.\u0026#34;); continue; } if (userInput == 0) { System.out.println(\u0026#34;프로그램을 종료합니다.\u0026#34;); break; } MenuItem userChoice = menuItems.get(userInput - 1); String userChoiceName = userChoice.getName(); int userChoicePrice = userChoice.getPrice(); String formatPrice = String.format(\u0026#34;￦ %,d\u0026#34;, userChoicePrice); userInput = getInteger(scanner, \u0026#34;\\n[\u0026#34; + userChoiceName + \u0026#34;] \u0026#34; + formatPrice + \u0026#34;\\n결제하시겠습니까? [예: 1, 아니오: 2] \u0026#34;); if (userInput == 1) { int input = getInteger(scanner, \u0026#34;\\n지불할 금액을 입력하세요: \u0026#34;); if (input \u0026gt; userChoicePrice) { System.out.println(String.format(\u0026#34;\\n[잔액] ￦ %,d\u0026#34;, (input - userChoicePrice))); } else if (input \u0026lt; userChoicePrice) { System.out.println(\u0026#34;금액이 부족합니다. 결제가 취소됩니다.\u0026#34;); continue; } System.out.println(\u0026#34;결제가 완료되었습니다. 감사합니다.\u0026#34;); } else if (userInput == 2) { System.out.println(\u0026#34;결제가 취소되었습니다.\u0026#34;); } else { System.out.println(\u0026#34;올바른 입력이 아닙니다. 결제가 취소됩니다.\u0026#34;); } } } private static int getInteger(Scanner scanner, String prompt) { while (true) { System.out.print(prompt); String input = scanner.nextLine(); try { return Integer.parseInt(input); } catch (NumberFormatException e) { System.out.println(\u0026#34;숫자만 입력 가능합니다.\u0026#34;); } } } // 메뉴 이름을 한글 기준으로 정렬 후 공백을 포함한 문자열을 반환하는 메서드 private static String getDisplayBurgerName(List\u0026lt;MenuItem\u0026gt; menuItems, String menuName) { int maxLength = 0; // 최대 길이 계산 for (MenuItem item : menuItems) { maxLength = Math.max(maxLength, getDisplayLength(item.getName())); } int paddingSize = maxLength - getDisplayLength(menuName); // 부족한 공백 개수 계산 return menuName + \u0026#34; \u0026#34;.repeat(paddingSize); // 버거명 + 공백 리턴 } // 한글을 2칸, 영어/숫자를 1칸으로 계산하는 메서드 private static int getDisplayLength(String text) { int length = 0; for (char c : text.toCharArray()) { if (Character.toString(c).matches(\u0026#34;[가-힣]\u0026#34;)) { length += 2; // 한글이면 2칸 } else { length += 1; // 영어/숫자/기타 문자는 1칸 } } return length; } } 실행 예시 [ MENU - BURGER ] 1. 불고기 버거\t| ￦ 4,200 | 불고기 소스에 패티와 마요네즈, 양상추의 맛있는 조합. 2. 치즈 버거 | ￦ 3,600 | 맛있는 치즈와 100% 순 쇠고기 패티, 클래식 치즈 버거. 3. 슈비 버거 | ￦ 6,600 | 탱글한 통새우살에 비프 패티를 더해 푸짐한 슈비 버거. 4. 슈슈 버거 | ￦ 5,500 | 탱글한 통새우살이 가득한 슈슈 버거. 0. 종료하기 주문할 메뉴의 번호를 입력하세요: 3 [슈비 버거] ￦ 6,600 결제하시겠습니까? [예: 1, 아니오: 2] 1 지불할 금액을 입력하세요: 7000 [잔액] ￦ 400 결제가 완료되었습니다. 감사합니다. [ MENU - BURGER ] 1. 불고기 버거\t| ￦ 4,200 | 불고기 소스에 패티와 마요네즈, 양상추의 맛있는 조합. 2. 치즈 버거 | ￦ 3,600 | 맛있는 치즈와 100% 순 쇠고기 패티, 클래식 치즈 버거. 3. 슈비 버거 | ￦ 6,600 | 탱글한 통새우살에 비프 패티를 더해 푸짐한 슈비 버거. 4. 슈슈 버거 | ￦ 5,500 | 탱글한 통새우살이 가득한 슈슈 버거. 0. 종료하기 주문할 메뉴의 번호를 입력하세요: 4 [슈슈 버거] ￦ 5,500 결제하시겠습니까? [예: 1, 아니오: 2] 2 결제가 취소되었습니다. [ MENU - BURGER ] 1. 불고기 버거\t| ￦ 4,200 | 불고기 소스에 패티와 마요네즈, 양상추의 맛있는 조합. 2. 치즈 버거 | ￦ 3,600 | 맛있는 치즈와 100% 순 쇠고기 패티, 클래식 치즈 버거. 3. 슈비 버거 | ￦ 6,600 | 탱글한 통새우살에 비프 패티를 더해 푸짐한 슈비 버거. 4. 슈슈 버거 | ￦ 5,500 | 탱글한 통새우살이 가득한 슈슈 버거. 0. 종료하기 주문할 메뉴의 번호를 입력하세요: 1 [불고기 버거] ￦ 4,200 결제하시겠습니까? [예: 1, 아니오: 2] 1 지불할 금액을 입력하세요: 4200 결제가 완료되었습니다. 감사합니다. [ MENU - BURGER ] 1. 불고기 버거\t| ￦ 4,200 | 불고기 소스에 패티와 마요네즈, 양상추의 맛있는 조합. 2. 치즈 버거 | ￦ 3,600 | 맛있는 치즈와 100% 순 쇠고기 패티, 클래식 치즈 버거. 3. 슈비 버거 | ￦ 6,600 | 탱글한 통새우살에 비프 패티를 더해 푸짐한 슈비 버거. 4. 슈슈 버거 | ￦ 5,500 | 탱글한 통새우살이 가득한 슈슈 버거. 0. 종료하기 주문할 메뉴의 번호를 입력하세요: 2 [치즈 버거] ￦ 3,600 결제하시겠습니까? [예: 1, 아니오: 2] 1 지불할 금액을 입력하세요: 3500 금액이 부족합니다. 결제가 취소됩니다. [ MENU - BURGER ] 1. 불고기 버거\t| ￦ 4,200 | 불고기 소스에 패티와 마요네즈, 양상추의 맛있는 조합. 2. 치즈 버거 | ￦ 3,600 | 맛있는 치즈와 100% 순 쇠고기 패티, 클래식 치즈 버거. 3. 슈비 버거 | ￦ 6,600 | 탱글한 통새우살에 비프 패티를 더해 푸짐한 슈비 버거. 4. 슈슈 버거 | ￦ 5,500 | 탱글한 통새우살이 가득한 슈슈 버거. 0. 종료하기 주문할 메뉴의 번호를 입력하세요: 5 올바른 메뉴 번호를 입력하세요. [ MENU - BURGER ] 1. 불고기 버거\t| ￦ 4,200 | 불고기 소스에 패티와 마요네즈, 양상추의 맛있는 조합. 2. 치즈 버거 | ￦ 3,600 | 맛있는 치즈와 100% 순 쇠고기 패티, 클래식 치즈 버거. 3. 슈비 버거 | ￦ 6,600 | 탱글한 통새우살에 비프 패티를 더해 푸짐한 슈비 버거. 4. 슈슈 버거 | ￦ 5,500 | 탱글한 통새우살이 가득한 슈슈 버거. 0. 종료하기 주문할 메뉴의 번호를 입력하세요: 4 [슈슈 버거] ￦ 5,500 결제하시겠습니까? [예: 1, 아니오: 2] 2 결제가 취소되었습니다. [ MENU - BURGER ] 1. 불고기 버거\t| ￦ 4,200 | 불고기 소스에 패티와 마요네즈, 양상추의 맛있는 조합. 2. 치즈 버거 | ￦ 3,600 | 맛있는 치즈와 100% 순 쇠고기 패티, 클래식 치즈 버거. 3. 슈비 버거 | ￦ 6,600 | 탱글한 통새우살에 비프 패티를 더해 푸짐한 슈비 버거. 4. 슈슈 버거 | ￦ 5,500 | 탱글한 통새우살이 가득한 슈슈 버거. 0. 종료하기 주문할 메뉴의 번호를 입력하세요: 0 프로그램을 종료합니다. ","permalink":"http://localhost:1313/project/kiosk-01/","summary":"\u003chr\u003e\n\u003ch2 id=\"요구사항\"\u003e요구사항\u003c/h2\u003e\n\u003ch3 id=\"lv-1-기본적인-키오스크를-프로그래밍해보자\"\u003eLv 1. 기본적인 키오스크를 프로그래밍해보자\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003e요구사항이 가지는 의도\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e입력 처리와 간단한 흐름 제어를 복습합니다. (프로그래밍 검증)\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eScanner\u003c/code\u003e 활용법, 조건문, 반복문을 재확인하며 입력 데이터를 처리하는 방법 강화\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003e햄버거 메뉴 출력 및 선택하기\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e실행시 햄버거 메뉴가 표시되고, 이후 Scanner로 숫자를 입력받아서 메뉴를 선택할 수 있다.\u003c/li\u003e\n\u003cli\u003e제시된 메뉴 중 입력받은 숫자에 따라 다른 로직을 실행하는 코드를 작성합니다.\u003c/li\u003e\n\u003cli\u003e반복문을 이용해서 특정 번호가 입력되면 프로그램을 종료합니다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cbr\u003e\r\n\u003ch3 id=\"lv-2-객체-지향-설계를-적용해-햄버거-메뉴를-클래스로-관리하기\"\u003eLv 2. 객체 지향 설계를 적용해 햄버거 메뉴를 클래스로 관리하기\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003e요구사항이 가지는 의도\u003c/strong\u003e\u003c/p\u003e","title":"키오스크 필수 Lv 1-3"},{"content":" ✅ [문제] 알고리즘 \u0026amp; SQL 문제 풀기\n✅ [과제] Java 계산기 만들기 level 3 마무리\n✅ [과제] 과제 TIL \u0026amp; 트러블 슈팅 작성\n✅ 개인 과제 - 도전 구현 [내일배움캠프] 과제 - 계산기 3 / [GitHub] nbc-chapter-02/calculator/level3 🫠 level 2 vs level 3 개선된 점 단일 클래스 구조 → 다층 구조 (패키지 분리) Enum을 통한 연산자(Operator) 관리 제네릭(Operand) + BigDecimal 도입 람다와 스트림을 이용한 결과 필터링 기능 추가 커스텀 예외 클래스(CalculatorException) 활용 개선할 점 Operand\u0026lt;T\u0026gt;가 BigDecimal로만 사용되는 점 ","permalink":"http://localhost:1313/project/calculator-05/","summary":"\u003cblockquote\u003e\n\u003cp\u003e✅ [문제] 알고리즘 \u0026amp; SQL 문제 풀기\u003cbr\u003e\n✅ [과제] Java 계산기 만들기 level 3 마무리\u003cbr\u003e\n✅ [과제] 과제 TIL \u0026amp; 트러블 슈팅 작성\u003c/p\u003e\u003c/blockquote\u003e\n\u003chr\u003e\n\u003ch2 id=\"-개인-과제---도전-구현\"\u003e✅ 개인 과제 - 도전 구현\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://velog.io/@ezro/camp-task-3\"\u003e[내일배움캠프] 과제 - 계산기 3\u003c/a\u003e \u003cstrong\u003e/\u003c/strong\u003e \u003ca href=\"https://github.com/withong/nbc-chapter-02/tree/main/calculator/level3\"\u003e[GitHub] nbc-chapter-02/calculator/level3\u003c/a\u003e\n\u003cbr\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"-level-2-vs-level-3\"\u003e🫠 \u003ccode\u003elevel 2 vs level 3\u003c/code\u003e\u003c/h2\u003e\n\u003cbr\u003e\r\n\u003ch3 id=\"개선된-점\"\u003e개선된 점\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e단일 클래스 구조 → 다층 구조 (패키지 분리)\u003c/li\u003e\n\u003cli\u003eEnum을 통한 연산자(Operator) 관리\u003c/li\u003e\n\u003cli\u003e제네릭(Operand) + BigDecimal 도입\u003c/li\u003e\n\u003cli\u003e람다와 스트림을 이용한 결과 필터링 기능 추가\u003c/li\u003e\n\u003cli\u003e커스텀 예외 클래스(CalculatorException) 활용\u003c/li\u003e\n\u003c/ul\u003e\n\u003cbr\u003e\r\n\u003ch3 id=\"개선할-점\"\u003e개선할 점\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eOperand\u0026lt;T\u0026gt;\u003c/code\u003e가 BigDecimal로만 사용되는 점\u003c/li\u003e\n\u003c/ul\u003e","title":"계산기 Lv 3 회고"},{"content":"요구사항 Enum, 제네릭, 람다 \u0026amp; 스트림을 이해한 계산기 만들기\n현재 사칙연산 계산기는 (➕,➖,✖️,➗) 이렇게 총 4가지 연산 타입으로 구성되어 있습니다.\nEnum 타입을 활용하여 연산자 타입에 대한 정보를 관리하고 이를 사칙연산 계산기 ArithmeticCalculator 클래스에 활용 해봅니다. 실수, 즉 double 타입의 값을 전달 받아도 연산이 수행하도록 만들기\n키워드 : 제네릭 단순히, 기존의 Int 타입을 double 타입으로 바꾸는 게 아닌 점에 주의하세요! 지금까지는 ArithmeticCalculator, 즉 사칙연산 계산기는 양의 정수(0 포함)를 매개변수로 전달받아 연산을 수행 피연산자를 여러 타입으로 받을 수 있도록 기능을 확장 ArithmeticCalculator 클래스의 연산 메서드(calculate) 위 요구사항을 만족할 수 있도록 ArithmeticCalculator 클래스를 수정합니다. (제네릭) 추가적으로 수정이 필요한 다른 클래스나 메서드가 있다면 같이 수정 해주세요. 저장된 연산 결과들 중 Scanner로 입력받은 값보다 큰 결과값 들을 출력\nArithmeticCalculator 클래스에 위 요구사항을 만족하는 조회 메서드를 구현합니다. 단, 해당 메서드를 구현할 때 Lambda \u0026amp; Stream을 활용하여 구현합니다. 파일 구조 파일명 패키지 역할 App.java calculator.level3.ui 프로그램 실행 및 메뉴 제공 InputValidator.java calculator.level3.ui 사용자 입력 검증 Operand.java calculator.level3.model 피연산자(BigDecimal 변환 포함) Operator.java calculator.level3.model 연산자(+, -, *, /) 및 연산 수행 CalculationRecord.java calculator.level3.model 연산 기록 저장 객체 ArithmeticCalculator.java calculator.level3.service 실제 계산 수행 및 기록 관리 CalculatorException.java calculator.level3.exception 예외 처리 클래스 기능 구현 # 전체 코드\nApp main(String[] args)\n메뉴 번호를 입력받아 처리 1 입력 시 피연산자 2개, 연산자 입력받고 연산 수행 2 입력 시 연산 기록 조회 3 입력 시 기록 선택/전체 삭제 4 입력 시 결과 검색(특정 값보다 큰/작은/같은 결과) 5 입력 시 프로그램 종료 잘못된 메뉴 번호는 예외 발생 모든 예외는 catch 후 메시지 출력 InputValidator getValidInt()\n메뉴 번호를 입력받음 빈 값이면 예외 발생 숫자가 아닌 문자가 섞여 있으면 예외 발생 정상 정수면 int로 파싱해 반환 getValidNumber(String message)\n사용자 입력받음 빈 값이면 예외 발생 숫자로 변환 불가능하면 예외 발생 BigDecimal로 변환 후 Operand\u0026lt;BigDecimal\u0026gt; 형태로 감싸 반환 getValidOperator()\n연산자 입력받음 빈 값이면 예외 발생 + - * / 중 하나가 아니면 예외 발생 해당 기호의 Operator enum을 찾아 반환 selectRecordsWhere(ArithmeticCalculator calculator)\n메뉴 번호와 기준 값을 입력받아 처리 1 기준 값보다 큰 연산 결과 검색 2 기준 값보다 작은 연산 결과 검색 3 기준 값과 일치하는 연산 결과 검색 빈 값이면 메서드 즉시 종료(취소 처리 → null 반환) BigDecimal 변환 후, calculator.getRecords()를 스트림으로 순회 result를 toBigDecimal() 한 뒤 기준값과 비교 조건(\u0026gt; \u0026lt; =) 만족하는 기록만 필터링하여 반환 selectRecordToRemove(ArithmeticCalculator calculator)\n목록을 보여주고, 삭제할 기록 번호나 all을 입력받음 빈 값이면 취소 후 메서드 종료 all이면 전체 삭제 후 종료 정상 범위 번호면 해당 인덱스의 기록을 삭제 숫자가 아니거나 없는 메뉴 번호면 예외 발생 isNumber(String str)\n전달받은 문자열이 BigDecimal로 파싱 가능한지 시도 성공하면 true, 실패하면 false toBigDecimal(Operand\u0026lt;?\u0026gt; operand)\nOperand의 getOperand()로 값을 꺼낸 뒤 BigDecimal로 변환 숫자가 아니면 예외 발생 변환 후 stripTrailingZeros Operand Operand(T operand)\n피연산자 값을 입력받아 내부 필드에 저장 getOperand()\n내부에 저장된 피연산자 값을 그대로 반환 toBigDecimal()\n내부 값이 BigDecimal 타입인지 확인 BigDecimal이면 그 값을 반환 그렇지 않으면 예외 발생 toString()\noperand.toString() 결과를 반환 Operator Operator(String symbol)\nEnum 생성자 + - * / 등 기호를 symbol로 저장 apply(Operand\u0026lt;?\u0026gt; number1, Operand\u0026lt;?\u0026gt; number2)\n두 피연산자의 toBigDecimal()을 호출해 BigDecimal로 변환 연산자 유형에 따라 add, subtract, multiply, divide 수행 divide 시 분모가 0이면 CalculatorException 발생 연산 결과(BigDecimal) 반환 CalculationRecord CalculationRecord(Operand\u0026lt;?\u0026gt; number1, Operator operator, Operand\u0026lt;?\u0026gt; number2, Operand\u0026lt;?\u0026gt; result)\n연산에 사용된 피연산자 2개, 연산자, 결과를 입력받아 저장 getResult()\n연산 결과 반환 toString()\n[ number1 operator number2 = result ] 형태의 문자열 반환 ArithmeticCalculator ArithmeticCalculator()\n내부 List\u0026lt;CalculationRecord\u0026gt; records 초기화 calculate(Operand\u0026lt;?\u0026gt; number1, Operator operator, Operand\u0026lt;?\u0026gt; number2)\noperator.apply(number1, number2) 호출로 BigDecimal 연산 수행 예외 발생 시(0으로 나누기) \u0026ldquo;정의되지 않음\u0026rdquo; 문자열을 결과로 처리 정상 결과면 formatOperand(BigDecimal)로 포맷팅 updateRecord(\u0026hellip;)로 기록을 저장한 뒤 결과 반환 getRecords()\nrecords 리스트를 반환 removeRecord(int index)\n해당 인덱스의 기록을 제거 clearRecords()\nrecords 리스트를 비움 updateRecord(Operand\u0026lt;?\u0026gt; number1, Operator operator, Operand\u0026lt;?\u0026gt; number2, Operand\u0026lt;?\u0026gt; result)\nrecords 리스트에 추가 formatOperand(BigDecimal result)\nBigDecimal을 문자열로 변환(정수, 소수점 8자리, 과학적 표기 등) 변환된 문자열을 Operand\u0026lt;String\u0026gt; 형태로 감싸 반환 useScientificNotation(BigDecimal bigDecimal)\n연산 결과에 과학적 표기법을 적용할 건지 검사 10자리 이상의 정수 또는 소수점 이하가 8자리 이상이면 true CalculatorException CalculatorException(Type type)\n예외 유형을 입력받아 내부 필드에 저장 getMessage()\nType에 따라 다른 메시지 반환 enum 내부에 Type 정의 EMPTY_VALUE → \u0026ldquo;* 입력된 값이 없습니다. ***\u0026rdquo; INVALID_NUMBER → \u0026ldquo;* 유효하지 않은 숫자입니다. ***\u0026rdquo; INVALID_OPERATOR → \u0026ldquo;* 유효하지 않은 연산자입니다. ***\u0026rdquo; DIVISION_BY_ZERO → \u0026ldquo;* 0으로 나눌 수 없습니다. ***\u0026rdquo; 문제 및 해결 타입 변환 및 연산 과정 문제\n초기 설계 - Operand\u0026lt;T\u0026gt;를 정의하여 입력값을 검증한 후 **적절한 타입(Integer, Long, Double)**으로 변환. Integer, Long, Double을 지원하며, 혼합 연산 시 Double로 변환하여 연산.\n타입 변환 과정\n소수 입력 → Operand\u0026lt;Double\u0026gt; int 범위 → Operand\u0026lt;Integer\u0026gt; int 초과 long 범위 → Operand\u0026lt;Long\u0026gt; long 초과 → Operand\u0026lt;Double\u0026gt; Double 연산 시 부동소수점 오차 발생\nOperand\u0026lt;Integer\u0026gt;, Operand\u0026lt;Long\u0026gt;를 받아서 Operand\u0026lt;Double\u0026gt;로 변환하는 코드가 중복됨 → Integer, Long을 Double로 변환하여 연산할 때 매 연산마다 Double.parseDouble()을 사용하여 변환해야 함.\n분석\nDouble 연산 시 부동소수점 오차를 해결할 수 있는 방법은?\n→ BigDecimal을 사용하여 연산 수행\n→ BigDecimal은 부동소수점 오차 없이 정확한 연산이 가능. 해결 및 개선\n모든 숫자를 Operand\u0026lt;BigDecimal\u0026gt;로 변환하여 저장, 연산 시에도 BigDecimal을 사용. 0으로 나누기 연산 오류 시 Operand\u0026lt;String\u0026gt;으로 \u0026ldquo;정의되지 않음\u0026rdquo; 문자열 저장. 결과\n연산 과정에서 발생하는 부동소수점 오차 해결 모든 숫자를 BigDecimal로 통일하여 변환 과정 단순화 연산 메서드에서 Double 변환 없이 BigDecimal 연산 수행 가능 과학적 표기법 문제\n소수점 8자리 포맷팅 + 과학적 표기법 동시 사용 이슈 - 처음에는 DecimalFormat(\u0026ldquo;0.########\u0026quot;)로 8자리까지 소수점을 유지하려 했지만, 큰 수(예: 1.685644e9)에서는 **아이폰 계산기**처럼 1.685644e9 형태가 나오길 기대했으나, 실제 출력은 1.68564381645E9처럼 오차가 생기거나 소수 자릿수가 달라지는 문제가 발생.\n반올림 문제 - DecimalFormat(\u0026ldquo;0.######E0\u0026rdquo;)를 쓰면 과학적 표기법 적용은 되지만, 소수점 이하가 0이면 정수형처럼 보이지 않거나, 소수점 자리가 의도치 않게 잘려서 반올림이 강제로 적용됨.\n부동소수점(Double) 오차 누적 - 소수점 8자리로 맞춘 뒤에도, 내부에서 Double 변환이 섞여 있으면 “불필요한 자리수(0.30000000004 등)”가 생기는 문제가 계속 발생.\n분석\nDouble 부동소수점 오차가 핵심 원인. “0.30000000000000004” 등의 현상이 발생할 수 있고, 포맷팅 시에도 예기치 않은 자릿수로 반올림되는 경우가 있음. DecimalFormat만으로는 한계가 존재. 큰 수(소수점 이상 10자리 이상)나 소수점 이하 자릿수(8자리 이상)에서 원하는 대로 과학적 표기법을 적용하려면, 별도의 로직이나 세밀한 설정이 필요함. BigDecimal을 직접 사용해야 “소수점 N자리에서 정밀하게 반올림” + “원하지 않는 0 제거(stripTrailingZeros)” 등의 제어가 가능. 해결 및 개선\nBigDecimal으로 연산\n중간에 Double를 거치지 않고, 입력부터 BigDecimal로 받음. setScale(8, RoundingMode.HALF_UP)로 소수점 8자리 기준 반올림 후, stripTrailingZeros()로 불필요한 0 제거. 과학적 표기법 적용 조건을 명시적으로 구현\n“소수점 이상 10자리 또는 소수점 이하 8자리 이상이면 과학적 표기법을 적용” 하는 식으로, 직접 기준을 잡아 로직 작성. 과학적 표기법 시에는 DecimalFormat(\u0026ldquo;0.######E0\u0026rdquo;)를 사용하되, 정수 형태(소수점 이하가 0)로 보일 때는 일반 포맷(#.########)을 사용하도록 분기. Double 변환 제거\n최종 결과를 다시 Double로 변환하지 않고, 문자열 상태로(Operand\u0026lt;\u0026gt;(formatted)) 반환해 최종 출력. 결과\n큰 수에서 1.685644e9처럼 표현되고, 일반 범위에서는 123.45678912처럼 8자리까지만 유지하는 등 원하는 형식대로 출력 가능. 실행 예시 정상 실행 예시 --------- 계산기 Version 3.0 ---------\r[1] 연산하기\r[2] 연산 기록 조회하기\r[3] 연산 기록 삭제하기\r[4] 연산 결과 검색하기\r[5] 종료하기\r-------------------------------------\r* 메뉴 번호를 입력하세요: 1\r-------------------------------------\r* 첫 번째 숫자를 입력하세요: 123\r* 사용할 연산자를 입력하세요: +\r* 두 번째 숫자를 입력하세요: 456\r-------------------------------------\r[ 123 + 456 = 579 ]\r-------------------------------------\r[1] 연산하기\r[2] 연산 기록 조회하기\r[3] 연산 기록 삭제하기\r[4] 연산 결과 검색하기\r[5] 종료하기\r-------------------------------------\r* 메뉴 번호를 입력하세요: 1\r-------------------------------------\r* 첫 번째 숫자를 입력하세요: 12345.15\r* 사용할 연산자를 입력하세요: *\r* 두 번째 숫자를 입력하세요: 136543\r-------------------------------------\r[ 12345.15 * 136543 = 1.685644e9 ]\r-------------------------------------\r[1] 연산하기\r[2] 연산 기록 조회하기\r[3] 연산 기록 삭제하기\r[4] 연산 결과 검색하기\r[5] 종료하기\r-------------------------------------\r* 메뉴 번호를 입력하세요: 2\r-------------------------------------\r[1] [ 123 + 456 = 579 ]\r[2] [ 12345.15 * 136543 = 1.685644e9 ]\r-------------------------------------\r[1] 연산하기\r[2] 연산 기록 조회하기\r[3] 연산 기록 삭제하기\r[4] 연산 결과 검색하기\r[5] 종료하기\r-------------------------------------\r* 메뉴 번호를 입력하세요: 3\r-------------------------------------\r[1] [ 123 + 456 = 579 ]\r[2] [ 12345.15 * 136543 = 1.685644e9 ]\r-------------------------------------\r* 삭제할 기록의 번호를 입력하세요.\r[취소: enter][전체: all 입력] 1\r***** 계산 기록이 삭제되었습니다. *****\r-------------------------------------\r[1] 연산하기\r[2] 연산 기록 조회하기\r[3] 연산 기록 삭제하기\r[4] 연산 결과 검색하기\r[5] 종료하기\r-------------------------------------\r* 메뉴 번호를 입력하세요: 4\r-------------------------------------\r[1] 보다 큰 값 검색하기\r[2] 보다 작은 값 검색하기\r[3] 일치하는 값 검색하기\r-------------------------------------\r* 메뉴 번호를 입력하세요. [취소: enter] 1\r* 기준 값을 입력하세요: 1.685644e8\r-------------------------------------\r[1] [ 12345.15 * 136543 = 1.685644e9 ]\r-------------------------------------\r[1] 연산하기\r[2] 연산 기록 조회하기\r[3] 연산 기록 삭제하기\r[4] 연산 결과 검색하기\r[5] 종료하기\r-------------------------------------\r* 메뉴 번호를 입력하세요: 5\r------------- 계산기 종료 ------------- 예외 실행 예시 -------------------------------------\r[1] 연산하기\r[2] 연산 기록 조회하기\r[3] 연산 기록 삭제하기\r[4] 연산 결과 검색하기\r[5] 종료하기\r-------------------------------------\r* 메뉴 번호를 입력하세요: 6\r***** 유효하지 않은 숫자입니다. *****\r------------------------------------- -------------------------------------\r* 첫 번째 숫자를 입력하세요: 1\r* 사용할 연산자를 입력하세요: 2\r***** 유효하지 않은 연산자입니다. *****\r------------------------------------- -------------------------------------\r* 메뉴 번호를 입력하세요: ***** 입력된 값이 없습니다. *****\r------------------------------------- -------------------------------------\r* 첫 번째 숫자를 입력하세요: 99\r* 사용할 연산자를 입력하세요: /\r* 두 번째 숫자를 입력하세요: 0\r***** 0으로 나눌 수 없습니다. *****\r-------------------------------------\r[ 99 / 0 = 정의되지 않음 ]\r------------------------------------- -------------------------------------\r[1] [ 1 + 1 = 2 ]\r[2] [ 2 + 2 = 4 ]\r[3] [ 3 + 3 = 6 ]\r[4] [ 4 + 4 = 8 ]\r[5] [ 5 + 5 = 10 ]\r[6] [ 99 / 0 = 정의되지 않음 ]\r[7] [ 1 - 5 = -4 ]\r[8] [ -9 * 40 = -360 ]\r-------------------------------------\r* 삭제할 기록의 번호를 입력하세요.\r[취소: enter][전체: all 입력] 9\r***** 유효하지 않은 숫자입니다. *****\r------------------------------------- -------------------------------------\r[1] 연산하기\r[2] 연산 기록 조회하기\r[3] 연산 기록 삭제하기\r[4] 연산 결과 검색하기\r[5] 종료하기\r-------------------------------------\r* 메뉴 번호를 입력하세요: 4\r-------------------------------------\r[1] 보다 큰 값 검색하기\r[2] 보다 작은 값 검색하기\r[3] 일치하는 값 검색하기\r-------------------------------------\r* 메뉴 번호를 입력하세요. [취소: enter] 4\r***** 유효하지 않은 숫자입니다. *****\r------------------------------------- ","permalink":"http://localhost:1313/project/calculator-04/","summary":"\u003ch2 id=\"요구사항\"\u003e요구사항\u003c/h2\u003e\n\u003cp\u003eEnum, 제네릭, 람다 \u0026amp; 스트림을 이해한 계산기 만들기\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003e현재 사칙연산 계산기는 (➕,➖,✖️,➗) 이렇게 총 4가지 연산 타입으로 구성되어 있습니다.\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eEnum 타입을 활용하여 연산자 타입에 대한 정보를 관리하고 이를 사칙연산 계산기 ArithmeticCalculator 클래스에 활용 해봅니다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003e실수, 즉 double 타입의 값을 전달 받아도 연산이 수행하도록 만들기\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e키워드 : \u003ccode\u003e제네릭\u003c/code\u003e\n\u003cul\u003e\n\u003cli\u003e단순히, 기존의 Int 타입을 double 타입으로 바꾸는 게 아닌 점에 주의하세요!\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e지금까지는 ArithmeticCalculator, 즉 사칙연산 계산기는 양의 정수(0 포함)를 매개변수로 전달받아 연산을 수행\u003c/li\u003e\n\u003cli\u003e피연산자를 여러 타입으로 받을 수 있도록 기능을 확장\n\u003cul\u003e\n\u003cli\u003eArithmeticCalculator 클래스의 연산 메서드(\u003ccode\u003ecalculate\u003c/code\u003e)\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e위 요구사항을 만족할 수 있도록 ArithmeticCalculator 클래스를 수정합니다. (제네릭)\n\u003cul\u003e\n\u003cli\u003e추가적으로 수정이 필요한 다른 클래스나 메서드가 있다면 같이 수정 해주세요.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003e저장된 연산 결과들 중 Scanner로 입력받은 값보다 큰 결과값 들을 출력\u003c/strong\u003e\u003c/p\u003e","title":"계산기 Lv 3"},{"content":" ✅ [과제] Java 계산기 만들기 level 2 수정\n✅ [과제] 과제 TIL \u0026amp; 트러블 슈팅 작성\n✅ [문제] 알고리즘 문제 풀기\n✅ 개인 과제 - 필수 구현 [내일배움캠프] 과제 - 계산기 1 / [GitHub] nbc-chapter-02/calculator/level1 [내일배움캠프] 과제 - 계산기 2 / [GitHub] nbc-chapter-02/calculator/level2 🫠 level 1 vs level 2 개선된 점 계산 결과 객체, 계산기 기능 클래스, 프로그램 실행으로 역할 분리 calculate()의 반환 타입 double에서 String으로 변경\n→ 연산 오류 처리 반환값 -9999에서 의미 있는 메시지로 개선 CalculationRecord 클래스 추가하여 연산 기록 저장 방식 개선 trimRecords() 추가하여 과도한 데이터 누적 방지 0으로 나누기 처리 Error에서 정의되지 않음으로 개선 int 범위 초과 처리 Error에서 연산 범위 초과로 개선 최근 연산 기록 조회할 수 있도록 showRecords() 추가 사용자가 직접 삭제할 수 있도록 removeRecords() 메서드 추가. 개선할 점 int 범위 초과하는 입력값, 연산 결과 오류 → long으로 확장 오류 처리 방식 handleError → 커스텀 예외 처리 ","permalink":"http://localhost:1313/project/calculator-03/","summary":"\u003cblockquote\u003e\n\u003cp\u003e✅ [과제] Java 계산기 만들기 level 2 수정\u003cbr\u003e\n✅ [과제] 과제 TIL \u0026amp; 트러블 슈팅 작성\u003cbr\u003e\n✅ [문제] 알고리즘 문제 풀기\u003c/p\u003e\u003c/blockquote\u003e\n\u003chr\u003e\r\n\u003cbr\u003e\r\n\u003ch2 id=\"-개인-과제---필수-구현\"\u003e✅ 개인 과제 - 필수 구현\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://velog.io/@ezro/camp-task-1\"\u003e[내일배움캠프] 과제 - 계산기 1\u003c/a\u003e \u003cstrong\u003e/\u003c/strong\u003e \u003ca href=\"https://github.com/withong/nbc-chapter-02/tree/main/calculator/level1\"\u003e[GitHub] nbc-chapter-02/calculator/level1\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://velog.io/@ezro/camp-task-2\"\u003e[내일배움캠프] 과제 - 계산기 2\u003c/a\u003e \u003cstrong\u003e/\u003c/strong\u003e \u003ca href=\"https://github.com/withong/nbc-chapter-02/tree/main/calculator/level2\"\u003e[GitHub] nbc-chapter-02/calculator/level2\u003c/a\u003e\n\u003cbr\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"-level-1-vs-level-2\"\u003e🫠 \u003ccode\u003elevel 1 vs level 2\u003c/code\u003e\u003c/h2\u003e\n\u003ch3 id=\"개선된-점\"\u003e개선된 점\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e계산 결과 객체, 계산기 기능 클래스, 프로그램 실행으로 역할 분리\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ecalculate()\u003c/code\u003e의 반환 타입 \u003ccode\u003edouble\u003c/code\u003e에서 \u003ccode\u003eString\u003c/code\u003e으로 변경\u003cbr\u003e\n→ 연산 오류 처리 반환값 \u003ccode\u003e-9999\u003c/code\u003e에서 \u003ccode\u003e의미 있는 메시지\u003c/code\u003e로 개선\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eCalculationRecord\u003c/code\u003e 클래스 추가하여 연산 기록 저장 방식 개선\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003etrimRecords()\u003c/code\u003e 추가하여 과도한 데이터 누적 방지\u003c/li\u003e\n\u003cli\u003e0으로 나누기 처리 \u003ccode\u003eError\u003c/code\u003e에서 \u003ccode\u003e정의되지 않음\u003c/code\u003e으로 개선\u003c/li\u003e\n\u003cli\u003eint 범위 초과 처리 \u003ccode\u003eError\u003c/code\u003e에서 \u003ccode\u003e연산 범위 초과\u003c/code\u003e로 개선\u003c/li\u003e\n\u003cli\u003e최근 연산 기록 조회할 수 있도록 \u003ccode\u003eshowRecords()\u003c/code\u003e 추가\u003c/li\u003e\n\u003cli\u003e사용자가 직접 삭제할 수 있도록 \u003ccode\u003eremoveRecords()\u003c/code\u003e 메서드 추가.\n\u003cbr\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"개선할-점\"\u003e개선할 점\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eint\u003c/code\u003e 범위 초과하는 입력값, 연산 결과 오류 → \u003ccode\u003elong\u003c/code\u003e으로 확장\u003c/li\u003e\n\u003cli\u003e오류 처리 방식 \u003ccode\u003ehandleError\u003c/code\u003e → 커스텀 예외 처리\u003c/li\u003e\n\u003c/ul\u003e","title":"계산기 Lv 1-2 회고"},{"content":"요구사항 클래스를 적용해 기본적인 연산을 수행할 수 있는 계산기 만들기\n사칙연산을 수행 후, 결과값 반환 메서드 구현 \u0026amp; 연산 결과를 저장하는 컬렉션 타입 필드를 가진 Calculator 클래스를 생성\n사칙연산을 수행한 후, 결과값을 반환하는 메서드 구현 연산 결과를 저장하는 컬렉션 타입 필드를 가진 Calculator 클래스를 생성 양의 정수 2개(0 포함)와 연산 기호를 매개변수로 받아 사칙연산(➕,➖,✖️,➗) 기능을 수행한 후 2) 결과 값을 반환하는 메서드와 연산 결과를 저장하는 컬렉션 타입 필드를 가진 Calculator 클래스를 생성합니다. Lv 1에서 구현한 App 클래스의 main 메서드에 Calculator 클래스가 활용될 수 있도록 수정\n연산 수행 역할은 Calculator 클래스가 담당 연산 결과는 Calculator 클래스의 연산 결과를 저장하는 필드에 저장 소스 코드 수정 후에도 수정 전의 기능들이 반드시 똑같이 동작해야합니다. App 클래스의 main 메서드에서 Calculator 클래스의 연산 결과를 저장하고 있는 컬렉션 필드에 직접 접근하지 못하도록 수정 (캡슐화)\n간접 접근을 통해 필드에 접근하여 가져올 수 있도록 구현합니다. (Getter 메서드) 간접 접근을 통해 필드에 접근하여 수정할 수 있도록 구현합니다. (Setter 메서드) 위 요구사항을 모두 구현 했다면 App 클래스의 main 메서드에서 위에서 구현한 메서드를 활용 해봅니다. Calculator 클래스에 저장된 연산 결과들 중 가장 먼저 저장된 데이터를 삭제하는 기능을 가진 메서드를 구현한 후 App 클래스의 main 메서드에 삭제 메서드가 활용될 수 있도록 수정\n키워드 : 컬렉션 컬렉션에서 ‘값을 넣고 제거하는 방법을 이해한다.’가 중요합니다! 기능 구현 CalculationRecord 계산 기록을 저장하는 역할을 하는 클래스\n각 연산의 입력값, 연산자, 결과값을 하나의 객체로 관리 불변 객체로 설계되어 한 번 생성된 후 값 변경 불가 toString() 오버라이딩을 통해 깔끔한 출력 형식 제공 Calculator 계산기 기능을 제공하는 클래스\nrecords\n연산 결과를 저장할 records 리스트를 선언. private으로 선언하여 외부에서 직접 접근 불가능 → 캡슐화 강화. Calculator()\n클래스가 생성될 때 records 리스트 초기화 setUserNumber()\n숫자를 입력받는 메서드.\n사용자로부터 입력받은 숫자가 올바른 값인지 검증 후 반환.\n사용자의 입력을 trim()하여 공백 제거. nextLine()을 사용하여 엔터 입력도 인식할 수 있도록 함. 아무 값도 입력하지 않으면 오류 메시지를 출력하고 다시 입력 요청. 정규식 \\\\d+를 사용하여 0 이상의 정수만 입력 가능하도록 검증.\n문자, 소수점 숫자 등은 허용되지 않음. int로 변환할 수 없는 값이 입력되면 오류 출력 후 다시 입력 요청. setUserOperator()\n사용자로부터 연산자를 입력받아 검증 후 반환하는 메서드. 연산자로 사용할 수 있는 값들을 문자열 operators에 저장. 입력값이 한 글자인지 확인 후, 연산자로 사용 가능한 값인지 검증. 정상적인 연산자(+, -, *, /)가 입력되면 반환. 잘못된 입력이면 오류 메시지를 출력하고 다시 입력 요청. calculate()\n입력받은 두 숫자와 연산자를 사용하여 계산을 수행하는 메서드. Math.~Exact()를 사용하여 int 범위 초과 감지. 0으로 나누려 할 경우 오류 출력 후 정의되지 않음 반환. 잘못된 연산자가 입력되었을 경우 오류 출력 후 Error 반환. 연산 중 int 범위를 초과하면 오류 출력 후 연산 범위 초과 반환. 정상적인 경우 String으로 변환하여 연산 결과 반환. handleError()\n오류 발생 시 사용자에게 적절한 메시지를 출력하는 메서드. updateRecords()\n새로운 연산 결과를 records에 추가하는 메서드. 정규식을 활용하여 숫자와 문자열(오류 메시지) 구분\n-? → 음수(-)일 수도 있고, 양수일 수도 있음.\n\\\\d+ → 반드시 하나 이상의 숫자(0~9)가 포함됨.\n(\\\\.\\\\d+)? → 소수점 이하가 있을 수도 있고, 없을 수도 있음.\n숫자가 아닌 경우(오류 메시지인 경우) 그대로 저장\n숫자인 경우 DecimalFormat을 사용하여 포맷팅 후 저장\n소수점 8자리까지 반올림하여 저장. 소수점 이하가 0이면 정수 형태로 변환. 연산 결과를 CalculationRecord 객체로 변환 후 리스트에 추가\ntrimRecords() 호출하여 최대 10개까지만 저장되도록 유지\ntrimRecords()\n기록 개수를 제한하는 메서드. 최대 10개까지만 저장되도록 유지, 초과 시 가장 오래된 기록 삭제. showRecords()\n최근 기록 목록을 출력하는 메서드. (최대 10개) 기록이 없으면 오류 메시지 출력 후 종료. 오래된 순으로 번호를 부여하여 저장된 기록을 출력. showLastRecord()\n최근 기록을 출력하는 메서드 (마지막 연산) 기록이 없으면 오류 메시지 출력 후 종료. 마지막에 저장된 연산 기록을 출력. removeRecords()\n사용자로부터 입력을 받아 기록을 삭제하는 메서드. 저장된 기록이 없는 경우, 메시지를 출력하고 메서드 종료.\n현재 저장된 기록을 showRecords()를 호출하여 화면에 출력.\n사용자가 선택할 수 있도록 기록을 보여준 후, 삭제할 번호를 입력받음.\n삭제할 기록 번호를 입력하라는 안내 메시지 출력.\nenter를 눌러 빈 값을 입력하면 삭제를 취소하고 메서드를 종료.\nall을 입력하면 전체 삭제 후 완료 메시지를 출력하고 메서드 종료.\n입력 값이 enter나 all이 아닌 경우, int로 변환 시도.\n숫자가 아닌 값이 입력되면 오류 메시지를 출력하고 재입력 요청.\n입력값이 범위를 벗어나면 오류 메시지를 출력하고 재입력 요청.\n입력된 번호가 존재하는 기록의 번호 범위안에 있는지 확인.\n입력값이 범위 내에 존재하면 리스트에서 해당 인덱스의 기록을 삭제.\n삭제 완료 후 완료 메시지를 출력하고 메서드 종료.\nApp main()\n사용자 입력을 받아 계산기를 동작시키는 역할.\n메뉴를 출력하고, Calculator 클래스를 사용하여 연산을 수행 및 기록 관리. 메뉴를 출력하고, 사용자 입력을 받아 선택한 메뉴의 번호를 저장.\nsetUserChoice() 메서드를 호출하여 사용자 입력 값 검증.\n사용자가 유효한 값을 입력할 때까지 반복 요청.\n사용자로부터 첫 번째 숫자, 연산자, 두 번째 숫자를 입력받음.\n각 입력은 Calculator 클래스의 메서드를 사용하여 검증 후 저장.\n입력받은 숫자와 연산자를 이용하여 calculate() 메서드로 연산 수행.\n결과값을 String 형식으로 반환받아 저장.\n연산 결과를 updateRecords()를 통해 Calculator의 기록 리스트에 저장.\nshowLastRecord()를 호출하여 가장 최근 계산 결과를 출력.\nshowRecords()를 호출하여 최근 10개의 계산 기록을 출력.\n기록이 없으면 \u0026ldquo;조회할 기록이 없습니다.\u0026rdquo; 메시지 출력.\n사용자가 삭제할 기록을 선택할 수 있도록 removeRecords() 호출.\n삭제할 기록을 선택하거나 all을 입력하면 전체 삭제 가능.\n사용자가 4를 입력하면 종료 메시지를 출력 후 프로그램 종료.\nsetUserChoice()\n사용자가 올바른 메뉴 번호를 입력할 때까지 반복 요청하는 메서드. 메뉴 목록을 출력하고 사용자에게 입력을 요청. 입력값이 1~4가 아니면 오류 메시지를 출력하고 다시 입력받음. 정규식 \u0026quot;^[1-4]$\u0026quot;을 사용하여 한 자리 숫자(1~4)만 허용. 정상적인 입력이라면 int로 변환 후 반환. 문제 및 해결 캡슐화 구현 방식 요구사항\nApp 클래스의 main 메서드에서 Calculator 클래스의 연산 결과를 저장하고 있는 컬렉션 필드에 직접 접근하지 못하도록 수정 (캡슐화) 간접 접근을 통해 필드에 접근하여 가져올 수 있도록 구현합니다. (Getter 메서드) 간접 접근을 통해 필드에 접근하여 수정할 수 있도록 구현합니다. (Setter 메서드) 위 요구사항을 모두 구현 했다면 App 클래스의 main 메서드에서 위에서 구현한 메서드를 활용 해봅니다. 문제\n필수 기능 가이드에서는 getter/setter 메서드를 이용한 간접 접근을 요구하고 있지만, 내가 구현한 Calculator 클래스에서는 getter/setter 없이 필요한 기능을 직접 제공하는 메서드를 통해서만 기록을 조회/삭제/추가하도록 설계되어 있음.\nrecords 리스트를 외부에서 직접 접근하지 못하도록 private으로 감추고, showRecords(), updateRecords(), removeRecords() 등의 메서드를 통해서만 조작이 가능함.\n가이드에서 명시한 getter/setter를 반드시 구현해야 하는지? 아니면, 현재 방식도 적절한 캡슐화로 인정될 수 있는지?\n분석\n현재 방식은 필드 값을 직접 노출하지 않으면서, 필요한 기능을 내부 메서드를 통해서만 수행하도록 제한함. 결과적으로 강력한 캡슐화가 이루어지며, 데이터를 직접 수정하는 것을 방지할 수 있음.\n하지만 요구사항을 준수하지 않아도 괜찮은가?\n해결 및 개선\n튜터님께 질문 → 평가는 요구사항을 기준으로 이루어지지만, 다른 방식으로 구현했다면 평가자들이 한눈에 알아볼 수 있게 주석 설명을 추가하면 좋을 듯함. 결과\n주석 설명 추가 이 \u0026#39;records\u0026#39; 필드는 private으로 감춰져 있습니다.\r별도의 getRecords(), setRecords() 기능을 제공하지 않고,\rshowRecords(), showLastRecord(), removeRecords(), updateRecords() 메서드를 통해서만\r기록을 조회/삭제/추가하도록 구현하여 캡슐화를 강화했습니다. 컬렉션 데이터 삭제 기능 요구사항\nCalculator 클래스에 저장된 연산 결과들 중 가장 먼저 저장된 데이터를 삭제하는 기능을 가진 메서드를 구현한 후 App 클래스의 main 메서드에 삭제 메서드가 활용될 수 있도록 수정 문제\n필수 기능 가이드에서는 가장 먼저 저장된 데이터를 삭제하는 메서드를 구현한 후 App 클래스의 main 메서드에서 활용되도록 하라고 명시되어 있음. 하지만 나는 사용자가 원하는 값을 선택하여 삭제할 수 있도록 구현함. (또) 요구사항 불일치 이슈\u0026hellip;🙄\n분석\n컬렉션을 활용하여 연산 결과를 저장하고 삭제하는 기능을 구현하는 목적은 1 컬렉션 학습을 위한 요구사항인가?\n2 추가 기능 개발 가능성을 고려한 요구사항인가?\n가장 먼저 저장된 데이터를 삭제해야 하는 이유는\n1 과제 수행에서 반드시 구현해야 하는 공통 기능인가?\n2 아니라면 다른 방식으로 삭제 기능을 개발해도 되는가?\n해결 및 개선\n튜터님께 질문 → 이 요구사항은 컬렉션 학습을 위한 것이므로 반드시 \u0026ldquo;가장 먼저 저장된 데이터\u0026quot;만 삭제할 필요는 없음. 컬렉션을 충분히 활용하여 삭제 기능을 구현했다면, 다른 방식으로 삭제를 개발해도 괜찮음. 결과\n기존 코드 유지. 연산 오류 처리 문제\n이전 버전에서는 연산 오류가 발생했을 때 -9999를 반환했었으나, 계산기 프로그램에서 오류 결과를 숫자로 처리하는 것이 부적절하다고 판단해서 NaN으로 결과값을 변경함. 하지만 NaN은 int 범위가 초과했을 때의 결과 값으로 부적절함. 분석\n현재 연산 수행 결과로 나올 수 있는 오류 결과는 1 0으로 나누기 시도 → NaN으로 처리\n2 int 범위 초과 → NaN 부적절함.\n연산 수행 결과가 int 범위 초과시 double로 변환해서 반환한다면?\n→ 입력할 때는 int 범위 초과하면 안 되고 수행 결과는 int 범위 초과해도 되고? 프로그램의 일관성이 없고 논리적이지 않음.\nint로 받던 입력값을 long으로 확장한다면?\n→ 다음 레벨에서 개선할 예정\n해결 및 개선\ncalculate()의 반환값을 String으로 변경하고 연산 수행 결과가 오류일 시 해당 오류에 맞는 결과를 문자열로 반환하도록 수정. 정상적인 연산은 연산 후 String.valueOf()을 사용하여 String으로 변환 후 반환.\nupdateRecords()에서 문자열과 숫자를 구분하는 로직 추가. 문자열인 경우 오류 메시지를 그대로 출력하고, 숫자일 경우 포맷팅을 진행하도록 함.\n결과\n--------- 계산기 Version 2.0 ---------\r[1] 사칙연산 계산하기\r[2] 최근 계산 기록 조회하기\r[3] 계산 기록 삭제하기\r[4] 종료하기\r실행할 메뉴 번호를 입력하세요: 1\r첫 번째 숫자를 입력하세요: 3\r사용할 연산자를 입력하세요: /\r두 번째 숫자를 입력하세요: 0\r[Error] 나눗셈 연산에서 분모가 0이 될 수 없습니다.\r-------------------------------------\r[ 3 / 0 = 정의되지 않음 ]\r-------------------------------------\r[1] 사칙연산 계산하기\r[2] 최근 계산 기록 조회하기\r[3] 계산 기록 삭제하기\r[4] 종료하기\r실행할 메뉴 번호를 입력하세요: 1\r-------------------------------------\r첫 번째 숫자를 입력하세요: 2147483647\r사용할 연산자를 입력하세요: +\r두 번째 숫자를 입력하세요: 1\r[Error] 연산 가능한 범위의 숫자를 초과했습니다.\r-------------------------------------\r[ 2147483647 + 1 = 연산 범위 초과 ]\r-------------------------------------\r[1] 사칙연산 계산하기\r[2] 최근 계산 기록 조회하기\r[3] 계산 기록 삭제하기\r[4] 종료하기\r실행할 메뉴 번호를 입력하세요: 1\r-------------------------------------\r첫 번째 숫자를 입력하세요: 12345\r사용할 연산자를 입력하세요: +\r두 번째 숫자를 입력하세요: 12345\r-------------------------------------\r[ 12345 + 12345 = 24690 ]\r------------------------------------- 실행 예시 정상 실행 예시 --------- 계산기 Version 2.0 ---------\r[1] 사칙연산 계산하기\r[2] 최근 계산 기록 조회하기\r[3] 계산 기록 삭제하기\r[4] 종료하기\r실행할 메뉴 번호를 입력하세요: 1\r-------------------------------------\r첫 번째 숫자를 입력하세요: 98\r사용할 연산자를 입력하세요: +\r두 번째 숫자를 입력하세요: 456\r-------------------------------------\r[ 98 + 456 = 554 ]\r-------------------------------------\r[1] 사칙연산 계산하기\r[2] 최근 계산 기록 조회하기\r[3] 계산 기록 삭제하기\r[4] 종료하기\r실행할 메뉴 번호를 입력하세요: 1\r-------------------------------------\r첫 번째 숫자를 입력하세요: 456\r사용할 연산자를 입력하세요: /\r두 번째 숫자를 입력하세요: 454\r-------------------------------------\r[ 456 / 454 = 1.00440529 ]\r-------------------------------------\r[1] 사칙연산 계산하기\r[2] 최근 계산 기록 조회하기\r[3] 계산 기록 삭제하기\r[4] 종료하기\r실행할 메뉴 번호를 입력하세요: 2\r-------------------------------------\r[1] [ 98 + 456 = 554 ]\r[2] [ 456 / 454 = 1.00440529 ]\r-------------------------------------\r[1] 사칙연산 계산하기\r[2] 최근 계산 기록 조회하기\r[3] 계산 기록 삭제하기\r[4] 종료하기\r실행할 메뉴 번호를 입력하세요: 3\r-------------------------------------\r[1] [ 98 + 456 = 554 ]\r[2] [ 456 / 454 = 1.00440529 ]\r-------------------------------------\r삭제할 기록의 번호를 입력하세요.\r[취소: enter][전체: all 입력] 1\r계산 기록이 삭제되었습니다.\r-------------------------------------\r[1] 사칙연산 계산하기\r[2] 최근 계산 기록 조회하기\r[3] 계산 기록 삭제하기\r[4] 종료하기\r실행할 메뉴 번호를 입력하세요: 4\r------------- 계산기 종료 ------------- 오류 실행 예시 -------------------------------------\r첫 번째 숫자를 입력하세요: 23\r사용할 연산자를 입력하세요: /\r두 번째 숫자를 입력하세요: 0\r[Error] 나눗셈 연산에서 분모가 0이 될 수 없습니다.\r-------------------------------------\r사용할 연산자를 입력하세요: ,\r[Error] 잘못된 입력이거나 지원하지 않는 연산자입니다.\r-------------------------------------\r두 번째 숫자를 입력하세요: [Error] 값이 입력되지 않았습니다.\r-------------------------------------\r두 번째 숫자를 입력하세요: 2147483648\r[Error] 연산 가능한 범위의 숫자를 초과했습니다.\r-------------------------------------\r두 번째 숫자를 입력하세요: -1\r[Error] 0 이상의 정수만 입력할 수 있습니다.\r-------------------------------------\r[1] [ 23 / 0 = 정의되지 않음 ]\r[2] [ 1 + 23 = 24 ]\r-------------------------------------\r삭제할 기록의 번호를 입력하세요.\r[취소: enter][전체: all 입력] a\r[Error] 잘못된 입력입니다. 올바른 번호를 입력하세요.\r------------------------------------- ","permalink":"http://localhost:1313/project/calculator-02/","summary":"\u003ch2 id=\"요구사항\"\u003e요구사항\u003c/h2\u003e\n\u003cp\u003e클래스를 적용해 기본적인 연산을 수행할 수 있는 계산기 만들기\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e사칙연산을 수행 후, 결과값 반환 메서드 구현 \u0026amp; 연산 결과를 저장하는 컬렉션 타입 필드를 가진 Calculator 클래스를 생성\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e사칙연산을 수행한 후, 결과값을 반환하는 메서드 구현\u003c/li\u003e\n\u003cli\u003e연산 결과를 저장하는 컬렉션 타입 필드를 가진 Calculator 클래스를 생성\u003c/li\u003e\n\u003cli\u003e\n\u003col\u003e\n\u003cli\u003e양의 정수 2개(0 포함)와 연산 기호를 매개변수로 받아 사칙연산(➕,➖,✖️,➗) 기능을 수행한 후 2) 결과 값을 반환하는 메서드와 연산 결과를 저장하는 컬렉션 타입 필드를 가진 Calculator 클래스를 생성합니다.\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eLv 1에서 구현한 App 클래스의 main 메서드에 Calculator 클래스가 활용될 수 있도록 수정\u003c/strong\u003e\u003c/p\u003e","title":"계산기 Lv 2"},{"content":" ✅ [강의] Java 문법 세션 2 - 객체 활용\n✅ [강의] Java 문법 Chapter 3 (5~7)\n✅ [과제] Java 계산기 만들기 level 2\n람다(Lambda) 함수형 인터페이스 람다식을 사용하기 위한 인터페이스 단 하나의 추상 메서드만 포함해야 함. @FunctionalInterface 애노테이션을 사용. @FunctionalInterface // 함수형 인터페이스 선언 public interface Calculator { int sum(int a, int b); // 오직 하나의 추상 메서드만 선언해야 함 } 익명 클래스 별도의 클래스 파일을 만들지 않고 코드 내에서 일회성으로 정의해 사용하는 클래스. 주로 인터페이스를 구현할 때나 클래스를 상속할 때 간단한 기능을 위해 사용됨. public static void main(String[] args) { // 인터페이스를 활용한 익명 클래스 만들기 Calculator calculator1 = new Calculator() { @Override public int sum(int a, int b) { return a + b; } }; int ret1 = calculator1.sum(2, 2); System.out.println(\u0026#34;ret1 = \u0026#34; + ret1); } 람다식 메서드를 하나의 식(Expression)으로 표현하는 방식 익명 함수(Anonymous Function)와 유사 함수형 인터페이스와 함께 사용됨 불필요한 코드 생략 가능 → 간결한 코드 작성 가능 public static void main(String[] args) { // 인터페이스를 활용한 람다식 만들기 Calculator calculator = (a, b) -\u0026gt; a + b; int ret = calculator.sum(3, 3); System.out.println(\u0026#34;ret = \u0026#34; + ret); } 람다식 활용 public static void main(String[] args) { // 람다식을 매개변수로 전달하는 방법 // 1. 익명 클래스를 변수에 담아 매개변수로 전달 Calculator cal1 = new Calculator() { @Override public int sum(int a, int b) { return a + b; } }; int ret1 = calculator(3, 3, cal1); System.out.println(\u0026#34;ret1 = \u0026#34; + ret1); // 2. 람다식을 변수에 담아 매개변수로 전달 Calculator cal2 = (a, b) -\u0026gt; a + b; int ret2 = calculator(4, 4, cal2); System.out.println(\u0026#34;ret2 = \u0026#34; + ret2); // 3. 람다식을 직접 매개변수로 전달 int ret3 = calculator(5, 5, (a, b) -\u0026gt; a + b); System.out.println(\u0026#34;ret3 = \u0026#34; + ret3); } public static int calculator(int a, int b, Calculator calculator) { return calculator.sum(a, b); } 스트림(Stream) 데이터의 흐름을 표현하는 기능으로, 배열이나 컬렉션 등의 데이터를 함수형 스타일로 처리할 수 있도록 지원하는 API\n내부 반복을 사용하여 반복문 없이 데이터를 다룰 수 있음 데이터 원본을 변경하지 않으며, 새로운 스트림을 반환하여 처리 중간 연산과 최종 연산 구분 중간 연산(filter, map 등) - 여러 개 연결 가능 최종 연산(forEach, collect 등) - 호출되기 전까지 실행되지 않음 List\u0026lt;Integer\u0026gt; arrayList = new ArrayList\u0026lt;\u0026gt;(List.of(1, 2, 3, 4, 5)); // stream 선언형 스타일 - 각 요소 * 10 List\u0026lt;Integer\u0026gt; ret2 = arrayList.stream() .map(num -\u0026gt; num * 10) .collect(Collectors.toList()); System.out.println(\u0026#34;ret2 = \u0026#34; + ret2); } arrayList.stream() 데이터 준비 - 데이터를 스트림으로 변환\n.map(num -\u0026gt; num * 10) 중간 연산 - 각 요소를 주어진 함수에 적용해서 변환\n.collect(Collectors.toList()) 최종 연산 - 결과를 원하는 형태로 수집\n스트림 활용 List\u0026lt;Integer\u0026gt; arrayList = new ArrayList\u0026lt;\u0026gt;(List.of(1, 2, 3, 4, 5)); // 익명 클래스를 직접 만들어서 변수에 담아 매개변수로 전달 Function\u0026lt;Integer, Integer\u0026gt; function = new Function\u0026lt;\u0026gt;() { @Override public Integer apply(Integer integer) { return integer * 10; } }; List\u0026lt;Integer\u0026gt; ret1 = arrayList.stream() .map(function) .collect(Collectors.toList()); // 람다식을 만들어서 변수에 담아 매개변수로 전달 Function\u0026lt;Integer, Integer\u0026gt; functionLambda = (integer -\u0026gt; integer * 20); List\u0026lt;Integer\u0026gt; ret2 = arrayList.stream() .map(functionLambda) .collect(Collectors.toList()); // 람다식을 직접 매개변수로 전달 List\u0026lt;Integer\u0026gt; ret3 = arrayList.stream() .map(num -\u0026gt; num * 30) .collect(Collectors.toList()); // 중간 연산을 함께 사용하는 방법 - filter() + map() // 요구사항 - 리스트에서 짝수를 찾아서 * 10 List\u0026lt;Integer\u0026gt; ret = arrayList.stream() // 데이터 흐름 준비 {1, 2, 3, 4, 5} .filter(num -\u0026gt; num % 2 == 0) // 중간 연산 등록 (짝수 찾기) .map(num -\u0026gt; num * 10) // 중간 연산 등록 (* 10) .collect(Collectors.toList()); System.out.println(\u0026#34;ret = \u0026#34; + ret); 쓰레드(Thread) 프로세스(Process): 실행 중인 프로그램 (독립적인 메모리 공간 가짐) 쓰레드(Thread): 프로세스 내에서 실행되는 작업의 흐름(실행 단위) 하나의 프로세스는 여러 개의 쓰레드를 가질 수 있음 각각의 쓰레드는 독립적으로 실행되며, 서로 자원을 공유할 수 있음 싱글 쓰레드(Single Thread) 프로그램이 하나의 쓰레드만 사용하여 작업을 순차적으로 실행. 작업이 순차적으로 실행됨 → 하나의 작업이 끝나야 다음 작업이 시작됨. public static void main(String[] args) { System.out.println(\u0026#34;*** main 쓰레드 시작 ***\u0026#34;); String threadName = Thread.currentThread().getName(); // 하나의 작업: 슛자를 0 ~ 9 까지 출력 for (int i = 0; i \u0026lt; 10; i++) { System.out.println(\u0026#34;현재 쓰레드 이름: \u0026#34; + threadName + \u0026#34;-\u0026#34; + i); try { Thread.sleep(500); // 0.5초 딜레이 } catch (InterruptedException e) { e.printStackTrace(); } } System.out.println(\u0026#34;*** main 작업 끝 ***\u0026#34;); } *** main 쓰레드 시작 ***\r현재 쓰레드 이름: main-0\r현재 쓰레드 이름: main-1\r현재 쓰레드 이름: main-2\r현재 쓰레드 이름: main-3\r현재 쓰레드 이름: main-4\r현재 쓰레드 이름: main-5\r현재 쓰레드 이름: main-6\r현재 쓰레드 이름: main-7\r현재 쓰레드 이름: main-8\r현재 쓰레드 이름: main-9\r*** main 작업 끝 *** 멀티 쓰레드(Multi Thread) 여러 개의 쓰레드를 실행하여 동시에 작업을 수행. start()를 호출하면 쓰레드가 비동기적으로 실행됨. run()을 직접 호출하면 싱글 쓰레드처럼 동작하므로 주의. 쓰레드 생성 방법 Thread 클래스를 상속하는 방법 Runnable 인터페이스를 구현하는 방법 (권장) public class MyThread extends Thread { // 확장 불가 @Override public void run() { String threadName = Thread.currentThread().getName(); System.out.println(\u0026#34;*** \u0026#34; + threadName + \u0026#34; 시작 ***\u0026#34;); for (int i = 0; i \u0026lt; 10; i++) { System.out.println(\u0026#34;[for] \u0026#34; + threadName + \u0026#34;-\u0026#34; + i); try { Thread.sleep(500); } catch (InterruptedException e) { e.printStackTrace(); } } System.out.println(\u0026#34;*** \u0026#34; + threadName + \u0026#34; 종료 ***\u0026#34;); } } public static void main(String[] args) { System.out.println(\u0026#34;*** main 쓰레드 시작 ***\u0026#34;); MyThread thread0 = new MyThread(); MyThread thread1 = new MyThread(); // 1. thread0 시작 System.out.println(\u0026#34;*** thread0 시작 ***\u0026#34;); thread0.start(); // 2. thread1 시작 System.out.println(\u0026#34;*** thread1 시작 ***\u0026#34;); thread1.start(); System.out.println(\u0026#34;*** main 쓰레드 종료 ***\u0026#34;); } *** main 쓰레드 시작 ***\r*** thread0 시작 ***\r*** thread1 시작 ***\r*** main 쓰레드 종료 ***\r*** Thread-1 시작 ***\r*** Thread-0 시작 ***\r[for] Thread-1-0\r[for] Thread-0-0\r[for] Thread-0-1\r[for] Thread-1-1\r[for] Thread-0-2\r[for] Thread-1-2\r[for] Thread-0-3\r[for] Thread-1-3\r[for] Thread-0-4\r[for] Thread-1-4\r[for] Thread-0-5\r[for] Thread-1-5\r[for] Thread-0-6\r[for] Thread-1-6\r[for] Thread-0-7\r[for] Thread-1-7\r[for] Thread-0-8\r[for] Thread-1-8\r[for] Thread-0-9\r[for] Thread-1-9\r*** Thread-0 종료 ***\r*** Thread-1 종료 *** join() 현재 실행 중인 쓰레드가 다른 쓰레드의 종료를 기다리도록 하는 메서드. 특정 쓰레드가 끝나기 전까지 다음 작업을 실행하지 않게 할 때 사용. System.out.println(\u0026#34;*** main 쓰레드 시작 ***\u0026#34;); MyThread thread0 = new MyThread(); MyThread thread1 = new MyThread(); long startTime = System.currentTimeMillis(); // 1. thread0 시작 System.out.println(\u0026#34;*** thread0 시작 ***\u0026#34;); thread0.start(); // 2. thread1 시작 System.out.println(\u0026#34;*** thread1 시작 ***\u0026#34;); thread1.start(); // main thread 대기시키기 try { thread0.join(); thread1.join(); } catch (InterruptedException e) { e.printStackTrace(); } long endTime = System.currentTimeMillis(); long totalTime = endTime - startTime; System.out.println(\u0026#34;작업 요소 시간: \u0026#34; + totalTime); System.out.println(\u0026#34;*** main 쓰레드 종료 ***\u0026#34;); Runnable 인터페이스 활용 실행 로직을 별도의 구현체로 분리할 수 있음. Thread - 쓰레드를 제어하는 역할 Runnable 구현체 - 실행 로직을 관리하는 역할 기존 클래스의 기능을 유지하면서 상속을 통해 확장할 수 있음. public class MyRunnable extends MyNewClass implements Runnable{ // 확장 가능 @Override public void run() { String threadName = Thread.currentThread().getName(); System.out.println(\u0026#34;*** \u0026#34; + threadName + \u0026#34; 시작 ***\u0026#34;); for (int i = 0; i \u0026lt; 10; i++) { System.out.println(\u0026#34;[for] \u0026#34; + threadName + \u0026#34;-\u0026#34; + i); try { Thread.sleep(500); } catch (InterruptedException e) { e.printStackTrace(); } } System.out.println(\u0026#34;*** \u0026#34; + threadName + \u0026#34; 종료 ***\u0026#34;); } } public class MyNewClass { public void printMessage() { System.out.println(\u0026#34;MyNewClass의 기능을 실행합니다.\u0026#34;); } } MyRunnable myTask = new MyRunnable(); // 기능 확장 myTask.printMessage(); Thread thread0 = new Thread(myTask); Thread thread1 = new Thread(myTask); thread0.start(); thread1.start(); ","permalink":"http://localhost:1313/record/2025-02-27/","summary":"\u003cblockquote\u003e\n\u003cp\u003e✅ [강의] Java 문법 세션 2 - 객체 활용\u003cbr\u003e\n✅ [강의] Java 문법 Chapter 3 (5~7)\u003cbr\u003e\n✅ [과제] Java 계산기 만들기 level 2\u003c/p\u003e\u003c/blockquote\u003e\n\u003chr\u003e\n\u003ch2 id=\"람다lambda\"\u003e람다(Lambda)\u003c/h2\u003e\n\u003cbr\u003e\r\n\u003ch3 id=\"함수형-인터페이스\"\u003e함수형 인터페이스\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e람다식을 사용하기 위한 인터페이스\u003c/li\u003e\n\u003cli\u003e단 하나의 추상 메서드만 포함해야 함.\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e@FunctionalInterface\u003c/code\u003e 애노테이션을 사용.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nd\"\u003e@FunctionalInterface\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"c1\"\u003e// 함수형 인터페이스 선언\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kd\"\u003einterface\u003c/span\u003e \u003cspan class=\"nc\"\u003eCalculator\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"nf\"\u003esum\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"c1\"\u003e// 오직 하나의 추상 메서드만 선언해야 함\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cbr\u003e\r\n\u003ch3 id=\"익명-클래스\"\u003e익명 클래스\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e별도의 클래스 파일을 만들지 않고 코드 내에서 일회성으로 정의해 사용하는 클래스.\u003c/li\u003e\n\u003cli\u003e주로 인터페이스를 구현할 때나 클래스를 상속할 때 간단한 기능을 위해 사용됨.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kd\"\u003estatic\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e[]\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eargs\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"c1\"\u003e// 인터페이스를 활용한 익명 클래스 만들기\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"n\"\u003eCalculator\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003ecalculator1\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003enew\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eCalculator\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nd\"\u003e@Override\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"nf\"\u003esum\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"k\"\u003ereturn\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003ea\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"p\"\u003e};\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eret1\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003ecalculator1\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003esum\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"n\"\u003eSystem\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eout\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eprintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;ret1 = \u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eret1\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cbr\u003e\r\n\u003ch3 id=\"람다식\"\u003e람다식\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e메서드를 하나의 식(Expression)으로 표현하는 방식\u003c/li\u003e\n\u003cli\u003e익명 함수(Anonymous Function)와 유사\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e함수형 인터페이스와 함께 사용\u003c/strong\u003e됨\u003c/li\u003e\n\u003cli\u003e불필요한 코드 생략 가능 → 간결한 코드 작성 가능\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kd\"\u003estatic\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e[]\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eargs\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"c1\"\u003e// 인터페이스를 활용한 람다식 만들기\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"n\"\u003eCalculator\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003ecalculator\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003ea\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eret\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003ecalculator\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003esum\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"n\"\u003eSystem\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eout\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eprintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;ret = \u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eret\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cbr\u003e\r\n\u003ch3 id=\"람다식-활용\"\u003e람다식 활용\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kd\"\u003estatic\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e[]\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eargs\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"c1\"\u003e// 람다식을 매개변수로 전달하는 방법\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"c1\"\u003e// 1. 익명 클래스를 변수에 담아 매개변수로 전달\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"n\"\u003eCalculator\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003ecal1\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003enew\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eCalculator\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nd\"\u003e@Override\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"nf\"\u003esum\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"k\"\u003ereturn\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003ea\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"p\"\u003e};\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eret1\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003ecalculator\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003ecal1\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"n\"\u003eSystem\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eout\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eprintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;ret1 = \u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eret1\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"c1\"\u003e// 2. 람다식을 변수에 담아 매개변수로 전달\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"n\"\u003eCalculator\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003ecal2\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003ea\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eret2\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003ecalculator\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003ecal2\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"n\"\u003eSystem\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eout\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eprintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;ret2 = \u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eret2\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"c1\"\u003e// 3. 람다식을 직접 매개변수로 전달\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eret3\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003ecalculator\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003ea\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"n\"\u003eSystem\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eout\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eprintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;ret3 = \u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eret3\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kd\"\u003estatic\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"nf\"\u003ecalculator\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eCalculator\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003ecalculator\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"k\"\u003ereturn\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003ecalculator\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003esum\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cbr\u003e\r\n\u003ch2 id=\"스트림stream\"\u003e스트림(Stream)\u003c/h2\u003e\n\u003cp\u003e데이터의 흐름을 표현하는 기능으로, 배열이나 컬렉션 등의 데이터를 함수형 스타일로 처리할 수 있도록 지원하는 API\u003c/p\u003e","title":"Java 심화 2"},{"content":"요구사항 클래스 없이 기본적인 연산을 수행할 수 있는 계산기 만들기\n양의 정수(0 포함)를 입력받기\nScanner를 사용하여 양의 정수 2개(0 포함)를 전달 받을 수 있습니다. 양의 정수는 각각 하나씩 전달 받습니다. 양의 정수는 적합한 타입으로 선언한 변수에 저장합니다. 사칙연산 기호(➕,➖,✖️,➗)를 입력받기\nScanner를 사용하여 사칙연산 기호를 전달 받을 수 있습니다. 사칙연산 기호를 적합한 타입으로 선언한 변수에 저장합니다. (charAt(0)) 위에서 입력받은 양의 정수 2개와 사칙연산 기호를 사용하여 연산을 진행한 후 결과값을 출력하기\n키워드 : if switch 사칙연산 기호에 맞는 연산자를 사용하여 연산을 진행합니다. 입력받은 연산 기호를 구분하기 위해 제어문을 사용합니다. (예를 들면 if, switch) 연산 오류가 발생할 경우 해당 오류에 대한 내용을 정제하여 출력합니다. ex) “나눗셈 연산에서 분모(두번째 정수)에 0이 입력될 수 없습니다.“ 반복문을 사용하되, 반복의 종료를 알려주는 “exit” 문자열을 입력하기 전까지 무한으로 계산을 진행할 수 있도록 소스 코드를 수정하기\n키워드 : 무한으로 반복, 수정하기 (처음부터 무한 반복하는 것이 아니라, 위 스텝별로 진행하며 수정) 반복문을 사용합니다. (예를 들어, for, while…) 기능 구현 main() 프로그램 실행 \u0026amp; 반복문으로 지속적인 입력을 받는다. 0 이상의 정수 2개와 연산자를 입력받고, 연산을 수행한다. 연산 결과를 일관된 형식으로 출력한다. 종료 여부를 확인하고 exit 입력 시 프로그램을 종료한다. getUserNumber() 사용자로부터 0 이상의 정수를 입력받는다. 입력 값 검증을 진행한다. (빈 값, 음수, int 범위 초과) 입력이 유효하지 않으면 오류 메시지를 출력하고 재입력을 요청한다. getUserOperator() 사용자로부터 연산자(+, -, *, /)를 입력받고 검증한다. 입력이 유효하지 않으면 오류 메시지를 출력하고 재입력을 요청한다. calculate() 입력된 연산자 값에 따라 switch 문을 사용하여 연산을 수행한다. int 오버플로우를 방지한다. Math.~~~ 나눗셈에서 두 번째 숫자가 0이면 handleError()를 호출한다. 연산 결과를 반환한다. 예외 발생 시 -9999를 반환한다. isEnd() 프로그램 종료 여부를 확인한다. exit 입력 시 true를 반환한다. (종료) enter 시 false를 반환한다. (반복) 그 외의 값일 경우 정상적인 값이 들어올 때까지 반복한다. handleError() 오류 메시지를 한 곳에서 관리한다. 오류 발생 시 적절한 오류 메시지를 반환한다. printResultMessage() DecimalFormat을 활용하여 소수점이 존재하면 최대 8자리까지 반올림하여 표현하고, 소수점 이하가 0이면 정수 형태로 출력한다. 연산 결과를 일관된 형식으로 출력한다. 결과 값이 -9999이면 결과 값에 Error를 출력한다. 정상적인 연산이면 결과 값을 출력한다. 문제 및 해결 hasNextInt() 빈 입력 처리 문제\n사용자로부터 숫자를 입력받을 때 엔터만 입력 시 다음 단계로 진행되지 않고 입력을 계속 기다리는 현상 발견. 분석\n초기에는 hasNextInt()를 사용하여 입력 값이 숫자인지 확인하고, 숫자일 때만 nextInt()로 변환하여 값을 변수에 담고 있었음. 이때, 사용자가 엔터만 입력하면 hasNextInt()가 버퍼에서 정수를 찾을 수 없으므로 false를 반환하게 되어, 사용자가 숫자를 입력할 때까지 무한 대기 상태에 빠지게 되는 문제 확인. 해결 및 개선\n빈 값 처리와 입력 검증을 위해 입력 값을 nextLine()으로 받게 수정. 입력 값 확인을 먼저 진행하고 변수에 담았던 이전과 달리 미리 변수에 담은 후 값 검증을 진행. 잘못된 입력에 대한 명확한 오류 메시지를 출력하도록 HandleError()에서 오류 메시지 관리. 결과\n사용자로부터 값을 입력받을 때 엔터만 입력 또는 0 이상의 정수가 아닌 값 입력 시 에러 메시지 출력과 함께 재입력 요청받음. int 범위 초과 입력 문제\n사용자로부터 입력받은 값이나 연산 수행 결과가 너무 큰 숫자일 때 오류가 발생하고 프로그램이 종료되는 현상 발견. 분석\nint 값을 초과하는 범위의 숫자일 때 발생하는 문제. 해결 및 개선\n입력 값 검증 과정에서 int 범위 내의 숫자인지 검증하는 과정 추가. 연산 수행 과정에서 Math 클래스를 활용해 오버플로우를 방지하기 위한 예외 처리 추가. 예외 발생 시 에러 메시지 출력 후 재입력 요청하도록 변경. 결과\n사용자의 입력 값이 int 범위를 초과하면 범위 내의 숫자를 입력할 때까지 오류 메시지와 함께 재입력 요청함. 연산 수행 결과가 int 범위를 초과하면 오류 메시지와 함께 연산 수행 오류를 출력함. 실행 예시 정상 실행 예시 오류 실행 예시 ","permalink":"http://localhost:1313/project/calculator-01/","summary":"\u003ch2 id=\"요구사항\"\u003e요구사항\u003c/h2\u003e\n\u003cp\u003e클래스 없이 기본적인 연산을 수행할 수 있는 계산기 만들기\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003e양의 정수(0 포함)를 입력받기\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eScanner를 사용하여 양의 정수 2개(0 포함)를 전달 받을 수 있습니다.\u003c/li\u003e\n\u003cli\u003e양의 정수는 각각 하나씩 전달 받습니다.\u003c/li\u003e\n\u003cli\u003e양의 정수는 적합한 타입으로 선언한 변수에 저장합니다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003e사칙연산 기호(➕,➖,✖️,➗)를 입력받기\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eScanner를 사용하여 사칙연산 기호를 전달 받을 수 있습니다.\u003c/li\u003e\n\u003cli\u003e사칙연산 기호를 적합한 타입으로 선언한 변수에 저장합니다. (\u003ccode\u003echarAt(0)\u003c/code\u003e)\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003e위에서 입력받은 양의 정수 2개와 사칙연산 기호를 사용하여 연산을 진행한 후 결과값을 출력하기\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e키워드 : \u003ccode\u003eif\u003c/code\u003e \u003ccode\u003eswitch\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e사칙연산 기호에 맞는 연산자를 사용하여 연산을 진행합니다.\u003c/li\u003e\n\u003cli\u003e입력받은 연산 기호를 구분하기 위해 제어문을 사용합니다. (예를 들면 if, switch)\u003c/li\u003e\n\u003cli\u003e연산 오류가 발생할 경우 해당 오류에 대한 내용을 정제하여 출력합니다.\n\u003cul\u003e\n\u003cli\u003eex) “나눗셈 연산에서 분모(두번째 정수)에 0이 입력될 수 없습니다.“\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003e반복문을 사용하되, 반복의 종료를 알려주는 “exit” 문자열을 입력하기 전까지 무한으로 계산을 진행할 수 있도록 소스 코드를 수정하기\u003c/strong\u003e\u003c/p\u003e","title":"계산기 Lv 1"},{"content":" ✅ [강의] Java 문법 Chapter 3 (1~4)\n✅ [과제] Java 계산기 만들기 level 1\n예외와 예외 처리 예외 → 프로그램 실행 중 발생할 수 있는 예기치 못한 오류나 상황. 예외가 처리되지 않으면 프로그램 흐름이 중단됨.\n예외 구조와 종류\nUncheckedException → RuntimeException과 그 하위 클래스. 예외 처리 강제되지 않음. 예: NullPointerException, ArrayIndexOutOfBoundsException CheckedException → RuntimeException을 제외한 예외. 예외 처리 강제됨. 예: IOException, SQLException. 예외 전파\nUncheckedException → 예외 전파가 자동으로 이루어짐. → main() 메서드나 스레드에서 처리하지 않으면 프로그램이 종료됨. CheckedException → 예외가 발생했을 때 반드시 예외를 처리하거나 전파해야 함. → try-catch문 또는 메서드 선언에 throws 키워드 사용. Optional Optional\u0026lt;T\u0026gt; → Null을 안전하게 다루기 위한 클래스\n값이 존재할 수도 있고, 없을 수도 있는 객체를 감싸는 컨테이너 역할 NullPointerException을 방지하기 위해 사용됨. null 체크를 명시적으로 하지 않고도 값의 존재 여부를 쉽게 처리할 수 있음. Optional.ofNullable(T value) → null일 수도 있는 값을 감싼다.\nOptional\u0026lt;String\u0026gt; opt = Optional.ofNullable(null); // 빈 Optional 생성 isPresent() → 값이 존재하면 true, 없으면 false 반환.\nOptional\u0026lt;T\u0026gt;.get() → Optional 객체에 값이 존재할 때 그 값을 반환. 값이 없으면 NoSuchElementException 예외를 발생시킴.\nOptional\u0026lt;String\u0026gt; optional = Optional.of(\u0026#34;Hello\u0026#34;); if (optional.isPresent()) { String value = optional.get(); System.out.println(value); } 컬렉션(Collection) 컬렉션(Collection)\n→ 데이터(객체)를 효율적으로 저장하고 관리하기 위한 자료구조.\n→ 배열과 달리 크기가 동적으로 조정되며, 다양한 데이터 처리 기능을 제공.\nArrayList\nList 인터페이스의 구현체, 배열 기반의 동적 리스트 인덱스를 기반으로 한 빠른 조회(검색) 성능을 가짐. 데이터 추가/삭제는 상대적으로 느림 (중간 삽입/삭제 시 요소를 이동해야 함). 중복된 요소를 허용. ArrayList\u0026lt;String\u0026gt; names = new ArrayList\u0026lt;\u0026gt;(); // 데이터 추가 names.add(\u0026#34;kim\u0026#34;); names.add(\u0026#34;lee\u0026#34;); names.add(\u0026#34;park\u0026#34;); names.add(\u0026#34;hong\u0026#34;); names.add(\u0026#34;choi\u0026#34;); // 순서 보장 System.out.println(\u0026#34;names = \u0026#34; + names); // 중복 허용 names.add(\u0026#34;park\u0026#34;); System.out.println(\u0026#34;names = \u0026#34; + names); // 단건 조회 String name1 = names.get(0); System.out.println(\u0026#34;name1 = \u0026#34; + name1); // 데이터 삭제 names.remove(\u0026#34;choi\u0026#34;); System.out.println(\u0026#34;names = \u0026#34; + names); HashSet\nSet 인터페이스의 구현체, 중복을 허용하지 않는 집합 내부적으로 HashMap을 사용하여 요소를 저장. 데이터 저장 순서를 보장하지 않음. HashSet\u0026lt;String\u0026gt; uniqueNames = new HashSet\u0026lt;\u0026gt;(); // 데이터 추가 - 순서 보장하지 않음, 중복 불가 uniqueNames.add(\u0026#34;kim\u0026#34;); uniqueNames.add(\u0026#34;lee\u0026#34;); uniqueNames.add(\u0026#34;park\u0026#34;); uniqueNames.add(\u0026#34;hong\u0026#34;); System.out.println(\u0026#34;uniqueNames = \u0026#34; + uniqueNames); // get() 활용 불가 // 중복 데이터 불가 uniqueNames.add(\u0026#34;lee\u0026#34;); System.out.println(\u0026#34;uniqueNames = \u0026#34; + uniqueNames); HashMap\nMap 인터페이스의 구현체, Key-Value(키-값) 쌍으로 데이터를 저장. Key는 중복을 허용하지 않으며, Value는 중복 가능. 내부적으로 해시 테이블을 사용하여 빠른 검색, 추가, 삭제 가능. 데이터 저장 순서를 보장하지 않음. // \u0026lt;키, 값\u0026gt; 저장 HashMap\u0026lt;String, Integer\u0026gt; memberMap = new HashMap\u0026lt;\u0026gt;(); // 데이터 추가 - 순서 보장되지 않음 memberMap.put(\u0026#34;kim\u0026#34;, 17); memberMap.put(\u0026#34;lee\u0026#34;, 18); memberMap.put(\u0026#34;park\u0026#34;, 19); memberMap.put(\u0026#34;hong\u0026#34;, 20); System.out.println(\u0026#34;memberMap = \u0026#34; + memberMap); // 키 중복 불가 - 값 덮어쓰기 발생 memberMap.put(\u0026#34;kim\u0026#34;, 18); System.out.println(\u0026#34;memberMap = \u0026#34; + memberMap); // 단건 조회 Integer memberLee = memberMap.get(\u0026#34;lee\u0026#34;); System.out.println(\u0026#34;memberLee = \u0026#34; + memberLee); // 데이터 삭제 memberMap.remove(\u0026#34;kim\u0026#34;); System.out.println(\u0026#34;memberMap = \u0026#34; + memberMap); // 키 확인 Set\u0026lt;String\u0026gt; keySet = memberMap.keySet(); System.out.println(\u0026#34;keySet = \u0026#34; + keySet); // 값 확인 Collection\u0026lt;Integer\u0026gt; values = memberMap.values(); System.out.println(\u0026#34;values = \u0026#34; + values); 제네릭(Generic) 클래스나 메서드에서 사용할 데이터 타입을 지정하지 않고, 나중에 인스턴스를 생성할 때 타입을 정할 수 있도록 하는 기능\n제네릭이 없는 경우\n재사용 불가 → 특정 타입을 고정적으로 사용해야 하므로, 다양한 타입을 지원하는 유연한 클래스를 만들 수 없음. public class Box { private Integer item; public Box(Integer item) { this.item = item; } public Integer getItem() { return item; } } public static void main(String[] args) { // 1. 재사용 불가 Box box1 = new Box(100); // box1 = new Box(\u0026#34;abc\u0026#34;); // box1 = new Box(1.1); } 낮은 타입 안정성 → Object를 사용하면 다양한 타입을 저장할 수 있지만, 형 변환이 필요하고 ClassCastException 발생 위험이 있음. public class ObjectBox { private Object item; public ObjectBox(Object item) { this.item = item; } public Object getItem() { return item; } } public static void main(String[] args) { // 2. 낮은 타입 안정성 ObjectBox strBox = new ObjectBox(\u0026#34;ABC\u0026#34;); ObjectBox intBox = new ObjectBox(123); // item 활용을 위해 다운캐스팅 필요 String strItem = (String) strBox.getItem(); System.out.println(\u0026#34;strItem = \u0026#34; + strItem); // 잘못된 다운캐스팅 // String intItem = (String) intBox.getItem(); // System.out.println(\u0026#34;intItem = \u0026#34; + intItem); } 제네릭 클래스\n재사용성 → 어떤 타입이든 유연하게 사용할 수 있음. 타입 안정성 확보 → 컴파일 타임에 타입 체크가 가능하여 런타임 오류를 방지할 수 있으며, 형 변환이 필요 없음. 타입 소거 → 파일 시점에 제네릭 타입 정보가 제거됨. public class GenericBox\u0026lt;T\u0026gt; { private T item; public GenericBox(T item) { this.item = item; } public T getItem() { return this.item; } } public static void main(String[] args) { // 1. 재사용성: 타입 소거 - T → Object GenericBox\u0026lt;String\u0026gt; strBox = new GenericBox\u0026lt;\u0026gt;(\u0026#34;ABC\u0026#34;); GenericBox\u0026lt;Integer\u0026gt; intBox = new GenericBox\u0026lt;\u0026gt;(123); GenericBox\u0026lt;Double\u0026gt; doubleBox = new GenericBox\u0026lt;\u0026gt;(1.1); // 2. 타입 안정성: 타입 소거 - 자동 다운캐스팅 String strItem = strBox.getItem(); Integer intItem = intBox.getItem(); Double doubleItem = doubleBox.getItem(); System.out.println(\u0026#34;strItem = \u0026#34; + strItem); System.out.println(\u0026#34;intItem = \u0026#34; + intItem); System.out.println(\u0026#34;doubleItem = \u0026#34; + doubleItem); } 제네릭 메서드\n→ 메서드 내부에서 사용할 타입을 선언하고, 호출 시점에 타입이 결정되는 메서드. 클래스의 제네릭 타입과 무관하게 동작할 수 있음.\npublic class GenericBox\u0026lt;T\u0026gt; { private T item; public GenericBox(T item) { this.item = item; } public T getItem() { return this.item; } // 일반 메서드 public void printItem(T item) { System.out.print(\u0026#34;printItem(T) = \u0026#34;); System.out.println(item); } // 제네릭 메서드 public \u0026lt;S\u0026gt; void printBoxItem(S item) { System.out.print(\u0026#34;printBoxItem(S) = \u0026#34;); System.out.println(item); } } public static void main(String[] args) { // 1. 재사용성: 타입 소거 - T → Object GenericBox\u0026lt;String\u0026gt; strBox = new GenericBox\u0026lt;\u0026gt;(\u0026#34;ABC\u0026#34;); GenericBox\u0026lt;Integer\u0026gt; intBox = new GenericBox\u0026lt;\u0026gt;(123); GenericBox\u0026lt;Double\u0026gt; doubleBox = new GenericBox\u0026lt;\u0026gt;(1.1); // 2. 타입 안정성: 타입 소거 - 자동 다운캐스팅 String strItem = strBox.getItem(); Integer intItem = intBox.getItem(); Double doubleItem = doubleBox.getItem(); System.out.println(\u0026#34;strItem = \u0026#34; + strItem); System.out.println(\u0026#34;intItem = \u0026#34; + intItem); System.out.println(\u0026#34;doubleItem = \u0026#34; + doubleItem); // 일반 메서드 - 클래스의 타입 매개변수 기준 strBox.printItem(\u0026#34;DEF\u0026#34;); intBox.printItem(456); doubleBox.printItem(1.3); // 제네릭 메서드 - 독립적인 타입 매개변수 strBox.printBoxItem(\u0026#34;ABCDEF\u0026#34;); strBox.printBoxItem(123456); strBox.printBoxItem(0.12345); } 클래스의 \u0026lt;T\u0026gt;는 클래스 전체에서 공통으로 사용되는 제네릭 타입.\n메서드의 \u0026lt;S\u0026gt;는 클래스의 \u0026lt;T\u0026gt;와 무관하게 동작하는 독립적인 제네릭 타입.\n제네릭 타입 매개변수 종류\n표기 의미 사용 예시 T (Type) 일반적인 타입 (Type) class Box\u0026lt;T\u0026gt; { T value; } E (Element) 컬렉션 내부 요소 (Element) class List\u0026lt;E\u0026gt; {} K, V (Key, Value) 키-값 쌍 (Map에서 사용) class Map\u0026lt;K, V\u0026gt; {} S, U 추가적인 타입 매개변수 (Secondary, Specific) \u0026lt;S, U\u0026gt; void method(S s, U u); ","permalink":"http://localhost:1313/record/2025-02-26/","summary":"\u003cblockquote\u003e\n\u003cp\u003e✅ [강의] Java 문법 Chapter 3 (1~4)\u003cbr\u003e\n✅ [과제] Java 계산기 만들기 level 1\u003c/p\u003e\u003c/blockquote\u003e\n\u003chr\u003e\n\u003ch2 id=\"예외와-예외-처리\"\u003e예외와 예외 처리\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003e예외\u003c/strong\u003e → 프로그램 실행 중 발생할 수 있는 예기치 못한 오류나 상황. 예외가 처리되지 않으면 프로그램 흐름이 중단됨.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003e예외 구조와 종류\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eUncheckedException\u003c/strong\u003e\n→ \u003ccode\u003eRuntimeException\u003c/code\u003e과 그 하위 클래스. 예외 처리 강제되지 않음.\n예: \u003ccode\u003eNullPointerException\u003c/code\u003e, \u003ccode\u003eArrayIndexOutOfBoundsException\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eCheckedException\u003c/strong\u003e\n→ \u003ccode\u003eRuntimeException\u003c/code\u003e을 제외한 예외. 예외 처리 강제됨.\n예: \u003ccode\u003eIOException\u003c/code\u003e, \u003ccode\u003eSQLException\u003c/code\u003e.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003e예외 전파\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eUncheckedException\u003c/strong\u003e\n→ 예외 전파가 자동으로 이루어짐.\n→ \u003ccode\u003emain()\u003c/code\u003e 메서드나 스레드에서 처리하지 않으면 프로그램이 종료됨.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eCheckedException\u003c/strong\u003e\n→ 예외가 발생했을 때 반드시 예외를 처리하거나 전파해야 함.\n→ \u003ccode\u003etry-catch\u003c/code\u003e문 또는 메서드 선언에 \u003ccode\u003ethrows\u003c/code\u003e 키워드 사용.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cbr\u003e\r\n\u003ch2 id=\"optional\"\u003eOptional\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003e\u003ccode\u003eOptional\u0026lt;T\u0026gt;\u003c/code\u003e\u003c/strong\u003e → \u003cstrong\u003eNull을 안전하게 다루기 위한 클래스\u003c/strong\u003e\u003c/p\u003e","title":"Java 심화 1"},{"content":" ✅ 문법 세션 1 - 프로그래밍 기초\n✅ Java 문법 강의 2주차\nChapter 2. 객체지향 이해하기 클래스와 객체 클래스(class) → 객체를 생성하기 위한 설계도. 속성과 기능을 정의하며, 동일한 구조를 가진 객체를 여러 개 생성할 수 있음. 객체(object) → 클래스를 기반으로 생성된 실체. 메모리에 할당되어 동작하며, 개별적으로 속성과 기능을 가짐. 인스턴스화(instantiate) → 클래스를 이용해 객체를 생성하는 과정. new 키워드를 사용해 객체를 메모리에 할당. 속성(property, field) → 객체가 가지는 데이터. 클래스 내부에서 변수 형태로 선언되며, 객체마다 서로 다른 값을 가질 수 있음. 생성자(constructor) → 객체가 생성될 때 호출되는 특수한 메서드. 속성을 초기화하고, 객체의 기본 상태를 설정하는 역할. 기능(method) → 객체가 수행하는 동작. 클래스 내부에서 정의되며, 특정 입력을 받아 처리한 후 결과를 반환하거나 상태를 변경함. JVM 메모리 영역 Method Area → 클래스 정보(클래스 이름, 메서드, 필드, static 변수 등)를 저장하는 공간. JVM이 시작될 때 로드되며, 모든 쓰레드가 공유. Stack Area → 메서드 호출 시 생성되는 스택 프레임을 저장하는 공간. 지역변수, 매개변수, 메서드 호출 정보가 포함되며, 호출이 끝나면 제거. 각 쓰레드마다 독립적인 스택을 가짐. Heap Area → 객체와 인스턴스 변수가 저장되는 공간. new 키워드로 생성된 객체가 저장되며, GC(Garbage Collector)가 관리. 모든 쓰레드가 공유. 래퍼클래스 래퍼클래스 → 기본형 데이터를 객체처럼 다룰 수 있도록 감싸는 클래스. Integer, Double, Boolean 등 기본형의 객체화된 버전.\n기본형 변수 → 실제 값을 직접 저장하는 변수. int, double, char 등 메모리에서 고정된 크기로 저장됨.\n참조형 변수 → 객체의 메모리 주소를 저장하는 변수. 배열, 클래스, 인터페이스 등 힙 영역에 저장된 객체를 가리킴.\n오토박싱 \u0026amp; 언박싱 → 기본형 ↔ 래퍼클래스 간 자동 변환 기능.\n오토박싱: 기본형 → 래퍼클래스로 자동 변환 (int → Integer) 언박싱: 래퍼클래스 → 기본형으로 자동 변환 (Integer → int) // 오토 박싱 Integer num2 = 10; // 내부적으로 Integer.valueOf(10) 호출하여 객체 생성 Integer num3 = Integer.valueOf(10); // 직접 Integer 객체 생성 // 오토 언박싱 int num4 = num3; // 내부적으로 num3.intValue()를 호출 int num5 = num3.intValue(); // 직접 intValue() 호출하여 기본형으로 변환 static static 키워드 → 클래스 레벨에서 공유되는 변수 또는 메서드를 정의하는 키워드. static으로 선언된 변수와 메서드는 객체 생성 없이 사용 가능. 인스턴스 멤버 (인스턴스 변수, 인스턴스 메서드) → 객체(인스턴스)마다 독립적으로 존재하는 변수와 메서드. new를 통해 객체를 생성해야 접근 가능. 클래스 멤버 (클래스 변수, 클래스 메서드) → static 키워드를 사용해 클래스에 소속된 변수와 메서드. 모든 객체가 공유하며, 객체 생성 없이 클래스명.변수 또는 클래스명.메서드() 형태로 접근 가능. final final → 변수, 메서드, 클래스에 사용되며 값 변경 불가 또는 참조 변경 불가를 의미. final 변수 → 값 변경 불가능 (초기화 후 재할당 불가) final 메서드 → 하위 클래스에서 오버라이딩 불가 final 클래스 → 상속 불가 상수 (static final) → 변하지 않는 값을 저장하는 변수. static final로 선언하여 클래스 로드 시 한 번만 할당되며, 모든 인스턴스가 공유. 불변 객체 (Immutable Object) → 내부 상태가 한 번 설정되면 절대 변경되지 않는 객체. final 키워드를 활용해 필드 변경을 막고, setter를 제공하지 않음. 인터페이스 인터페이스란 → 클래스가 따라야 할 설계 표준을 정의하는 추상적 타입. 메서드의 시그니처(선언)만 포함하고, 구현은 하지 않음.\ninterface Animal { void makeSound(); // 메서드 선언 (구현 X) } 인터페이스를 사용하는 이유\n코드 표준화 → 여러 클래스가 동일한 방식으로 동작하도록 강제. 결합도 낮추기 → 구현체 변경 시 영향 최소화. 다형성 지원 → 인터페이스 타입으로 여러 구현 객체를 다룰 수 있음. 인터페이스 적용\n구현체 - 인터페이스를 구현한 클래스 Dog 클래스는 Animal 인터페이스를 구현하며, 반드시 makeSound()를 오버라이딩해야 함. class Dog implements Animal { @Override public void makeSound() { System.out.println(\u0026#34;멍멍!\u0026#34;); } } 인터페이스의 다양한 기능\n인터페이스 다중 구현 클래스는 여러 개의 인터페이스를 동시에 구현할 수 있음. interface Flyable { void fly(); } interface Swimable { void swim(); } class Duck implements Flyable, Swimable { public void fly() { System.out.println(\u0026#34;오리가 난다!\u0026#34;); } public void swim() { System.out.println(\u0026#34;오리가 수영한다!\u0026#34;); } } 인터페이스 다중상속\n인터페이스는 여러 개의 부모 인터페이스를 상속할 수 있음.\ninterface Animal { void eat(); } interface Pet { void play(); } interface Dog extends Animal, Pet { void bark(); } 인터페이스에 변수를 선언하는 경우\n인터페이스의 변수는 **항상 public static final(상수)**로 선언됨.\ninterface Config { int MAX_USERS = 100; // public static final 자동 적용 } 객체지향 - 캡슐화 객체의 데이터(필드)와 메서드(기능)를 하나로 묶고, 외부에서 직접 접근을 제한하는 기법. 중요한 데이터를 보호하고, 객체 내부의 구현을 숨길 수 있음.\n캡슐화가 필요한 이유\n데이터 보호 → 외부에서 직접 수정하지 못하게 막음. 코드 유지보수성 향상 → 내부 구현이 바뀌어도 외부에 영향을 주지 않음. 객체의 일관성 유지 → 잘못된 데이터 할당을 방지하고, 유효한 값만 저장 가능. 접근제어자\n데이터와 메서드에 대한 접근을 제어하는 키워드.\npublic → 어디서든 접근 가능 private → 해당 클래스 내에서만 접근 가능 protected → 같은 패키지 및 상속받은 클래스에서 접근 가능 default(지정 안 함) → 같은 패키지 내에서만 접근 가능 데이터 접근 - getter와 setter\nprivate 필드에 접근하기 위해 getter(읽기), setter(쓰기) 메서드를 제공.\nclass Person { private String name; public String getName() { // Getter (읽기) return name; } public void setName(String name) { // Setter (쓰기) this.name = name; } } getName()으로 이름을 읽고, setName()으로 값을 설정. 데이터 검증 로직 추가 가능 → 잘못된 데이터 입력 방지. 객체지향 - 상속 기존 클래스를 확장하여 코드 재사용성과 유지보수성을 높이는 개념.\nextends 키워드를 사용하여 부모 클래스(슈퍼 클래스)의 속성과 메서드를 자식 클래스(서브 클래스)에서 상속받음. 재사용성\n중복 코드 없이 부모 클래스의 기능을 그대로 사용 가능. 필요하면 추가 기능을 확장하거나, 기존 기능을 재정의(오버라이딩)할 수 있음. class Animal { void eat() { System.out.println(\u0026#34;먹는다\u0026#34;); } } class Dog extends Animal { void bark() { System.out.println(\u0026#34;멍멍\u0026#34;); } } Dog dog = new Dog(); dog.eat(); // \u0026#34;먹는다\u0026#34; (부모 클래스 메서드 사용) dog.bark(); // \u0026#34;멍멍\u0026#34; (자식 클래스 메서드) super - 부모 인스턴스\nsuper 키워드를 사용해 부모 클래스의 멤버(변수, 메서드)에 접근 가능. **super()**는 부모 클래스의 생성자를 호출할 때 사용. class Animal { String name; Animal(String name) { this.name = name; } } class Dog extends Animal { Dog(String name) { super(name); // 부모 클래스(Animal)의 생성자 호출 } } 확장 (Extending Functionality)\n자식 클래스는 부모 클래스의 기능을 그대로 상속받고, 새로운 기능을 추가할 수 있음. class Bird extends Animal { void fly() { System.out.println(\u0026#34;날아간다\u0026#34;); } } Bird bird = new Bird(); bird.eat(); // 부모 클래스 기능 사용 bird.fly(); // 자식 클래스에서 확장한 기능 재정의 - 메서드 오버라이딩\n부모 클래스의 메서드를 자식 클래스에서 **동일한 이름으로 재정의(Override)**하여 동작 변경 가능. @Override 어노테이션을 사용해 의도적인 재정의를 명확히 표현. class Animal { void makeSound() { System.out.println(\u0026#34;동물이 소리를 낸다\u0026#34;); } } class Dog extends Animal { @Override void makeSound() { System.out.println(\u0026#34;멍멍\u0026#34;); } // 부모 메서드 재정의 } Dog dog = new Dog(); dog.makeSound(); // \u0026#34;멍멍\u0026#34; 출력 (오버라이딩된 메서드 실행) 추상 클래스 (Abstract Class)\n객체를 직접 생성할 수 없는 클래스, 상속을 통해서만 사용 가능. 일부 메서드는 구현하지 않고 **추상 메서드(abstract method)**로 선언하여 자식 클래스에서 반드시 구현하도록 강제. abstract class Animal { abstract void makeSound(); // 추상 메서드 (구현 X) } class Dog extends Animal { @Override void makeSound() { System.out.println(\u0026#34;멍멍\u0026#34;); } } Object 클래스\n모든 클래스의 최상위 부모 클래스 equals(), hashCode(), toString(), clone() 등의 기본 메서드를 제공. 모든 Java 클래스는 Object를 자동으로 상속받음. class Example {} Example obj = new Example(); System.out.println(obj.toString()); // Object의 메서드 사용 객체지향 - 추상화 객체의 핵심적인 속성과 기능만 표현하고, 불필요한 세부 사항을 숨기는 개념. 객체를 계층적으로 표현하여 공통된 개념을 뽑아내는 과정. abstract class Vehicle { abstract void move(); // 핵심 기능만 선언 } 인터페이스 상속을 활용한 추상 계층 표현 인터페이스를 활용하면 여러 계층에서 공통된 기능을 정의하고, 세부 구현은 각각 다르게 가능. 다중 구현이 가능하여 유연한 설계를 지원. interface Animal { void makeSound(); // 추상화된 메서드 } class Dog implements Animal { public void makeSound() { System.out.println(\u0026#34;멍멍\u0026#34;); } } class Cat implements Animal { public void makeSound() { System.out.println(\u0026#34;야옹\u0026#34;); } } Animal 인터페이스를 상속받아 Dog, Cat이 각각의 방식으로 기능을 구현. 다형성을 활용할 수 있어 코드의 유연성이 증가. 클래스 상속을 활용한 추상 계층 표현 추상 클래스를 사용하여 공통된 속성과 메서드를 정의하고, 하위 클래스에서 이를 구체화. abstract class Vehicle { String brand; abstract void move(); // 하위 클래스에서 구현 void setBrand(String brand) { // 공통 메서드 this.brand = brand; } } class Car extends Vehicle { @Override void move() { System.out.println(\u0026#34;도로를 달린다\u0026#34;); } } class Airplane extends Vehicle { @Override void move() { System.out.println(\u0026#34;하늘을 난다\u0026#34;); } } 공통적인 속성을 유지하면서 확장 가능. 객체지향 - 다형성 하나의 객체가 여러 형태를 가질 수 있는 성질. 부모 타입으로 자식 객체를 참조할 수 있어, 코드의 유연성과 확장성이 증가.\nclass Animal { void makeSound() { System.out.println(\u0026#34;동물이 소리를 낸다\u0026#34;); } } class Dog extends Animal { @Override void makeSound() { System.out.println(\u0026#34;멍멍!\u0026#34;); } } Animal myPet = new Dog(); // 부모 타입으로 자식 객체 참조 (다형성) myPet.makeSound(); // \u0026#34;멍멍!\u0026#34; 출력 인터페이스를 활용한 다형성\n인터페이스 타입으로 여러 구현체를 다룰 수 있음.\ninterface Animal { void makeSound(); } class Dog implements Animal { public void makeSound() { System.out.println(\u0026#34;멍멍!\u0026#34;); } } class Cat implements Animal { public void makeSound() { System.out.println(\u0026#34;야옹!\u0026#34;); } } Animal pet1 = new Dog(); Animal pet2 = new Cat(); pet1.makeSound(); // \u0026#34;멍멍!\u0026#34; pet2.makeSound(); // \u0026#34;야옹!\u0026#34; 같은 인터페이스를 구현한 객체라면, 동일한 방식으로 다룰 수 있음. 추가 기능이 필요하면 새로운 클래스만 구현하면 됨 → 확장성 증가. 업캐스팅 (Upcasting)\n자식 객체를 부모 타입으로 변환 (자동 형변환).\nDog dog = new Dog(); Animal animal = dog; // 업캐스팅 (자동 변환) animal.makeSound(); // \u0026#34;멍멍!\u0026#34; 부모 타입으로 변환되기 때문에 부모가 가진 메서드만 호출 가능. 하지만, 오버라이딩된 메서드는 그대로 실행됨. 업캐스팅 주의사항\n업캐스팅된 객체는 자식 클래스의 고유 기능을 사용할 수 없음. class Dog extends Animal { void bark() { System.out.println(\u0026#34;짖는다!\u0026#34;); } } Animal pet = new Dog(); pet.bark(); // 오류! Animal 타입에는 bark() 없음 다운캐스팅 (Downcasting)\n부모 타입을 자식 타입으로 변환 (명시적 형변환 필요).\nAnimal pet = new Dog(); Dog myDog = (Dog) pet; // 다운캐스팅 (명시적 변환) myDog.bark(); // \u0026#34;짖는다!\u0026#34; 다운캐스팅하면 자식 클래스의 고유 메서드를 사용할 수 있음. 다운캐스팅 주의사항\n잘못된 다운캐스팅 시 ClassCastException 발생. Animal pet = new Cat(); Dog myDog = (Dog) pet; // 오류! Cat은 Dog로 변환할 수 없음. 안전한 다운캐스팅을 위해 instanceof 체크 필요. if (pet instanceof Dog) { Dog myDog = (Dog) pet; myDog.bark(); } ","permalink":"http://localhost:1313/record/2025-02-25-02/","summary":"\u003cblockquote\u003e\n\u003cp\u003e✅ 문법 세션 1 - 프로그래밍 기초\u003cbr\u003e\n✅ Java 문법 강의 2주차\u003c/p\u003e\u003c/blockquote\u003e\n\u003chr\u003e\r\n\u003ch2 id=\"chapter-2-객체지향-이해하기\"\u003eChapter 2. 객체지향 이해하기\u003c/h2\u003e\n\u003cbr\u003e\r\n\u003ch3 id=\"클래스와-객체\"\u003e클래스와 객체\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003e클래스(class)\u003c/strong\u003e → 객체를 생성하기 위한 설계도. 속성과 기능을 정의하며, 동일한 구조를 가진 객체를 여러 개 생성할 수 있음.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e객체(object)\u003c/strong\u003e → 클래스를 기반으로 생성된 실체. 메모리에 할당되어 동작하며, 개별적으로 속성과 기능을 가짐.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e인스턴스화(instantiate)\u003c/strong\u003e → 클래스를 이용해 객체를 생성하는 과정. \u003ccode\u003enew\u003c/code\u003e 키워드를 사용해 객체를 메모리에 할당.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e속성(property, field)\u003c/strong\u003e → 객체가 가지는 데이터. 클래스 내부에서 변수 형태로 선언되며, 객체마다 서로 다른 값을 가질 수 있음.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e생성자(constructor)\u003c/strong\u003e → 객체가 생성될 때 호출되는 특수한 메서드. 속성을 초기화하고, 객체의 기본 상태를 설정하는 역할.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e기능(method)\u003c/strong\u003e → 객체가 수행하는 동작. 클래스 내부에서 정의되며, 특정 입력을 받아 처리한 후 결과를 반환하거나 상태를 변경함.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cbr\u003e\r\n\u003ch3 id=\"jvm-메모리-영역\"\u003eJVM 메모리 영역\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eMethod Area\u003c/strong\u003e → 클래스 정보(클래스 이름, 메서드, 필드, static 변수 등)를 저장하는 공간. JVM이 시작될 때 로드되며, 모든 쓰레드가 공유.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eStack Area\u003c/strong\u003e → 메서드 호출 시 생성되는 스택 프레임을 저장하는 공간. 지역변수, 매개변수, 메서드 호출 정보가 포함되며, 호출이 끝나면 제거. 각 쓰레드마다 독립적인 스택을 가짐.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eHeap Area\u003c/strong\u003e → 객체와 인스턴스 변수가 저장되는 공간. \u003ccode\u003enew\u003c/code\u003e 키워드로 생성된 객체가 저장되며, GC(Garbage Collector)가 관리. 모든 쓰레드가 공유.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cbr\u003e\r\n\u003ch3 id=\"래퍼클래스\"\u003e래퍼클래스\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003e래퍼클래스\u003c/strong\u003e → 기본형 데이터를 객체처럼 다룰 수 있도록 감싸는 클래스. \u003ccode\u003eInteger\u003c/code\u003e, \u003ccode\u003eDouble\u003c/code\u003e, \u003ccode\u003eBoolean\u003c/code\u003e 등 기본형의 객체화된 버전.\u003c/p\u003e","title":"객체지향"},{"content":"final -지역변수 final이 붙은 지역변수는 한 번만 값을 할당할 수 있음. 값이 할당된 이후에는 변경 불가능. 메서드의 매개변수에도 final을 적용할 수 있으며, 이 경우 해당 매개변수 값 변경이 불가능. public class FinalLocalMain { public static void main(String[] args) { // final 지역변수1 - 선언 후 할당 (한 번만 가능) final int data1; data1 = 10; // 최초 할당 가능 // data1 = 20; // 오류! final 변수는 한 번만 할당 가능 // final 지역변수2 - 선언과 동시에 초기화 final int data2 = 10; // data2 = 20; // 오류! 이미 값이 설정됨 method(10); } // final 매개변수 (메서드 내부에서 변경 불가능) static void method(final int parameter) { // parameter = 20; // 오류! final 매개변수는 값 변경 불가 } } final 지역변수는 최초 한 번만 값을 할당 가능, 이후 변경 불가. final 매개변수는 메서드 내부에서 값 변경이 불가능. final - 필드(멤버변수) 클래스의 멤버 변수(필드)에 final을 사용하면, 해당 필드는 한 번만 초기화 가능함.\n(1) 생성자에서 초기화 final 필드를 생성자에서 한 번만 초기화 가능. 이후에는 절대 변경할 수 없음. public class ConstructInit { final int value; // final 필드 public ConstructInit(int value) { // 생성자에서 초기화 this.value = value; } } 객체 생성 시 생성자를 통해 final 필드 값을 설정. 객체별로 다른 값 설정 가능. 생성자에서 값을 설정한 이후에는 변경 불가. (2) 필드 선언과 동시에 초기화 final 필드를 선언과 동시에 초기화하면, 모든 객체가 동일한 값을 가짐. 생성자를 사용하지 않아도 됨. public class FieldInit { final int value = 10; // 필드 초기화 } 모든 객체가 동일한 값을 가짐. 불필요한 중복 생성 방지를 위해 static을 함께 사용하면 메모리 절약 가능. public class FieldInit { // static final → 모든 객체가 공유하는 상수 static final int CONST_VALUE = 10; } 상수 (static final) static final을 사용하면 클래스가 로드될 때 한 번만 초기화되고 모든 인스턴스에서 공유됨. 일반적으로 상수(Constant) 변수는 public static final로 선언하며, 변수명은 대문자로 작성. public class Constant { public static final double PI = 3.14; public static final int MAX_USERS = 1000; } static → 프로그램 실행 중 메모리에 한 번만 로드됨. final → 값 변경 불가. 중앙에서 한 번만 관리 가능하므로 유지보수가 쉬움. System.out.println(Constant.PI); // 3.14 출력 System.out.println(Constant.MAX_USERS); // 1000 출력 매직 넘버(하드코딩된 숫자) 방지 → 의미를 이해하기 쉬움 코드 유지보수성이 증가 → 한 곳만 변경하면 전체 적용됨 final 변수와 참조 타입 기본형 변수(int, double 등): final을 붙이면 값 자체가 변경 불가능. 참조형 변수(객체): final을 붙이면 참조하는 객체(주소) 변경 불가능, 내부 값은 변경 가능. public class FinalBasic { public static void main(String[] args) { final int num = 10; // num = 20; // 오류! final 변수는 값 변경 불가 } } final을 기본형 변수에 적용하면 값 변경 불가. class Data { public int value; } public class FinalRefMain { public static void main(String[] args) { final Data data = new Data(); // data = new Data(); // 오류! 참조 대상 변경 불가 // 참조 대상의 값은 변경 가능 data.value = 10; System.out.println(data.value); // 10 data.value = 20; System.out.println(data.value); // 20 } } final을 참조형 변수에 적용하면 객체의 참조값(주소) 변경 불가능.\n하지만, 객체 내부의 필드는 변경 가능. ","permalink":"http://localhost:1313/record/2025-02-25-01/","summary":"\u003ch2 id=\"final--지역변수\"\u003efinal -지역변수\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003efinal\u003c/code\u003e이 붙은 \u003cstrong\u003e지역변수는 한 번만 값을 할당할 수 있음.\u003c/strong\u003e\u003c/li\u003e\n\u003cli\u003e값이 할당된 이후에는 변경 불가능.\u003c/li\u003e\n\u003cli\u003e메서드의 매개변수에도 \u003ccode\u003efinal\u003c/code\u003e을 적용할 수 있으며, 이 경우 \u003cstrong\u003e해당 매개변수 값 변경이 불가능.\u003c/strong\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eFinalLocalMain\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kd\"\u003estatic\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e[]\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eargs\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"c1\"\u003e// final 지역변수1 - 선언 후 할당 (한 번만 가능)\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"kd\"\u003efinal\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003edata1\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"n\"\u003edata1\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003e10\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"c1\"\u003e// 최초 할당 가능\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"c1\"\u003e// data1 = 20; // 오류! final 변수는 한 번만 할당 가능\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"c1\"\u003e// final 지역변수2 - 선언과 동시에 초기화\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"kd\"\u003efinal\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003edata2\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003e10\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"c1\"\u003e// data2 = 20; // 오류! 이미 값이 설정됨\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"n\"\u003emethod\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003e10\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"c1\"\u003e// final 매개변수 (메서드 내부에서 변경 불가능)\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"kd\"\u003estatic\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"nf\"\u003emethod\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kd\"\u003efinal\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eparameter\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"c1\"\u003e// parameter = 20; // 오류! final 매개변수는 값 변경 불가\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003e\u003ccode\u003efinal\u003c/code\u003e 지역변수는 \u003cstrong\u003e최초 한 번만 값을 할당 가능\u003c/strong\u003e, 이후 변경 불가.\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003efinal\u003c/code\u003e 매개변수는 \u003cstrong\u003e메서드 내부에서 값 변경이 불가능\u003c/strong\u003e.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cbr\u003e\r\n\u003ch2 id=\"final---필드멤버변수\"\u003efinal - 필드(멤버변수)\u003c/h2\u003e\n\u003cp\u003e클래스의 \u003cstrong\u003e멤버 변수(필드)에 \u003ccode\u003efinal\u003c/code\u003e을 사용하면, 해당 필드는 한 번만 초기화 가능\u003c/strong\u003e함.\u003c/p\u003e","title":"final"},{"content":" ✅ Java 문법 강의 1주차\nChapter 1. Java 기초 문법 다지기 JDK (Java Development Kit) JDK → Java 프로그램을 개발할 때 필요한 개발 도구 모음 Javac(Java Compiler) → 자바코드를 바이트코드(.class)로 변환 JVM (Java Virtual Machine) → 바이트코드를 실행 컴퓨터의 기억 방식 RAM (메모리) → 휘발성, 프로그램 실행 시 사용됨 보조기억장치 (HDD, SSD) → 영구 저장 비트(Bit) → 0 또는 1의 값 바이트(Byte) → 8비트로 구성 자바 프로젝트 관리 네이밍 규칙 카멜케이스 (camelCase) → 변수, 메서드 (myVariableName) 스네이크케이스 (snake_case) → (Java에서는 잘 사용하지 않음) 클래스 이름 → PascalCase (MyClass) 패키지 이름 → 소문자 (com.example.app) 변수와 자료형 변수 → 데이터를 저장하는 공간 자료형 기본형: int, double, char, boolean 참조형: String, Array, Class int num = 10; // 정수형 변수 double pi = 3.14; // 실수형 변수 boolean isJavaFun = true; // 논리형 변수 형변환 업캐스팅(작은 → 큰 자료형) → 자동 변환 다운캐스팅(큰 → 작은 자료형) → 강제 변환 double d = 10; // 자동 형변환 (업캐스팅) int i = (int) d; // 강제 형변환 (다운캐스팅) 입출력 (I/O) 입력 (Scanner 사용) import java.util.Scanner; Scanner scanner = new Scanner(System.in); int num = scanner.nextInt(); // 정수 입력 출력 (System.out 사용) System.out.println(\u0026#34;Hello Java!\u0026#34;); // 개행 포함 출력 System.out.print(\u0026#34;No new line\u0026#34;); // 개행 없이 출력 System.out.println(\u0026#34;\\n줄 바꿈 포함\u0026#34;); // `\\n` 사용 연산자 산술 연산자(+, -, *, /, %) 대입 연산자(=) 복합 대입 연산자(+=, -=, *=, /= , %=) 증감 연산자(++, --) 전위 연산 - 사용 전 연산 후위 연산 - 사용 후 연산 비교 연산자(==, !=, \u0026lt;, \u0026gt;, \u0026lt;=, \u0026gt;=) 논리 연산자(!, \u0026amp;\u0026amp;, ||) 문자열 비교(equals()) 조건문 import java.util.Scanner; Scanner scanner = new Scanner(System.in); System.out.print(\u0026#34;신호등 색상을 입력하세요(초록불, 노란불, 빨간불): \u0026#34;); String light = scanner.nextLine(); if (light.equals(\u0026#34;초록불\u0026#34;)) { System.out.println(\u0026#34;건너세요!\u0026#34;); } else if (light.equals(\u0026#34;노란불\u0026#34;)) { System.out.println(\u0026#34;주의하세요!\u0026#34;); } else if (light.equals(\u0026#34;빨간불\u0026#34;)) { System.out.println(\u0026#34;멈추세요!\u0026#34;); } else { System.out.println(\u0026#34;잘못된 입력입니다!\u0026#34;); } switch (light) { case \u0026#34;초록불\u0026#34;: System.out.println(\u0026#34;건너세요!\u0026#34;); break; case \u0026#34;노란불\u0026#34;: System.out.println(\u0026#34;주의하세요!\u0026#34;); break; case \u0026#34;빨간불\u0026#34;: System.out.println(\u0026#34;멈추세요!\u0026#34;); break; default: System.out.println(\u0026#34;잘못된 입력입니다!\u0026#34;); } 반복문 for (int i = 0; i \u0026lt; 5; i++) { System.out.print(i + \u0026#34; \u0026#34;); // 0 1 2 3 4 } int i = 0; while (i \u0026lt; 5) { System.out.print(i + \u0026#34; \u0026#34;); i++; } int i = 0; do { System.out.print(i + \u0026#34; \u0026#34;); i++; } while (i \u0026lt; 5); 배열 // 1. 배열 선언 int[] arr1; // 2. 배열 길이 할당 arr1 = new int[5]; // 3. 배열 선언과 길이 동시에 할당 int[] arr2 = new int[5]; // 4. 배열 선언과 동시에 배열의 요소 할당 int[] arr3 = {10, 20, 30, 40, 50}; // 배열의 길이 int arrLength = arr3.length; System.out.println(\u0026#34;arrLength = \u0026#34; + arrLength); // 배열 요소 접근 System.out.println(\u0026#34;배열의 1번째 요소 접근: \u0026#34; + arr3[0]); // 배열 요소 변경 arr3[0] = 100; // 향상된 for 문 for (int a : arr3) { System.out.println(\u0026#34;a = \u0026#34; + a); } // 2차원 배열 int[][] arr4 = { {1, 2}, {3, 4} }; System.out.println(arr4[1][0]); // 3 메서드 public class Calculator { // 두 정수를 더하는 메서드 (반환값 있음: int) int sum(int value1, int value2) { int result = value1 + value2; // 두 값 더하기 return result; // 결과 반환 } // 반환값이 없는 메서드 (void) void printSum(int value1, int value2) { int result = value1 + value2; System.out.println(\u0026#34;result = \u0026#34; + result); } } public class Main { public static void main(String[] args) { Calculator calculator = new Calculator(); // Calculator 객체 생성 // sum 메서드는 반환값이 있어서 변수에 저장 int result = calculator.sum(1, 2); System.out.println(\u0026#34;result = \u0026#34; + result); // printSum 메서드는 반환값이 없고 바로 출력됨 calculator.printSum(3, 4); } } result = 3\rresult = 7 ","permalink":"http://localhost:1313/record/2025-02-24/","summary":"\u003cblockquote\u003e\n\u003cp\u003e✅ Java 문법 강의 1주차\u003c/p\u003e\u003c/blockquote\u003e\n\u003chr\u003e\r\n\u003ch2 id=\"chapter-1-java-기초-문법-다지기\"\u003eChapter 1. Java 기초 문법 다지기\u003c/h2\u003e\n\u003cbr\u003e\r\n\u003ch3 id=\"jdk-java-development-kit\"\u003eJDK (Java Development Kit)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eJDK → Java 프로그램을 개발할 때 필요한 개발 도구 모음\n\u003cul\u003e\n\u003cli\u003eJavac(Java Compiler) → 자바코드를 바이트코드(.class)로 변환\u003c/li\u003e\n\u003cli\u003eJVM (Java Virtual Machine) → 바이트코드를 실행\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cbr\u003e\r\n\u003ch3 id=\"컴퓨터의-기억-방식\"\u003e컴퓨터의 기억 방식\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eRAM (메모리) → 휘발성, 프로그램 실행 시 사용됨\u003c/li\u003e\n\u003cli\u003e보조기억장치 (HDD, SSD) → 영구 저장\u003c/li\u003e\n\u003cli\u003e비트(Bit) → 0 또는 1의 값\u003c/li\u003e\n\u003cli\u003e바이트(Byte) → 8비트로 구성\u003c/li\u003e\n\u003c/ul\u003e\n\u003cbr\u003e\r\n\u003ch3 id=\"자바-프로젝트-관리\"\u003e자바 프로젝트 관리\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e네이밍 규칙\n\u003cul\u003e\n\u003cli\u003e카멜케이스 (camelCase) → 변수, 메서드 (myVariableName)\u003c/li\u003e\n\u003cli\u003e스네이크케이스 (snake_case) → (Java에서는 잘 사용하지 않음)\u003c/li\u003e\n\u003cli\u003e클래스 이름 → PascalCase (MyClass)\u003c/li\u003e\n\u003cli\u003e패키지 이름 → 소문자 (com.example.app)\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cbr\u003e\r\n\u003ch3 id=\"변수와-자료형\"\u003e변수와 자료형\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e변수 → 데이터를 저장하는 공간\u003c/li\u003e\n\u003cli\u003e자료형\n\u003cul\u003e\n\u003cli\u003e기본형: \u003ccode\u003eint\u003c/code\u003e, \u003ccode\u003edouble\u003c/code\u003e, \u003ccode\u003echar\u003c/code\u003e, \u003ccode\u003eboolean\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e참조형: \u003ccode\u003eString\u003c/code\u003e, \u003ccode\u003eArray\u003c/code\u003e, \u003ccode\u003eClass\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003enum\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003e10\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"c1\"\u003e// 정수형 변수\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"kt\"\u003edouble\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003epi\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003e14\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"c1\"\u003e// 실수형 변수\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"kt\"\u003eboolean\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eisJavaFun\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"c1\"\u003e// 논리형 변수\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003e형변환\n\u003cul\u003e\n\u003cli\u003e업캐스팅(작은 → 큰 자료형) → 자동 변환\u003c/li\u003e\n\u003cli\u003e다운캐스팅(큰 → 작은 자료형) → 강제 변환\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kt\"\u003edouble\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003ed\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003e10\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"c1\"\u003e// 자동 형변환 (업캐스팅)\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003ed\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"c1\"\u003e// 강제 형변환 (다운캐스팅)\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cbr\u003e\r\n\u003ch3 id=\"입출력-io\"\u003e입출력 (I/O)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e입력 (Scanner 사용)\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"nn\"\u003ejava.util.Scanner\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"n\"\u003eScanner\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003escanner\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003enew\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eScanner\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eSystem\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ein\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003enum\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003escanner\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003enextInt\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"c1\"\u003e// 정수 입력\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003e출력 (System.out 사용)\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eSystem\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eout\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eprintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Hello Java!\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"c1\"\u003e// 개행 포함 출력\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"n\"\u003eSystem\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eout\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;No new line\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"c1\"\u003e// 개행 없이 출력\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"n\"\u003eSystem\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eout\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eprintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;\\n줄 바꿈 포함\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"c1\"\u003e// `\\n` 사용\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cbr\u003e\r\n\u003ch3 id=\"연산자\"\u003e연산자\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e산술 연산자(\u003ccode\u003e+\u003c/code\u003e, \u003ccode\u003e-\u003c/code\u003e, \u003ccode\u003e*\u003c/code\u003e, \u003ccode\u003e/\u003c/code\u003e, \u003ccode\u003e%\u003c/code\u003e)\u003c/li\u003e\n\u003cli\u003e대입 연산자(\u003ccode\u003e=\u003c/code\u003e)\n\u003cul\u003e\n\u003cli\u003e복합 대입 연산자(\u003ccode\u003e+=\u003c/code\u003e, \u003ccode\u003e-=\u003c/code\u003e, \u003ccode\u003e*=\u003c/code\u003e, \u003ccode\u003e/=\u003c/code\u003e , \u003ccode\u003e%=\u003c/code\u003e)\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e증감 연산자(\u003ccode\u003e++\u003c/code\u003e, \u003ccode\u003e--\u003c/code\u003e)\n\u003cul\u003e\n\u003cli\u003e전위 연산 - 사용 전 연산\u003c/li\u003e\n\u003cli\u003e후위 연산 - 사용 후 연산\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e비교 연산자(\u003ccode\u003e==\u003c/code\u003e, \u003ccode\u003e!=\u003c/code\u003e, \u003ccode\u003e\u0026lt;\u003c/code\u003e, \u003ccode\u003e\u0026gt;\u003c/code\u003e, \u003ccode\u003e\u0026lt;=\u003c/code\u003e, \u003ccode\u003e\u0026gt;=\u003c/code\u003e)\u003c/li\u003e\n\u003cli\u003e논리 연산자(\u003ccode\u003e!\u003c/code\u003e, \u003ccode\u003e\u0026amp;\u0026amp;\u003c/code\u003e, \u003ccode\u003e||\u003c/code\u003e)\u003c/li\u003e\n\u003cli\u003e문자열 비교(\u003ccode\u003eequals()\u003c/code\u003e)\u003c/li\u003e\n\u003c/ul\u003e\n\u003cbr\u003e\r\n\u003ch3 id=\"조건문\"\u003e조건문\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"nn\"\u003ejava.util.Scanner\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"n\"\u003eScanner\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003escanner\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003enew\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eScanner\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eSystem\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ein\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"n\"\u003eSystem\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eout\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;신호등 색상을 입력하세요(초록불, 노란불, 빨간불): \u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003elight\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003escanner\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003enextLine\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003elight\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eequals\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;초록불\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\t\u003c/span\u003e\u003cspan class=\"n\"\u003eSystem\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eout\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eprintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;건너세요!\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003eelse\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003elight\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eequals\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;노란불\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\t\u003c/span\u003e\u003cspan class=\"n\"\u003eSystem\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eout\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eprintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;주의하세요!\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003eelse\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003elight\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eequals\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;빨간불\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\t\u003c/span\u003e\u003cspan class=\"n\"\u003eSystem\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eout\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eprintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;멈추세요!\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003eelse\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\t\u003c/span\u003e\u003cspan class=\"n\"\u003eSystem\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eout\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eprintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;잘못된 입력입니다!\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eswitch\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003elight\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\t\u003c/span\u003e\u003cspan class=\"k\"\u003ecase\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;초록불\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \t\u003c/span\u003e\u003cspan class=\"n\"\u003eSystem\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eout\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eprintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;건너세요!\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"k\"\u003ebreak\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\t\u003c/span\u003e\u003cspan class=\"k\"\u003ecase\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;노란불\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \t\u003c/span\u003e\u003cspan class=\"n\"\u003eSystem\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eout\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eprintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;주의하세요!\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\t\t\u003c/span\u003e\u003cspan class=\"k\"\u003ebreak\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\t\u003c/span\u003e\u003cspan class=\"k\"\u003ecase\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;빨간불\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \t\u003c/span\u003e\u003cspan class=\"n\"\u003eSystem\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eout\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eprintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;멈추세요!\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"k\"\u003ebreak\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\t\u003c/span\u003e\u003cspan class=\"k\"\u003edefault\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \t\u003c/span\u003e\u003cspan class=\"n\"\u003eSystem\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eout\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eprintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;잘못된 입력입니다!\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cbr\u003e\r\n\u003ch3 id=\"반복문\"\u003e반복문\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003efor\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"n\"\u003eSystem\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eout\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34; \u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"c1\"\u003e// 0 1 2 3 4\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003ewhile\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"n\"\u003eSystem\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eout\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34; \u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003edo\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"n\"\u003eSystem\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eout\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34; \u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003ewhile\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cbr\u003e\r\n\u003ch3 id=\"배열\"\u003e배열\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e// 1. 배열 선언\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"o\"\u003e[]\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003earr1\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"c1\"\u003e// 2. 배열 길이 할당\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"n\"\u003earr1\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003enew\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003e5\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"c1\"\u003e// 3. 배열 선언과 길이 동시에 할당\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"o\"\u003e[]\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003earr2\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003enew\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003e5\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"c1\"\u003e// 4. 배열 선언과 동시에 배열의 요소 할당\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"o\"\u003e[]\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003earr3\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"n\"\u003e10\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003e20\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003e30\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003e40\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003e50\u003c/span\u003e\u003cspan class=\"p\"\u003e};\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"c1\"\u003e// 배열의 길이\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003earrLength\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003earr3\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003elength\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"n\"\u003eSystem\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eout\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eprintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;arrLength = \u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003earrLength\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"c1\"\u003e// 배열 요소 접근\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"n\"\u003eSystem\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eout\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eprintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;배열의 1번째 요소 접근: \u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003earr3\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"c1\"\u003e// 배열 요소 변경\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"n\"\u003earr3\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003e100\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"c1\"\u003e// 향상된 for 문\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003efor\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003ea\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003earr3\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\t\u003c/span\u003e\u003cspan class=\"n\"\u003eSystem\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eout\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eprintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;a = \u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"c1\"\u003e// 2차원 배열\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"o\"\u003e[][]\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003earr4\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"n\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"n\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e};\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"n\"\u003eSystem\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eout\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eprintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003earr4\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e][\u003c/span\u003e\u003cspan class=\"n\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"c1\"\u003e// 3\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cbr\u003e\r\n\u003ch3 id=\"메서드\"\u003e메서드\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eCalculator\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\t\u003c/span\u003e\u003cspan class=\"c1\"\u003e// 두 정수를 더하는 메서드 (반환값 있음: int)\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"nf\"\u003esum\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003evalue1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003evalue2\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eresult\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003evalue1\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003evalue2\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"c1\"\u003e// 두 값 더하기\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"k\"\u003ereturn\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eresult\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"c1\"\u003e// 결과 반환\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\t\u003c/span\u003e\u003cspan class=\"c1\"\u003e// 반환값이 없는 메서드 (void)\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"nf\"\u003eprintSum\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003evalue1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003evalue2\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eresult\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003evalue1\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003evalue2\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"n\"\u003eSystem\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eout\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eprintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;result = \u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eresult\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eMain\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kd\"\u003estatic\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e[]\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eargs\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"n\"\u003eCalculator\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003ecalculator\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003enew\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eCalculator\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"c1\"\u003e// Calculator 객체 생성\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\t\t\u003c/span\u003e\u003cspan class=\"c1\"\u003e// sum 메서드는 반환값이 있어서 변수에 저장\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eresult\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003ecalculator\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003esum\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"n\"\u003eSystem\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eout\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eprintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;result = \u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eresult\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e        \n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"c1\"\u003e// printSum 메서드는 반환값이 없고 바로 출력됨\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"n\"\u003ecalculator\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eprintSum\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eresult = 3\r\nresult = 7\n\u003c/code\u003e\u003c/pre\u003e","title":"Java 기초"},{"content":" ✅ 프로젝트 배포\n✅ 프로젝트 발표\n✅ 프로젝트 피드백\n✅ 프로젝트 회고\n[13조] 이름 정하기 어렵조 메인 페이지 팀원 등록 등록하기 버튼 클릭 시 팀원 정보 입력창 오픈 팀원 정보 작성 후 저장하기 버튼 클릭 시 팀원 등록 팀원 수정 메인 페이지에서 해당 카드의 수정 아이콘 클릭 시 수정창 오픈 수정할 정보 입력 후 수정하기 버튼 클릭 시 팀원 정보 수정 팀원 삭제 메인 페이지에서 해당 카드의 삭제 아이콘 클릭 시 팀원 정보 삭제\n→ 해당 팀원의 방명록 정보도 함께 삭제 상세 페이지 팀원 카드 클릭 시 해당 팀원의 상세 정보 및 방명록 창 오픈 방명록 등록 이름, 비밀번호, 내용 작성 후 등록 버튼 클릭 시 방명록 등록 방명록 수정 수정할 방명록의 수정 아이콘 클릭 시 비밀번호 입력창 오픈 방명록 등록 시 입력한 비밀번호 입력 시 수정 박스 오픈 수정할 내용 작성 후 등록 버튼 클릭 시 방명록 수정 방명록 삭제 삭제할 방명록의 삭제 아이콘 클릭 시 비밀번호 입력창 오픈 방명록 등록 시 입력한 비밀번호 입력 시 방명록 삭제 그 외 → git, blog 아이콘 클릭 시 해당 링크로 연결\n→ 방명록 목록이 길어지면 스크롤 생성\n→ 조회 및 수정 시 가장 최근 방명록(맨 밑)으로 스크롤 이동\n→ 수정 박스 열린 상태에서 수정 아이콘 클릭 시 수정 취소\n피드백 팀원 정보에도 비밀번호가 있으면 좋을 듯 (보안)\n→ 개인적으로 기능 추가 및 수정해볼 예정\n","permalink":"http://localhost:1313/project/about-team-04/","summary":"\u003cblockquote\u003e\n\u003cp\u003e✅ 프로젝트 배포\u003cbr\u003e\n✅ 프로젝트 발표\u003cbr\u003e\n✅ 프로젝트 피드백\u003cbr\u003e\n✅ 프로젝트 회고\u003c/p\u003e\u003c/blockquote\u003e\n\u003chr\u003e\n\u003ch1 id=\"13조-이름-정하기-어렵조\"\u003e[13조] 이름 정하기 어렵조\u003c/h1\u003e\n\u003cbr\u003e\r\n\u003ch2 id=\"메인-페이지\"\u003e메인 페이지\u003c/h2\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"https://velog.velcdn.com/images/ezro/post/3449fca5-1bf4-4a20-ad62-27100dab79df/image.png\"\u003e\u003c/p\u003e\n\u003ch3 id=\"팀원-등록\"\u003e팀원 등록\u003c/h3\u003e\n\u003cp\u003e\u003ccode\u003e등록하기\u003c/code\u003e 버튼 클릭 시 팀원 정보 입력창 오픈\n\u003cimg loading=\"lazy\" src=\"https://velog.velcdn.com/images/ezro/post/03caaad7-3e0c-42ff-92bd-7b75f145319b/image.png\"\u003e\u003c/p\u003e\n\u003cp\u003e팀원 정보 작성 후 \u003ccode\u003e저장하기\u003c/code\u003e 버튼 클릭 시 팀원 등록\n\u003cimg loading=\"lazy\" src=\"https://velog.velcdn.com/images/ezro/post/2e135f2c-4c7f-4486-a183-13c71c3d14c5/image.png\"\u003e\u003c/p\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"https://velog.velcdn.com/images/ezro/post/ac7cb6c0-281e-4a9b-8606-0db92378c463/image.png\"\u003e\u003c/p\u003e\n\u003cbr\u003e\r\n\u003ch3 id=\"팀원-수정\"\u003e팀원 수정\u003c/h3\u003e\n\u003cp\u003e메인 페이지에서 해당 카드의 \u003ccode\u003e수정 아이콘\u003c/code\u003e 클릭 시 수정창 오픈\n\u003cimg loading=\"lazy\" src=\"https://velog.velcdn.com/images/ezro/post/38ac662d-8baa-4bc1-a332-872477a4c356/image.png\"\u003e\u003c/p\u003e\n\u003cp\u003e수정할 정보 입력 후 \u003ccode\u003e수정하기\u003c/code\u003e 버튼 클릭 시 팀원 정보 수정\n\u003cimg loading=\"lazy\" src=\"https://velog.velcdn.com/images/ezro/post/a8784abd-5d1d-4dd7-b17e-66c6f2dd4f9f/image.png\"\u003e\u003c/p\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"https://velog.velcdn.com/images/ezro/post/2229a15a-e51f-4914-ac32-c45e226388dd/image.png\"\u003e\u003c/p\u003e\n\u003cbr\u003e\r\n\u003ch3 id=\"팀원-삭제\"\u003e팀원 삭제\u003c/h3\u003e\n\u003cp\u003e메인 페이지에서 해당 카드의 \u003ccode\u003e삭제 아이콘\u003c/code\u003e 클릭 시 팀원 정보 삭제\u003cbr\u003e\n→ 해당 팀원의 방명록 정보도 함께 삭제\n\u003cimg loading=\"lazy\" src=\"https://velog.velcdn.com/images/ezro/post/5f0c0ef1-f91f-47db-b913-51e8f0ed6204/image.png\"\u003e\u003c/p\u003e","title":"미니 프로젝트 최종"},{"content":" ✅ 코드 병합\n✅ 기능 수정\n미니 프로젝트 기능 수정 기존 기능 문제: 수정 박스 생성 후 수정 아이콘 클릭 시 수정 박스 중복 생성 문제 해결: 수정 아이콘 클릭 시 수정 박스가 존재하는지 체크 후 있으면 수정 취소, 없으면 수정 박스 생성으로 변경 let list = $(this).closest(\u0026#34;li\u0026#34;); 현재 이벤트가 발생한 요소에서 가장 가까운 li 찾기 == 수정하려는 방명록\nlet updateLi = list.next(\u0026#39;li\u0026#39;); list의 다음 li 요소를 찾아 변수에 저장 == 수정 박스\nlet checkUpdateBox = list.next(\u0026#39;li\u0026#39;).find(\u0026#39;#guestbook-update-div\u0026#39;).length; id=\u0026quot;guestbook-update-div\u0026quot; 개수 찾기 == 수정 박스 존재 여부 확인\n","permalink":"http://localhost:1313/project/about-team-03/","summary":"\u003cblockquote\u003e\n\u003cp\u003e✅ 코드 병합\u003cbr\u003e\n✅ 기능 수정\u003c/p\u003e\u003c/blockquote\u003e\n\u003chr\u003e\n\u003ch2 id=\"미니-프로젝트\"\u003e미니 프로젝트\u003c/h2\u003e\n\u003ch3 id=\"기능-수정\"\u003e기능 수정\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003e기존 기능 문제\u003c/strong\u003e: 수정 박스 생성 후 수정 아이콘 클릭 시 수정 박스 중복 생성\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e문제 해결\u003c/strong\u003e: 수정 아이콘 클릭 시 수정 박스가 존재하는지 체크 후 있으면 수정 취소, 없으면 수정 박스 생성으로 변경\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"https://velog.velcdn.com/images/ezro/post/481f5dcb-a15a-43b4-8d65-f6fc6f2247c1/image.gif\"\u003e\u003c/p\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"https://velog.velcdn.com/images/ezro/post/d456bd35-4c03-4d82-aebd-05ac3f3858cb/image.png\"\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-js\" data-lang=\"js\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nx\"\u003elist\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003e$\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"p\"\u003e).\u003c/span\u003e\u003cspan class=\"nx\"\u003eclosest\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;li\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e현재 이벤트가 발생한 요소에서 가장 가까운 \u003ccode\u003eli\u003c/code\u003e 찾기 == \u003cstrong\u003e수정하려는 방명록\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-js\" data-lang=\"js\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nx\"\u003eupdateLi\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003elist\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003enext\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;li\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003ccode\u003elist\u003c/code\u003e의 다음 \u003ccode\u003eli\u003c/code\u003e 요소를 찾아 변수에 저장 == \u003cstrong\u003e수정 박스\u003c/strong\u003e\u003c/p\u003e","title":"미니 프로젝트 3"},{"content":" +\n☑️ 팀원 상세 페이지 화면\n☑️ 팀원 상세 정보 조회\n☑️ 팀원 방명록 목록 조회\n☑️ 팀원 방명록 등록\n☑️ 팀원 방명록 삭제\n☑️ 팀원 방명록 수정\n미니 프로젝트 팀원 상세 페이지 화면 팀원 상세 정보 조회 메인 페이지 loadMembers() 수정 - data 세팅 코드 추가 팀원 카드 클릭 시 데이터 매칭 팀원 방명록 목록 조회 오류남\u0026hellip; firebase에서 복합 쿼리(where + orderBy)를 사용하려면 색인(index)을 생성해야 한다고 한다\nmemberIndex: 오름차순 / date: 내림차순으로 색인 생성해주니 정상 조회됨\n팀원 방명록 등록 방명록 db에 해당 팀원의 index 추가해서 팀원 상세 페이지별 방명록 구현\n팀원 방명록 삭제 방명록 등록 시 입력한 비밀번호 일치해야 삭제 가능 팀원 삭제 시 해당 팀원의 방명록도 삭제\n팀원 방명록 수정 방명록 등록 시 입력한 비밀번호 일치하면 수정 가능\n","permalink":"http://localhost:1313/project/about-team-02/","summary":"\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003e+\u003c/strong\u003e\u003cbr\u003e\n☑️ 팀원 상세 페이지 화면\u003cbr\u003e\n☑️ 팀원 상세 정보 조회\u003cbr\u003e\n☑️ 팀원 방명록 목록 조회\u003cbr\u003e\n☑️ 팀원 방명록 등록\u003cbr\u003e\n☑️ 팀원 방명록 삭제\u003cbr\u003e\n☑️ 팀원 방명록 수정\u003c/p\u003e\u003c/blockquote\u003e\n\u003chr\u003e\n\u003ch2 id=\"미니-프로젝트\"\u003e미니 프로젝트\u003c/h2\u003e\n\u003ch3 id=\"팀원-상세-페이지-화면\"\u003e팀원 상세 페이지 화면\u003c/h3\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"https://velog.velcdn.com/images/ezro/post/227dc23c-15ff-4a84-a975-280136059816/image.png\"\u003e\u003c/p\u003e\n\u003ch3 id=\"팀원-상세-정보-조회\"\u003e팀원 상세 정보 조회\u003c/h3\u003e\n\u003cp\u003e메인 페이지 \u003ccode\u003eloadMembers()\u003c/code\u003e 수정 - data 세팅 코드 추가\n\u003cimg loading=\"lazy\" src=\"https://velog.velcdn.com/images/ezro/post/35e0b44d-c5d4-49da-ac77-484e6815788f/image.png\"\u003e\u003c/p\u003e\n\u003cp\u003e팀원 카드 클릭 시 데이터 매칭\n\u003cimg loading=\"lazy\" src=\"https://velog.velcdn.com/images/ezro/post/02e8f255-efec-48c9-a13b-7776d0238aef/image.png\"\u003e\u003c/p\u003e\n\u003ch3 id=\"팀원-방명록-목록-조회\"\u003e팀원 방명록 목록 조회\u003c/h3\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"https://velog.velcdn.com/images/ezro/post/e7f5077d-6a7f-4e07-846e-60f9f5bca0fb/image.png\"\u003e\u003c/p\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"https://velog.velcdn.com/images/ezro/post/b209f915-0ee4-4738-b741-b6af497e6c43/image.png\"\u003e\u003c/p\u003e\n\u003cp\u003e오류남\u0026hellip; firebase에서 복합 쿼리(where + orderBy)를 사용하려면 색인(index)을 생성해야 한다고 한다\u003c/p\u003e","title":"미니 프로젝트 2"},{"content":" Chapter 1. 온보딩 주차\n✅ [미니 프로젝트] 메인 페이지 (HTML/CSS)\n✅ [미니 프로젝트] 팀원 정보 입력창 (HTML/CSS)\n+\n☑️ 팀원 등록\n☑️ 팀원 목록 불러오기\n☑️ 팀원 삭제\n미니 프로젝트 부트스트랩 CSS/JS 활용 \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;meta name=\u0026#34;viewport\u0026#34; content=\u0026#34;width=device-width, initial-scale=1\u0026#34;\u0026gt; \u0026lt;title\u0026gt;title\u0026lt;/title\u0026gt; \u0026lt;!-- 부트스트랩 CSS --\u0026gt; \u0026lt;link href=\u0026#34;https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css\u0026#34; rel=\u0026#34;stylesheet\u0026#34; integrity=\u0026#34;sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC\u0026#34; crossorigin=\u0026#34;anonymous\u0026#34;\u0026gt; \u0026lt;!-- 제이쿼리 --\u0026gt; \u0026lt;script src=\u0026#34;https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;!-- 부트스트랩 JS --\u0026gt; \u0026lt;script src=\u0026#34;https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js\u0026#34; integrity=\u0026#34;sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM\u0026#34; crossorigin=\u0026#34;anonymous\u0026#34;\u0026gt; \u0026lt;/script\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; 메인 페이지 \u0026lt;!-- main title --\u0026gt; \u0026lt;div id=\u0026#34;title\u0026#34; class=\u0026#34;container col-xxl-8 px-4 py-5\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;row flex-lg-row-reverse align-items-center g-5 py-3\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;col-10 col-sm-8 col-lg-6\u0026#34;\u0026gt; \u0026lt;img id=\u0026#34;titleImg\u0026#34; src=\u0026#34;https://raw.githubusercontent.com/hyun5085/sparta/main/13%EC%A1%B0.jpeg\u0026#34; class=\u0026#34;d-block mx-lg-auto img-fluid\u0026#34; alt=\u0026#34;Bootstrap Themes\u0026#34; width=\u0026#34;700\u0026#34; height=\u0026#34;500\u0026#34; loading=\u0026#34;lazy\u0026#34;\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div id=\u0026#34;team\u0026#34; class=\u0026#34;col-lg-6\u0026#34;\u0026gt; \u0026lt;h1 class=\u0026#34;display-5 fw-bold text-body-emphasis lh-1 mb-3\u0026#34;\u0026gt;이름 정하기 어렵조\u0026lt;/h1\u0026gt; \u0026lt;p class=\u0026#34;lead\u0026#34;\u0026gt;이름 정하기는 어렵조, 하지만 열심히 하조\u0026lt;/p\u0026gt; \u0026lt;!-- 클릭 시 팀원 정보 입력 모달창 open --\u0026gt; \u0026lt;button id=\u0026#34;addBtn\u0026#34; type=\u0026#34;button\u0026#34; class=\u0026#34;btn btn-secondary\u0026#34; data-bs-toggle=\u0026#34;modal\u0026#34; data-bs-target=\u0026#34;#createMember\u0026#34;\u0026gt;등록하기\u0026lt;/button\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;!-- main member cards --\u0026gt; \u0026lt;div id=\u0026#34;cards\u0026#34; class=\u0026#34;row row-cols-1 row-cols-md-5 g-4\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;col\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;card h-100\u0026#34;\u0026gt; \u0026lt;img src=\u0026#34;https://www.pngarts.com/files/10/Default-Profile-Picture-Download-PNG-Image.png\u0026#34; class=\u0026#34;card-img-top\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;card-body\u0026#34;\u0026gt; \u0026lt;h5 class=\u0026#34;card-title\u0026#34;\u0026gt;홍길동\u0026lt;/h5\u0026gt; \u0026lt;p class=\u0026#34;card-text\u0026#34;\u0026gt;23\u0026lt;/p\u0026gt; \u0026lt;p class=\u0026#34;card-text\u0026#34;\u0026gt;남\u0026lt;/p\u0026gt; \u0026lt;p class=\u0026#34;card-text\u0026#34;\u0026gt;ESFP\u0026lt;/p\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;card-footer\u0026#34;\u0026gt; \u0026lt;small class=\u0026#34;text-body-secondary\u0026#34;\u0026gt;2025-02-18\u0026lt;/small\u0026gt; \u0026lt;!-- 삭제 아이콘 --\u0026gt; \u0026lt;span class=\u0026#34;delete\u0026#34;\u0026gt; \u0026lt;svg xmlns=\u0026#34;http://www.w3.org/2000/svg\u0026#34; width=\u0026#34;16\u0026#34; height=\u0026#34;16\u0026#34; fill=\u0026#34;currentColor\u0026#34; class=\u0026#34;bi bi-trash3-fill\u0026#34; viewBox=\u0026#34;0 0 16 16\u0026#34;\u0026gt; \u0026lt;path d=\u0026#34;M11 1.5v1h3.5a.5.5 0 0 1 0 1h-.538l-.853 10.66A2 2 0 0 1 11.115 16h-6.23a2 2 0 0 1-1.994-1.84L2.038 3.5H1.5a.5.5 0 0 1 0-1H5v-1A1.5 1.5 0 0 1 6.5 0h3A1.5 1.5 0 0 1 11 1.5m-5 0v1h4v-1a.5.5 0 0 0-.5-.5h-3a.5.5 0 0 0-.5.5M4.5 5.029l.5 8.5a.5.5 0 1 0 .998-.06l-.5-8.5a.5.5 0 1 0-.998.06m6.53-.528a.5.5 0 0 0-.528.47l-.5 8.5a.5.5 0 0 0 .998.058l.5-8.5a.5.5 0 0 0-.47-.528M8 4.5a.5.5 0 0 0-.5.5v8.5a.5.5 0 0 0 1 0V5a.5.5 0 0 0-.5-.5\u0026#34; /\u0026gt; \u0026lt;/svg\u0026gt; \u0026lt;/span\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; 팀원 정보 입력창 \u0026lt;!-- Modal --\u0026gt; \u0026lt;div class=\u0026#34;modal fade\u0026#34; id=\u0026#34;createMember\u0026#34; tabindex=\u0026#34;-1\u0026#34; aria-labelledby=\u0026#34;exampleModalLabel\u0026#34; aria-hidden=\u0026#34;true\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;modal-dialog\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;modal-content\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;modal-header\u0026#34;\u0026gt; \u0026lt;h5 class=\u0026#34;modal-title\u0026#34; id=\u0026#34;exampleModalLabel\u0026#34;\u0026gt;\u0026lt;/h5\u0026gt; \u0026lt;button type=\u0026#34;button\u0026#34; class=\u0026#34;btn-close\u0026#34; data-bs-dismiss=\u0026#34;modal\u0026#34; aria-label=\u0026#34;Close\u0026#34;\u0026gt;\u0026lt;/button\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;modal-body\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;form-floating\u0026#34;\u0026gt; \u0026lt;textarea class=\u0026#34;form-control\u0026#34; placeholder=\u0026#34;Leave a comment here\u0026#34; id=\u0026#34;modalImg\u0026#34;\u0026gt;\u0026lt;/textarea\u0026gt; \u0026lt;label for=\u0026#34;floatingTextarea\u0026#34;\u0026gt;이미지\u0026lt;/label\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;form-floating\u0026#34;\u0026gt; \u0026lt;textarea class=\u0026#34;form-control\u0026#34; placeholder=\u0026#34;Leave a comment here\u0026#34; id=\u0026#34;modalName\u0026#34;\u0026gt;\u0026lt;/textarea\u0026gt; \u0026lt;label for=\u0026#34;floatingTextarea\u0026#34;\u0026gt;이름\u0026lt;/label\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;row g-2\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;col-md\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;form-floating\u0026#34;\u0026gt; \u0026lt;select class=\u0026#34;form-select\u0026#34; id=\u0026#34;modalGender\u0026#34; aria-label=\u0026#34;Floating label select example\u0026#34;\u0026gt; \u0026lt;option selected\u0026gt;선택\u0026lt;/option\u0026gt; \u0026lt;option value=\u0026#34;1\u0026#34;\u0026gt;남자\u0026lt;/option\u0026gt; \u0026lt;option value=\u0026#34;2\u0026#34;\u0026gt;여자\u0026lt;/option\u0026gt; \u0026lt;/select\u0026gt; \u0026lt;label for=\u0026#34;floatingSelect\u0026#34;\u0026gt;성별\u0026lt;/label\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;col-md\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;form-floating\u0026#34;\u0026gt; \u0026lt;textarea class=\u0026#34;form-control\u0026#34; placeholder=\u0026#34;Leave a comment here\u0026#34; id=\u0026#34;modalAge\u0026#34;\u0026gt;\u0026lt;/textarea\u0026gt; \u0026lt;label for=\u0026#34;floatingTextarea\u0026#34;\u0026gt;나이\u0026lt;/label\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;form-floating\u0026#34;\u0026gt; \u0026lt;textarea class=\u0026#34;form-control\u0026#34; placeholder=\u0026#34;Leave a comment here\u0026#34; id=\u0026#34;modalMbti\u0026#34;\u0026gt;\u0026lt;/textarea\u0026gt; \u0026lt;label for=\u0026#34;floatingTextarea\u0026#34;\u0026gt;MBTI\u0026lt;/label\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;form-floating\u0026#34;\u0026gt; \u0026lt;textarea class=\u0026#34;form-control\u0026#34; placeholder=\u0026#34;Leave a comment here\u0026#34; id=\u0026#34;modalHobby\u0026#34;\u0026gt;\u0026lt;/textarea\u0026gt; \u0026lt;label for=\u0026#34;floatingTextarea\u0026#34;\u0026gt;취미\u0026lt;/label\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;form-floating\u0026#34;\u0026gt; \u0026lt;textarea class=\u0026#34;form-control\u0026#34; placeholder=\u0026#34;Leave a comment here\u0026#34; id=\u0026#34;modalGit\u0026#34;\u0026gt;\u0026lt;/textarea\u0026gt; \u0026lt;label for=\u0026#34;floatingTextarea\u0026#34;\u0026gt;git\u0026lt;/label\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;form-floating\u0026#34;\u0026gt; \u0026lt;textarea class=\u0026#34;form-control\u0026#34; placeholder=\u0026#34;Leave a comment here\u0026#34; id=\u0026#34;modalBlog\u0026#34;\u0026gt;\u0026lt;/textarea\u0026gt; \u0026lt;label for=\u0026#34;floatingTextarea\u0026#34;\u0026gt;blog\u0026lt;/label\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;form-floating\u0026#34;\u0026gt; \u0026lt;textarea class=\u0026#34;form-control\u0026#34; placeholder=\u0026#34;Leave a comment here\u0026#34; id=\u0026#34;modalMsg\u0026#34;\u0026gt;\u0026lt;/textarea\u0026gt; \u0026lt;label for=\u0026#34;floatingTextarea\u0026#34;\u0026gt;한마디\u0026lt;/label\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;modal-footer\u0026#34;\u0026gt; \u0026lt;button type=\u0026#34;button\u0026#34; class=\u0026#34;btn btn-outline-success\u0026#34;\u0026gt;저장하기\u0026lt;/button\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; 팀원 등록 // 마지막 인덱스를 가져오는 함수 async function getLastIndex() { const q = query(collection(db, \u0026#34;members\u0026#34;), orderBy(\u0026#34;index\u0026#34;, \u0026#34;desc\u0026#34;), limit(1)); const querySnapshot = await getDocs(q); if (!querySnapshot.empty) { return querySnapshot.docs[0].data().index; // 가장 마지막 index 값 반환 } else { return 0; // 데이터가 없으면 0 반환 } } function checkInput() { // 입력값 가져오기 let fields = [ { id: \u0026#34;#modalImg\u0026#34;, message: \u0026#34;이미지 주소를 입력하세요.\u0026#34; }, { id: \u0026#34;#modalName\u0026#34;, message: \u0026#34;이름을 입력하세요.\u0026#34; }, { id: \u0026#34;#modalGender\u0026#34;, message: \u0026#34;성별을 선택하세요.\u0026#34; }, { id: \u0026#34;#modalAge\u0026#34;, message: \u0026#34;나이를 입력하세요.\u0026#34; }, { id: \u0026#34;#modalMbti\u0026#34;, message: \u0026#34;MBTI를 입력하세요.\u0026#34; }, { id: \u0026#34;#modalHobby\u0026#34;, message: \u0026#34;취미를 입력하세요.\u0026#34; }, { id: \u0026#34;#modalGit\u0026#34;, message: \u0026#34;GitHub 주소를 입력하세요.\u0026#34; }, { id: \u0026#34;#modalBlog\u0026#34;, message: \u0026#34;블로그 주소를 입력하세요.\u0026#34; }, { id: \u0026#34;#modalMsg\u0026#34;, message: \u0026#34;한마디를 입력하세요.\u0026#34; } ]; // 첫 번째로 비어있는 필드 찾기 for (let i = 0; i \u0026lt; fields.length; i++) { let value = $(fields[i].id).val().trim(); if (!value || value == \u0026#34;선택\u0026#34;) { alert(fields[i].message); // 첫 번째로 비어있는 필드의 메시지만 띄움 $(fields[i].id).focus(); // 해당 입력 필드에 포커스 return false; } else { return true; } } } // 오늘 날짜 2025-02-18 형식으로 가져오기 function getTodayDate() { let today = new Date(); let year = today.getFullYear(); let month = String(today.getMonth() + 1).padStart(2, \u0026#39;0\u0026#39;); // 월 (01~12) let day = String(today.getDate()).padStart(2, \u0026#39;0\u0026#39;); // 일 (01~31) return `${year}-${month}-${day}`; } $(document).ready(function() { // 팀원 정보 저장하기 $(\u0026#34;#saveBtn\u0026#34;).on(\u0026#34;click\u0026#34;, async function() { const lastIndex = await getLastIndex(); // 마지막 인덱스 가져오기 const newIndex = lastIndex + 1; // 새로운 인덱스 = 마지막 인덱스 + 1 let index = newIndex; let image = $(\u0026#34;#modalImg\u0026#34;).val(); let name = $(\u0026#34;#modalName\u0026#34;).val(); let gender = $(\u0026#34;#modalGender\u0026#34;).val(); let age = $(\u0026#34;#modalAge\u0026#34;).val(); let mbti = $(\u0026#34;#modalMbti\u0026#34;).val(); let hobby = $(\u0026#34;#modalHobby\u0026#34;).val(); let git = $(\u0026#34;#modalGit\u0026#34;).val(); let blog = $(\u0026#34;#modalBlog\u0026#34;).val(); let message = $(\u0026#34;#modalMsg\u0026#34;).val(); let date = getTodayDate(); let doc = { \u0026#39;index\u0026#39;: index, \u0026#39;image\u0026#39;: image, \u0026#39;name\u0026#39;: name, \u0026#39;gender\u0026#39;: gender, \u0026#39;age\u0026#39;: age, \u0026#39;mbti\u0026#39;: mbti, \u0026#39;hobby\u0026#39;: hobby, \u0026#39;git\u0026#39;: git, \u0026#39;blog\u0026#39;: blog, \u0026#39;message\u0026#39;: message, \u0026#39;date\u0026#39;:date }; if(checkInput()) { await addDoc(collection(db, \u0026#34;members\u0026#34;), doc); alert(\u0026#34;팀원 정보가 저장되었습니다.\u0026#34;); window.location.reload(); } }); }) 팀원 목록 불러오기 async function loadMembers() { $(\u0026#34;#cards\u0026#34;).empty(); let docs = await getDocs(collection(db, \u0026#34;members\u0026#34;)); docs.forEach((doc) =\u0026gt; { let row = doc.data(); let index = row[\u0026#34;index\u0026#34;]; let image = row[\u0026#34;image\u0026#34;]; let name = row[\u0026#34;name\u0026#34;]; let gender = row[\u0026#34;gender\u0026#34;]; let age = row[\u0026#34;age\u0026#34;]; let mbti = row[\u0026#34;mbti\u0026#34;]; let date = row[\u0026#34;date\u0026#34;]; let template = $(\u0026#34;#cardTemplate\u0026#34;)[0]; let temp = $(template.content.cloneNode(true)); temp.find(\u0026#34;.image\u0026#34;).attr(\u0026#34;src\u0026#34;, image); temp.find(\u0026#34;.name\u0026#34;).text(name); temp.find(\u0026#34;.gender\u0026#34;).text(gender); temp.find(\u0026#34;.age\u0026#34;).text(age + \u0026#34;살\u0026#34;); temp.find(\u0026#34;.mbti\u0026#34;).text(mbti); temp.find(\u0026#34;.index\u0026#34;).text(index); temp.find(\u0026#34;.date\u0026#34;).text(date); $(\u0026#34;#cards\u0026#34;).append(temp); }); } $(document).ready(function() { // 팀원 정보 불러오기 loadMembers(); }) 팀원 삭제 $(document).ready(function() { // 팀원 정보 삭제하기 $(document).on(\u0026#34;click\u0026#34;, \u0026#34;.delete\u0026#34;, async function () { let card = $(this).closest(\u0026#34;.col\u0026#34;); // 클릭한 버튼의 카드 찾기 let index = card.find(\u0026#34;.index\u0026#34;).text(); // 해당 카드의 인덱스 가져오기 if (!index) { alert(\u0026#34;오류: 인덱스를 찾을 수 없음\u0026#34;); return; } let confirmDelete = confirm(\u0026#34;정말 삭제하시겠습니까?\u0026#34;); if (!confirmDelete) return; try { // Firestore에서 해당 데이터 삭제 let docs = await getDocs(collection(db, \u0026#34;members\u0026#34;)); docs.forEach(async (doc) =\u0026gt; { if (doc.data().index == index) { // 인덱스가 일치하는 데이터 찾기 await deleteDoc(doc.ref); // Firestore에서 삭제 alert(\u0026#34;삭제되었습니다.\u0026#34;); location.reload(); // 페이지 새로고침 } }); } catch (error) { console.error(\u0026#34;삭제 중 오류 발생:\u0026#34;, error); alert(\u0026#34;삭제 실패하였습니다.\u0026#34;); } }); }) ","permalink":"http://localhost:1313/project/about-team-01/","summary":"\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eChapter 1. 온보딩 주차\u003c/strong\u003e\u003cbr\u003e\n✅ [미니 프로젝트] 메인 페이지 (HTML/CSS)\u003cbr\u003e\n✅ [미니 프로젝트] 팀원 정보 입력창 (HTML/CSS)\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e+\u003c/strong\u003e\u003cbr\u003e\n☑️ 팀원 등록\u003cbr\u003e\n☑️ 팀원 목록 불러오기\u003cbr\u003e\n☑️ 팀원 삭제\u003c/p\u003e\u003c/blockquote\u003e\n\u003chr\u003e\n\u003ch2 id=\"미니-프로젝트\"\u003e미니 프로젝트\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e부트스트랩 CSS/JS 활용\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-html\" data-lang=\"html\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"cp\"\u003e\u0026lt;!doctype html\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ehtml\u003c/span\u003e \u003cspan class=\"na\"\u003elang\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;en\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ehead\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003emeta\u003c/span\u003e \u003cspan class=\"na\"\u003echarset\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;utf-8\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003emeta\u003c/span\u003e \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;viewport\u0026#34;\u003c/span\u003e \u003cspan class=\"na\"\u003econtent\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;width=device-width, initial-scale=1\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003etitle\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003etitle\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003etitle\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"c\"\u003e\u0026lt;!-- 부트스트랩 CSS --\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003elink\u003c/span\u003e \u003cspan class=\"na\"\u003ehref\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css\u0026#34;\u003c/span\u003e \u003cspan class=\"na\"\u003erel\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;stylesheet\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"na\"\u003eintegrity\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC\u0026#34;\u003c/span\u003e \u003cspan class=\"na\"\u003ecrossorigin\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;anonymous\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \t\u003cspan class=\"c\"\u003e\u0026lt;!-- 제이쿼리 --\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003escript\u003c/span\u003e \u003cspan class=\"na\"\u003esrc\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003escript\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ehead\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ebody\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\t\u003cspan class=\"c\"\u003e\u0026lt;!-- 부트스트랩 JS --\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003escript\u003c/span\u003e \u003cspan class=\"na\"\u003esrc\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"na\"\u003eintegrity\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM\u0026#34;\u003c/span\u003e \u003cspan class=\"na\"\u003ecrossorigin\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;anonymous\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003escript\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ebody\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ehtml\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"메인-페이지\"\u003e메인 페이지\u003c/h3\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"https://velog.velcdn.com/images/ezro/post/119fc7f1-75c0-4c9e-bfc2-096e2d5cb79f/image.png\"\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-html\" data-lang=\"html\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c\"\u003e\u0026lt;!-- main title --\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e \u003cspan class=\"na\"\u003eid\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;title\u0026#34;\u003c/span\u003e \u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;container col-xxl-8 px-4 py-5\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e \u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;row flex-lg-row-reverse align-items-center g-5 py-3\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e \u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;col-10 col-sm-8 col-lg-6\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003eimg\u003c/span\u003e \u003cspan class=\"na\"\u003eid\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;titleImg\u0026#34;\u003c/span\u003e \u003cspan class=\"na\"\u003esrc\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;https://raw.githubusercontent.com/hyun5085/sparta/main/13%EC%A1%B0.jpeg\u0026#34;\u003c/span\u003e \u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;d-block mx-lg-auto img-fluid\u0026#34;\u003c/span\u003e \u003cspan class=\"na\"\u003ealt\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Bootstrap Themes\u0026#34;\u003c/span\u003e \u003cspan class=\"na\"\u003ewidth\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;700\u0026#34;\u003c/span\u003e \u003cspan class=\"na\"\u003eheight\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;500\u0026#34;\u003c/span\u003e \u003cspan class=\"na\"\u003eloading\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;lazy\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e \u003cspan class=\"na\"\u003eid\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;team\u0026#34;\u003c/span\u003e \u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;col-lg-6\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003eh1\u003c/span\u003e \u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;display-5 fw-bold text-body-emphasis lh-1 mb-3\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e이름 정하기 어렵조\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003eh1\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ep\u003c/span\u003e \u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;lead\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e이름 정하기는 어렵조, 하지만 열심히 하조\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"c\"\u003e\u0026lt;!-- 클릭 시 팀원 정보 입력 모달창 open --\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ebutton\u003c/span\u003e \u003cspan class=\"na\"\u003eid\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;addBtn\u0026#34;\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;button\u0026#34;\u003c/span\u003e \u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;btn btn-secondary\u0026#34;\u003c/span\u003e \u003cspan class=\"na\"\u003edata-bs-toggle\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;modal\u0026#34;\u003c/span\u003e \u003cspan class=\"na\"\u003edata-bs-target\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;#createMember\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e등록하기\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ebutton\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c\"\u003e\u0026lt;!-- main member cards --\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e \u003cspan class=\"na\"\u003eid\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;cards\u0026#34;\u003c/span\u003e \u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;row row-cols-1 row-cols-md-5 g-4\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e \u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;col\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e \u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;card h-100\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003eimg\u003c/span\u003e \u003cspan class=\"na\"\u003esrc\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;https://www.pngarts.com/files/10/Default-Profile-Picture-Download-PNG-Image.png\u0026#34;\u003c/span\u003e \u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;card-img-top\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e \u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;card-body\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003eh5\u003c/span\u003e \u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;card-title\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e홍길동\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003eh5\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ep\u003c/span\u003e \u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;card-text\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e23\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ep\u003c/span\u003e \u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;card-text\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e남\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ep\u003c/span\u003e \u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;card-text\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003eESFP\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e \u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;card-footer\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003esmall\u003c/span\u003e \u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;text-body-secondary\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e2025-02-18\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003esmall\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"c\"\u003e\u0026lt;!-- 삭제 아이콘 --\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003espan\u003c/span\u003e \u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;delete\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                    \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003esvg\u003c/span\u003e \u003cspan class=\"na\"\u003exmlns\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;http://www.w3.org/2000/svg\u0026#34;\u003c/span\u003e \u003cspan class=\"na\"\u003ewidth\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;16\u0026#34;\u003c/span\u003e \u003cspan class=\"na\"\u003eheight\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;16\u0026#34;\u003c/span\u003e \u003cspan class=\"na\"\u003efill\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;currentColor\u0026#34;\u003c/span\u003e \u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;bi bi-trash3-fill\u0026#34;\u003c/span\u003e \u003cspan class=\"na\"\u003eviewBox\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;0 0 16 16\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                        \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003epath\u003c/span\u003e \u003cspan class=\"na\"\u003ed\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;M11 1.5v1h3.5a.5.5 0 0 1 0 1h-.538l-.853 10.66A2 2 0 0 1 11.115 16h-6.23a2 2 0 0 1-1.994-1.84L2.038 3.5H1.5a.5.5 0 0 1 0-1H5v-1A1.5 1.5 0 0 1 6.5 0h3A1.5 1.5 0 0 1 11 1.5m-5 0v1h4v-1a.5.5 0 0 0-.5-.5h-3a.5.5 0 0 0-.5.5M4.5 5.029l.5 8.5a.5.5 0 1 0 .998-.06l-.5-8.5a.5.5 0 1 0-.998.06m6.53-.528a.5.5 0 0 0-.528.47l-.5 8.5a.5.5 0 0 0 .998.058l.5-8.5a.5.5 0 0 0-.47-.528M8 4.5a.5.5 0 0 0-.5.5v8.5a.5.5 0 0 0 1 0V5a.5.5 0 0 0-.5-.5\u0026#34;\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                    \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003esvg\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003espan\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"팀원-정보-입력창\"\u003e팀원 정보 입력창\u003c/h3\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"https://velog.velcdn.com/images/ezro/post/2cafc799-8794-4886-8541-82ff2d56169d/image.png\"\u003e\u003c/p\u003e","title":"미니 프로젝트 1"},{"content":" Chapter 1. 온보딩 주차\n✅ [특강] Git\n✅ 미니 프로젝트 S.A\nGit 1. 기본 명령어 명령어 기능 git init 현재 폴더를 Git 저장소로 초기화 git status 현재 저장소의 상태 확인 (추적되지 않은 파일, 변경 사항 등) git add \u0026lt;파일명\u0026gt; 특정 파일을 스테이징 영역에 추가 git add . 변경된 모든 파일을 스테이징 영역에 추가 git commit -m \u0026quot;메시지\u0026quot; 스테이징된 파일을 저장소에 커밋 git log 커밋 내역 확인 git log --oneline 한 줄 요약된 커밋 내역 확인 git config --global user.name \u0026quot;이름\u0026quot; Git 전역 사용자 이름 설정 git config --global user.email \u0026quot;이메일\u0026quot; Git 전역 이메일 설정 git config --list 설정된 Git 사용자 정보 확인 2. 브랜치 관련 명령어 명령어 기능 git branch 현재 존재하는 브랜치 목록 확인 git branch \u0026lt;브랜치명\u0026gt; 새로운 브랜치 생성 git checkout \u0026lt;브랜치명\u0026gt; 해당 브랜치로 이동 git checkout -b \u0026lt;브랜치명\u0026gt; 브랜치 생성 후 바로 이동 git merge \u0026lt;브랜치명\u0026gt; 현재 브랜치에 다른 브랜치를 병합 git branch -d \u0026lt;브랜치명\u0026gt; 특정 브랜치 삭제 git branch -D \u0026lt;브랜치명\u0026gt; 브랜치 강제 삭제 git branch -M main 브랜치 이름 변경 (기본 브랜치를 main으로 변경) 3. 원격 저장소(GitHub) 관련 명령어 명령어 기능 git remote add origin \u0026lt;저장소 URL\u0026gt; 원격 저장소 추가 (GitHub와 연결) git remote -v 원격 저장소 목록 확인 git push origin main 현재 브랜치를 원격 저장소의 main 브랜치에 업로드 git push -u origin main 기본 업스트림 브랜치 설정 후 푸시 git push --force 강제 푸시 (주의 필요) git pull origin main 원격 저장소의 최신 변경 사항 가져오기 git remote remove origin 원격 저장소 연결 해제 git clone \u0026lt;저장소 URL\u0026gt; 원격 저장소를 로컬로 복제 4. 파일 관리 및 변경 사항 되돌리기 명령어 기능 git reset --soft HEAD~1 마지막 커밋 취소 (파일 변경 사항 유지) git reset --hard HEAD~1 마지막 커밋 취소 (변경 사항도 삭제) git checkout -- \u0026lt;파일명\u0026gt; 특정 파일의 변경 사항 취소 git stash 변경 사항을 임시 저장 git stash pop 임시 저장한 변경 사항 적용 git revert \u0026lt;커밋ID\u0026gt; 특정 커밋을 취소하는 새로운 커밋 생성 5. 협업 및 충돌 해결 명령어 기능 git fetch origin 원격 저장소의 변경 사항 가져오기 (병합 X) git pull origin main 원격 저장소에서 최신 코드 가져오기 (병합 O) git merge \u0026lt;브랜치명\u0026gt; 브랜치를 병합 git mergetool 충돌 해결 도구 실행 git rebase \u0026lt;브랜치명\u0026gt; 다른 브랜치 위에 현재 브랜치를 재배치 git reset --hard origin/main 원격 저장소 기준으로 강제 리셋 git cherry-pick \u0026lt;커밋ID\u0026gt; 특정 커밋만 현재 브랜치에 적용 git diff 변경 사항 비교 git diff --staged 스테이징된 변경 사항 비교 git log --graph --all --decorate --oneline 브랜치와 커밋 히스토리를 그래프로 확인 6. 설정 및 기타 유용한 명령어 명령어 기능 git config --global core.editor \u0026quot;vim\u0026quot; 기본 텍스트 편집기 설정 git config --global core.autocrlf true 자동 줄바꿈 설정 (Windows) git gc Git 저장소 정리 및 최적화 git fsck 저장소의 무결성 검사 git blame \u0026lt;파일명\u0026gt; 특정 파일에서 누가 어떤 줄을 변경했는지 확인 7. 협업을 위한 기본 Workflow 1) GitHub에서 프로젝트 생성 후 클론 git clone \u0026lt;저장소 URL\u0026gt; cd 프로젝트 폴더 2) 새로운 브랜치에서 개발 진행 git checkout -b feature-branch 3) 변경 사항 저장 git add . git commit -m \u0026#34;기능 추가\u0026#34; 4) GitHub에 업로드 git push origin feature-branch 5) 메인 브랜치와 병합 git checkout main git merge feature-branch 6) 최신 코드 유지 git pull origin main 미니 프로젝트 S.A 📅 기간: 2025.02.17 - 2025.02.21\n📝 프로젝트: 팀 \u0026amp; 팀원 소개 웹 페이지\n🎨 역할: 메인 페이지 및 팀원 정보 입력창 (HTML/CSS)\n","permalink":"http://localhost:1313/record/2025-02-17/","summary":"\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eChapter 1. 온보딩 주차\u003c/strong\u003e\u003cbr\u003e\n✅ [특강] Git\u003cbr\u003e\n✅ 미니 프로젝트 S.A\u003c/p\u003e\u003c/blockquote\u003e\n\u003chr\u003e\n\u003ch2 id=\"git\"\u003eGit\u003c/h2\u003e\n\u003ch3 id=\"1-기본-명령어\"\u003e1. 기본 명령어\u003c/h3\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003e명령어\u003c/th\u003e\n          \u003cth\u003e기능\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003ccode\u003egit init\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003e현재 폴더를 Git 저장소로 초기화\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003ccode\u003egit status\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003e현재 저장소의 상태 확인 (추적되지 않은 파일, 변경 사항 등)\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003ccode\u003egit add \u0026lt;파일명\u0026gt;\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003e특정 파일을 스테이징 영역에 추가\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003ccode\u003egit add .\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003e변경된 모든 파일을 스테이징 영역에 추가\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003ccode\u003egit commit -m \u0026quot;메시지\u0026quot;\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003e스테이징된 파일을 저장소에 커밋\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003ccode\u003egit log\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003e커밋 내역 확인\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003ccode\u003egit log --oneline\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003e한 줄 요약된 커밋 내역 확인\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003ccode\u003egit config --global user.name \u0026quot;이름\u0026quot;\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003eGit 전역 사용자 이름 설정\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003ccode\u003egit config --global user.email \u0026quot;이메일\u0026quot;\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003eGit 전역 이메일 설정\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003ccode\u003egit config --list\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003e설정된 Git 사용자 정보 확인\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch3 id=\"2-브랜치-관련-명령어\"\u003e2. 브랜치 관련 명령어\u003c/h3\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003e명령어\u003c/th\u003e\n          \u003cth\u003e기능\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003ccode\u003egit branch\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003e현재 존재하는 브랜치 목록 확인\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003ccode\u003egit branch \u0026lt;브랜치명\u0026gt;\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003e새로운 브랜치 생성\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003ccode\u003egit checkout \u0026lt;브랜치명\u0026gt;\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003e해당 브랜치로 이동\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003ccode\u003egit checkout -b \u0026lt;브랜치명\u0026gt;\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003e브랜치 생성 후 바로 이동\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003ccode\u003egit merge \u0026lt;브랜치명\u0026gt;\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003e현재 브랜치에 다른 브랜치를 병합\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003ccode\u003egit branch -d \u0026lt;브랜치명\u0026gt;\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003e특정 브랜치 삭제\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003ccode\u003egit branch -D \u0026lt;브랜치명\u0026gt;\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003e브랜치 강제 삭제\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003ccode\u003egit branch -M main\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003e브랜치 이름 변경 (기본 브랜치를 \u003ccode\u003emain\u003c/code\u003e으로 변경)\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch3 id=\"3-원격-저장소github-관련-명령어\"\u003e3. 원격 저장소(GitHub) 관련 명령어\u003c/h3\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003e명령어\u003c/th\u003e\n          \u003cth\u003e기능\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003ccode\u003egit remote add origin \u0026lt;저장소 URL\u0026gt;\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003e원격 저장소 추가 (GitHub와 연결)\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003ccode\u003egit remote -v\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003e원격 저장소 목록 확인\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003ccode\u003egit push origin main\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003e현재 브랜치를 원격 저장소의 \u003ccode\u003emain\u003c/code\u003e 브랜치에 업로드\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003ccode\u003egit push -u origin main\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003e기본 업스트림 브랜치 설정 후 푸시\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003ccode\u003egit push --force\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003e강제 푸시 (주의 필요)\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003ccode\u003egit pull origin main\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003e원격 저장소의 최신 변경 사항 가져오기\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003ccode\u003egit remote remove origin\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003e원격 저장소 연결 해제\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003ccode\u003egit clone \u0026lt;저장소 URL\u0026gt;\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003e원격 저장소를 로컬로 복제\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch3 id=\"4-파일-관리-및-변경-사항-되돌리기\"\u003e4. 파일 관리 및 변경 사항 되돌리기\u003c/h3\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003e명령어\u003c/th\u003e\n          \u003cth\u003e기능\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003ccode\u003egit reset --soft HEAD~1\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003e마지막 커밋 취소 (파일 변경 사항 유지)\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003ccode\u003egit reset --hard HEAD~1\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003e마지막 커밋 취소 (변경 사항도 삭제)\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003ccode\u003egit checkout -- \u0026lt;파일명\u0026gt;\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003e특정 파일의 변경 사항 취소\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003ccode\u003egit stash\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003e변경 사항을 임시 저장\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003ccode\u003egit stash pop\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003e임시 저장한 변경 사항 적용\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003ccode\u003egit revert \u0026lt;커밋ID\u0026gt;\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003e특정 커밋을 취소하는 새로운 커밋 생성\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch3 id=\"5-협업-및-충돌-해결\"\u003e5. 협업 및 충돌 해결\u003c/h3\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003e명령어\u003c/th\u003e\n          \u003cth\u003e기능\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003ccode\u003egit fetch origin\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003e원격 저장소의 변경 사항 가져오기 (병합 X)\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003ccode\u003egit pull origin main\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003e원격 저장소에서 최신 코드 가져오기 (병합 O)\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003ccode\u003egit merge \u0026lt;브랜치명\u0026gt;\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003e브랜치를 병합\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003ccode\u003egit mergetool\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003e충돌 해결 도구 실행\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003ccode\u003egit rebase \u0026lt;브랜치명\u0026gt;\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003e다른 브랜치 위에 현재 브랜치를 재배치\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003ccode\u003egit reset --hard origin/main\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003e원격 저장소 기준으로 강제 리셋\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003ccode\u003egit cherry-pick \u0026lt;커밋ID\u0026gt;\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003e특정 커밋만 현재 브랜치에 적용\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003ccode\u003egit diff\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003e변경 사항 비교\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003ccode\u003egit diff --staged\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003e스테이징된 변경 사항 비교\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003ccode\u003egit log --graph --all --decorate --oneline\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003e브랜치와 커밋 히스토리를 그래프로 확인\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch3 id=\"6-설정-및-기타-유용한-명령어\"\u003e6. 설정 및 기타 유용한 명령어\u003c/h3\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003e명령어\u003c/th\u003e\n          \u003cth\u003e기능\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003ccode\u003egit config --global core.editor \u0026quot;vim\u0026quot;\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003e기본 텍스트 편집기 설정\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003ccode\u003egit config --global core.autocrlf true\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003e자동 줄바꿈 설정 (Windows)\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003ccode\u003egit gc\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003eGit 저장소 정리 및 최적화\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003ccode\u003egit fsck\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003e저장소의 무결성 검사\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003ccode\u003egit blame \u0026lt;파일명\u0026gt;\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003e특정 파일에서 누가 어떤 줄을 변경했는지 확인\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch3 id=\"7-협업을-위한-기본-workflow\"\u003e7. 협업을 위한 기본 Workflow\u003c/h3\u003e\n\u003ch4 id=\"1-github에서-프로젝트-생성-후-클론\"\u003e1) GitHub에서 프로젝트 생성 후 클론\u003c/h4\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003egit clone \u0026lt;저장소 URL\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003ecd\u003c/span\u003e 프로젝트 폴더\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"2-새로운-브랜치에서-개발-진행\"\u003e2) 새로운 브랜치에서 개발 진행\u003c/h4\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003egit checkout -b feature-branch\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"3-변경-사항-저장\"\u003e3) 변경 사항 저장\u003c/h4\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003egit add .\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003egit commit -m \u003cspan class=\"s2\"\u003e\u0026#34;기능 추가\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"4-github에-업로드\"\u003e4) GitHub에 업로드\u003c/h4\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003egit push origin feature-branch\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"5-메인-브랜치와-병합\"\u003e5) 메인 브랜치와 병합\u003c/h4\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003egit checkout main\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003egit merge feature-branch\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"6-최신-코드-유지\"\u003e6) 최신 코드 유지\u003c/h4\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003egit pull origin main\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003chr\u003e\n\u003ch2 id=\"미니-프로젝트-sa\"\u003e미니 프로젝트 S.A\u003c/h2\u003e\n\u003cp\u003e📅 기간: 2025.02.17 - 2025.02.21\u003cbr\u003e\n📝 프로젝트: 팀 \u0026amp; 팀원 소개 웹 페이지\u003cbr\u003e\n🎨 역할: 메인 페이지 및 팀원 정보 입력창 (HTML/CSS)\u003c/p\u003e","title":"Git"},{"content":"메모리 구조 Java 메모리는 크게 메서드 영역, 스택 영역, 힙 영역으로 나뉜다.\n메서드 영역 (Method Area) 클래스 정보를 보관하는 공간 프로그램을 실행하는 데 필요한 공통 데이터를 관리\n(클래스 정보, static 영역, 런타임 상수 풀 등) 프로그램 실행 중 변경되지 않는 데이터 저장 프로그램이 종료될 때까지 유지됨 스택 영역 (Stack Area) 실제 프로그램이 실행되는 영역 메서드가 호출될 때마다 새로운 스택 프레임이 스택 영역에 생성됨 각 프레임은 지역 변수, 매개변수, 연산 결과, 메서드 호출 정보 저장함 메서드가 종료되면 해당 스택 프레임이 제거됨 LIFO(Last In First Out) 방식으로 동작함 힙 영역 (Heap Area) 객체(인스턴스)가 생성되는 영역 new 키워드로 생성된 객체와 배열이 저장됨 객체가 생성될 때마다 메모리 크기만큼 힙에서 메모리가 동적으로 할당됨 가비지 컬렉터에 의해 관리됨 참조되는 객체는 유지되며, 참조되지 않는 객체는 제거됨 static static 변수와 static 메서드와 같은 클래스 레벨의 정보를 저장하는 공간.\nstatic 키워드가 붙은 변수나 메서드는 인스턴스화된 객체와 관계없이 클래스 자체에 속하며, 메서드 영역의 static 영역에 저장됨\nstatic 변수 (클래스 변수) 클래스가 로드될 때 한 번만 생성되며, 모든 객체가 공유 객체마다 개별적으로 존재하는 것이 아니라 클래스 단위로 하나만 존재 클래스명.변수명 형식으로 접근 가능 객체 없이 사용 가능 package static1; public class Data3 { public String name; public static int count; public Data3(String name) { this.name = name; count++; } } package static1; public class DataCountMain3 { public static void main(String[] args) { Data3 data1 = new Data3(\u0026#34;A\u0026#34;); System.out.println(\u0026#34;A count = \u0026#34; + Data3.count); Data3 data2 = new Data3(\u0026#34;B\u0026#34;); System.out.println(\u0026#34;B count = \u0026#34; + Data3.count); Data3 data3 = new Data3(\u0026#34;C\u0026#34;); System.out.println(\u0026#34;C count = \u0026#34; + Data3.count); } } A count = 1\rB count = 2\rC count = 3 static 메서드 (클래스 메서드) 객체를 생성하지 않고 클래스명으로 직접 호출 가능 static 변수만 직접 접근 가능 (인스턴스 변수 사용 불가) this 및 super 키워드를 사용할 수 없음 (객체에 의존하지 않음) package static2; public class DecoData { private int instanceValue; private static int staticValue; public static void staticCall() { // instanceValue++; 인스턴스 변수 접근, 컴파일 오류 // instanceMethod(); 인스턴스 메서드 접근, 컴파일 오류 staticValue++; // 정적 변수 접근 staticMethod(); // 정적 메서드 접근 } public void instanceCall() { instanceValue++; // 인스턴스 변수 접근 instanceMethod(); // 인스턴스 메서드 접근 staticValue++; // 정적 변수 접근 staticMethod(); // 정적 메서드 접근 } private void instanceMethod() { System.out.println(\u0026#34;instanceValue = \u0026#34; + instanceValue); } private static void staticMethod() { System.out.println(\u0026#34;staticValue = \u0026#34; + staticValue); } } package static2; public class DecoDataMain { public static void main(String[] args) { System.out.println(\u0026#34;1. 정적 호출\u0026#34;); DecoData.staticCall(); System.out.println(\u0026#34;2. 인스턴스 호출1\u0026#34;); DecoData data1 = new DecoData(); data1.instanceCall(); System.out.println(\u0026#34;3. 인스턴스 호출2\u0026#34;); DecoData data2 = new DecoData(); data2.instanceCall(); } } 1. 정적 호출\rstaticValue = 1\r2. 인스턴스 호출1\rinstanceValue = 1\rstaticValue = 2\r3. 인스턴스 호출2\rinstanceValue = 1\rstaticValue = 3 ","permalink":"http://localhost:1313/record/2025-02-14/","summary":"\u003ch2 id=\"메모리-구조\"\u003e메모리 구조\u003c/h2\u003e\n\u003cp\u003eJava 메모리는 크게 \u003cstrong\u003e메서드 영역, 스택 영역, 힙 영역\u003c/strong\u003e으로 나뉜다.\u003c/p\u003e\n\u003cbr\u003e\r\n\u003ch3 id=\"메서드-영역-method-area\"\u003e메서드 영역 (Method Area)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003e클래스 정보를 보관\u003c/strong\u003e하는 공간\u003c/li\u003e\n\u003cli\u003e프로그램을 실행하는 데 필요한 공통 데이터를 관리\u003cbr\u003e\n(클래스 정보, static 영역, 런타임 상수 풀 등)\u003c/li\u003e\n\u003cli\u003e프로그램 실행 중 변경되지 않는 데이터 저장\u003c/li\u003e\n\u003cli\u003e프로그램이 종료될 때까지 유지됨\u003c/li\u003e\n\u003c/ul\u003e\n\u003cbr\u003e\r\n\u003ch3 id=\"스택-영역-stack-area\"\u003e스택 영역 (Stack Area)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e실제 프로그램이 실행되는 영역\u003c/li\u003e\n\u003cli\u003e메서드가 호출될 때마다 새로운 스택 프레임이 스택 영역에 생성됨\u003c/li\u003e\n\u003cli\u003e각 프레임은 \u003cstrong\u003e지역 변수, 매개변수, 연산 결과, 메서드 호출 정보\u003c/strong\u003e 저장함\u003c/li\u003e\n\u003cli\u003e메서드가 종료되면 해당 스택 프레임이 제거됨\u003c/li\u003e\n\u003cli\u003eLIFO(Last In First Out) 방식으로 동작함\u003c/li\u003e\n\u003c/ul\u003e\n\u003cbr\u003e\r\n\u003ch3 id=\"힙-영역-heap-area\"\u003e힙 영역 (Heap Area)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e객체(인스턴스)가 생성되는 영역\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003enew\u003c/code\u003e 키워드로 생성된 객체와 배열이 저장됨\u003c/li\u003e\n\u003cli\u003e객체가 생성될 때마다 메모리 크기만큼 힙에서 메모리가 동적으로 할당됨\u003c/li\u003e\n\u003cli\u003e가비지 컬렉터에 의해 관리됨\u003c/li\u003e\n\u003cli\u003e참조되는 객체는 유지되며, 참조되지 않는 객체는 제거됨\u003c/li\u003e\n\u003c/ul\u003e\n\u003cbr\u003e\r\n\u003ch2 id=\"static\"\u003e\u003ccode\u003estatic\u003c/code\u003e\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003e\u003ccode\u003estatic\u003c/code\u003e 변수와 \u003ccode\u003estatic\u003c/code\u003e 메서드와 같은 클래스 레벨의 정보를 저장하는 공간.\u003c/strong\u003e\u003cbr\u003e\n\u003ccode\u003estatic\u003c/code\u003e 키워드가 붙은 변수나 메서드는 인스턴스화된 객체와 관계없이 클래스 자체에 속하며, \u003cstrong\u003e메서드 영역의 \u003ccode\u003estatic\u003c/code\u003e 영역에 저장됨\u003c/strong\u003e\u003c/p\u003e","title":"메모리 구조와 static"},{"content":"private 클래스 내부에서만 접근 가능\n클래스 내부의 속성과 기능을 숨기고, 직접적인 접근을 제한. 같은 클래스 내부에서만 접근 가능하며, 상속 관계에서도 자식 클래스가 접근할 수 없음.\ndefault 같은 패키지 내에서만 접근 가능, 명시적 키워드 없음\n패키지 내부에서만 사용할 기능을 숨기고, 외부 패키지에서는 접근을 막음. 접근 제한자를 명시하지 않으면 default가 적용되며, 같은 패키지에 있는 클래스만 접근 가능함.\nprotected 같은 패키지 + 상속 관계에서 접근 가능\n패키지 내에서는 자유롭게 접근할 수 있도록 하고, 다른 패키지에서는 상속받은 클래스만 접근 가능하도록 제한. 같은 패키지에서는 default와 동일하지만, 다른 패키지에서도 상속 관계라면 접근 가능.\npublic 어디서든 접근 가능\n어떤 클래스에서든 사용할 수 있도록 완전히 공개. 어디에서든 접근 가능하며, 패키지나 상속 관계와 무관하게 사용 가능.\n접근 제어자 접근 가능 범위 상속 관계에서의 접근 private 같은 클래스 내부에서만 가능 ❌ (자식 클래스도 접근 불가) default 같은 패키지 내에서만 가능 ❌ (패키지가 다르면 접근 불가) protected 같은 패키지 + 상속받은 클래스에서만 가능 ✅ (다른 패키지라도 상속받으면 접근 가능) public 어디서든 접근 가능 ✅ (제한 없음) package access.a; public class AccessData { public int publicField; int defaultField; private int privateField; public void publicMethod() { System.out.println(\u0026#34;publicMethod 호출 \u0026#34; + publicField); } void defaultMethod() { System.out.println(\u0026#34;defaultMethod 호출 \u0026#34; + defaultField); } private void privateMethod() { System.out.println(\u0026#34;privateMethod 호출 \u0026#34; + privateField); } public void innerAccess() { System.out.println(\u0026#34;내부 호출\u0026#34;); publicField = 100; defaultField = 200; privateField = 300; publicMethod(); defaultMethod(); privateMethod(); } } package access.a; // 동일 패키지 public class AccessInnerMain { public static void main(String[] args) { AccessData data = new AccessData(); // public 호출 가능 data.publicField = 1; data.publicMethod(); // 같은 패키지 default 호출 가능 data.defaultField = 2; data.defaultMethod(); // private 호출 불가 // data.privateField = 3; // data.privateMethod(); data.innerAccess(); } } package access.b; // 다른 패키지 import access.a.AccessData; public class AccessOuterMain { public static void main(String[] args) { AccessData data = new AccessData(); // public 호출 가능 data.publicField = 1; data.publicMethod(); // 다른 패키지 default 호출 불가 // data.defaultField = 2; // data.defaultMethod(); // private 호출 불가 // data.privateField = 3; // data.privateMethod(); data.innerAccess(); } } 클래스 레벨 클래스 레벨의 접근 제어자는 public, default만 사용할 수 있다.\npublic 클래스는 반드시 파일명과 이름이 같아야 한다.\npackage access.a; public class PublicClass { public static void main(String[] args) { PublicClass publicClass = new PublicClass(); DefaultClass1 class1 = new DefaultClass1(); DefaultClass2 class2 = new DefaultClass2(); } } class DefaultClass1 { } class DefaultClass2 { } package access.a; // 동일 패키지 public class PublicClassInnerMain { public static void main(String[] args) { PublicClass publicClass = new PublicClass(); DefaultClass1 class1 = new DefaultClass1(); DefaultClass2 class2 = new DefaultClass2(); } } package access.b; // 다른 패키지 import access.a.PublicClass; public class PublicClassOuterMain { public static void main(String[] args) { PublicClass publicClass = new PublicClass(); // 다른 패키지 접근 불가 // DefaultClass1 class1 = new DefaultClass1(); // DefaultClass2 class2 = new DefaultClass2(); } } 캡슐화 ✅ 데이터를 숨기고(private) 외부에서 직접 접근하지 못하도록 제한한다.\n✅ 객체의 내부 기능을 숨기고(private, protected) 꼭 필요한 기능만 공개한다.\n","permalink":"http://localhost:1313/record/2025-02-12/","summary":"\u003ch2 id=\"private\"\u003eprivate\u003c/h2\u003e\n\u003cp\u003e클래스 내부에서만 접근 가능\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e클래스 내부의 속성과 기능을 숨기고, 직접적인 접근을 제한. 같은 클래스 내부에서만 접근 가능하며, 상속 관계에서도 자식 클래스가 접근할 수 없음.\u003c/p\u003e\u003c/blockquote\u003e\n\u003ch2 id=\"default\"\u003edefault\u003c/h2\u003e\n\u003cp\u003e같은 패키지 내에서만 접근 가능, 명시적 키워드 없음\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e패키지 내부에서만 사용할 기능을 숨기고, 외부 패키지에서는 접근을 막음. 접근 제한자를 명시하지 않으면 \u003ccode\u003edefault\u003c/code\u003e가 적용되며, 같은 패키지에 있는 클래스만 접근 가능함.\u003c/p\u003e\u003c/blockquote\u003e\n\u003ch2 id=\"protected\"\u003eprotected\u003c/h2\u003e\n\u003cp\u003e같은 패키지 + 상속 관계에서 접근 가능\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e패키지 내에서는 자유롭게 접근할 수 있도록 하고, 다른 패키지에서는 상속받은 클래스만 접근 가능하도록 제한. 같은 패키지에서는 \u003ccode\u003edefault\u003c/code\u003e와 동일하지만, 다른 패키지에서도 상속 관계라면 접근 가능.\u003c/p\u003e","title":"접근 제어자"},{"content":"패키지 클래스를 논리적으로 그룹화하는 방법.\n패키지 사용 클래스 파일 맨 위에 package 키워드를 사용해 선언\npackage pack; public class Data { public Data() { System.out.println(\u0026#34;패키지 pack Data 생성\u0026#34;); } } 같은 패키지 내 클래스 접근\npackage pack; public class PackageMain1 { public static void main(String[] args) { Data data = new Data(); } } import 다른 패키지의 클래스를 사용하기 위한 키워드.\n패키지 내 다른 클래스나 외부 라이브러리의 클래스를 참조할 수 있음.\npackage pack.a; public class User { public User() { System.out.println(\u0026#34;패키지 pack.a 회원 생성\u0026#34;); } } package pack; import pack.a.User; public class PackageMain2 { public static void main(String[] args) { Data data = new Data(); User user = new User(); } } 클래스 이름 중복 같은 이름의 클래스가 서로 다른 패키지에 존재하는 경우,\n둘 중 하나에 패키지명.클래스명을 명시적으로 사용하여 명확히 구분함.\npackage pack.b; public class User { public User() { System.out.println(\u0026#34;패키지 pack.b 회원 생성\u0026#34;); } } package pack; import pack.a.User; public class PackageMain3 { public static void main(String[] args) { User userA = new User(); pack.b.User userB = new pack.b.User(); } } 패키지 규칙 [필수] 패키지의 이름과 위치는 폴더(디렉토리) 위치와 같아야 한다.\n[관례] 패키지 이름은 모두 소문자를 사용한다.\n[관례] 패키지 이름의 앞 부분에는 회사의 도메인 이름을 거꾸로 사용한다.\n","permalink":"http://localhost:1313/record/2025-02-11/","summary":"\u003ch2 id=\"패키지\"\u003e패키지\u003c/h2\u003e\n\u003cp\u003e클래스를 논리적으로 그룹화하는 방법.\u003c/p\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"https://velog.velcdn.com/images/ezro/post/e824c372-3653-4b2d-ae8e-51e3452a3a73/image.png\"\u003e\u003c/p\u003e\n\u003ch3 id=\"패키지-사용\"\u003e패키지 사용\u003c/h3\u003e\n\u003cp\u003e클래스 파일 맨 위에 package 키워드를 사용해 선언\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"nn\"\u003epack\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eData\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"nf\"\u003eData\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"n\"\u003eSystem\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eout\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eprintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;패키지 pack Data 생성\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e같은 패키지 내 클래스 접근\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"nn\"\u003epack\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003ePackageMain1\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kd\"\u003estatic\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e[]\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eargs\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"n\"\u003eData\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003edata\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003enew\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eData\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cbr\u003e\r\n\u003ch3 id=\"import\"\u003eimport\u003c/h3\u003e\n\u003cp\u003e다른 패키지의 클래스를 사용하기 위한 키워드.\u003cbr\u003e\n패키지 내 다른 클래스나 외부 라이브러리의 클래스를 참조할 수 있음.\u003c/p\u003e","title":"패키지"},{"content":"생성자 객체가 생성될 때 자동으로 호출되는 메서드로, 객체를 초기화하는 데 사용됨. 생성자는 클래스와 동일한 이름을 가지며, 반환 타입이 없음.\n기본 생성자 (Default Constructor) 클래스에 명시적으로 생성자가 없으면, Java가 자동으로 기본 생성자를 제공함. 기본 생성자는 매개변수가 없으며, 객체의 필드를 기본값으로 초기화 됨.\npublic class Book { String title; String author; int page; } Book book = new Book(); 매개변수화된 생성자 (Parameterized Constructor) 생성자를 통해 객체 생성 시 값을 전달받아 초기화할 수 있음. 클래스에 명시적으로 생성자가 하나라도 있으면, 기본 생성자는 제공되지 않음.\npublic class Book { String title; String author; int page; Book(String title, String author, int page) { this.title = title; this.author = author; this.page = page; } } Book book1 = new Book(); // 오류 Book book2 = new Book(\u0026#34;제목\u0026#34;, \u0026#34;저자\u0026#34;, 1); this 객체의 현재 인스턴스를 참조하는 키워드. 생성자에서 다른 생성자를 호출할 때 사용함. → 생성자 오버로딩\npublic class Book { String title; String author; int page; Book() { this(\u0026#34;\u0026#34;, \u0026#34;\u0026#34;, 0); } Book(String title, String author) { this(title, author, 0); } Book(String title, String author, int page) { this.title = title; this.author = author; this.page = page; } Book book1 = new Book(); Book book2 = new Book(\u0026#34;제목1\u0026#34;, \u0026#34;저자1\u0026#34;); Book book3 = new Book(\u0026#34;제목2\u0026#34;, \u0026#34;저자2\u0026#34;, 2); ","permalink":"http://localhost:1313/record/2025-02-10/","summary":"\u003ch2 id=\"생성자\"\u003e생성자\u003c/h2\u003e\n\u003cp\u003e객체가 생성될 때 자동으로 호출되는 메서드로, 객체를 초기화하는 데 사용됨.\n생성자는 클래스와 동일한 이름을 가지며, 반환 타입이 없음.\u003c/p\u003e\n\u003cbr\u003e\r\n\u003ch3 id=\"기본-생성자-default-constructor\"\u003e기본 생성자 (Default Constructor)\u003c/h3\u003e\n\u003cp\u003e클래스에 명시적으로 생성자가 없으면, Java가 자동으로 기본 생성자를 제공함.\n기본 생성자는 매개변수가 없으며, 객체의 필드를 기본값으로 초기화 됨.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eBook\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003etitle\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eauthor\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003epage\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eBook\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003ebook\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003enew\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eBook\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cbr\u003e\r\n\u003ch3 id=\"매개변수화된-생성자-parameterized-constructor\"\u003e매개변수화된 생성자 (Parameterized Constructor)\u003c/h3\u003e\n\u003cp\u003e생성자를 통해 객체 생성 시 값을 전달받아 초기화할 수 있음.\n클래스에 명시적으로 생성자가 하나라도 있으면, 기본 생성자는 제공되지 않음.\u003c/p\u003e","title":"생성자"},{"content":"절차 지향 프로그래밍 프로그램의 흐름을 순차적으로 따르며 처리하는 방식. 즉, 어떻게 를 중심으로 프로그래밍 함.\npublic class MusicPlayerData { int volume = 0; boolean isOn = false; } public static void main(String[] args) { MusicPlayerData data = new MusicPlayerData(); // 음악 플레이어 켜기 on(data); // 볼륨 증가 volumeUp(data); // 음악 플레이어 끄기 off(data); } static void on(MusicPlayerData data) { data.isOn = true; System.out.println(\u0026#34;음악 플레이어를 시작합니다.\u0026#34;); } static void off(MusicPlayerData data) { data.isOn = false; System.out.println(\u0026#34;음악 플레이어를 종료합니다.\u0026#34;); } static void volumeUp(MusicPlayerData data) { data.volume++; System.out.println(\u0026#34;음악 플레이어 볼륨: \u0026#34; + data.volume); } 데이터와 기능이 분리되어 있으며, 주로 함수로 작업을 처리함.\n객체 지향 프로그래밍 실제 세계의 사물이나 사건을 객체로 보고, 이러한 객체들 간의 상호작용을 중심으로 프로그래밍하는 방식이다. 즉, 무엇을 중심으로 프로그래밍 한다.\npublic class MusicPlayer { int volume = 0; boolean isOn = false; void on() { isOn = true; System.out.println(\u0026#34;음악 플레이어를 시작합니다.\u0026#34;); } void off() { isOn = false; System.out.println(\u0026#34;음악 플레이어를 종료합니다.\u0026#34;); } void volumeUp() { volume++; System.out.println(\u0026#34;음악 플레이어 볼륨: \u0026#34; + volume); } void volumeDown() { volume--; System.out.println(\u0026#34;음악 플레이어 볼륨: \u0026#34; + volume); } } public static void main(String[] args) { MusicPlayer player = new MusicPlayer(); // 음악 플레이어 켜기 player.on(); // 볼륨 증가 player.volumeUp(); // 볼륨 감소 player.volumeDown(); // 음악 플레이어 끄기 player.off(); } 캡슐화를 통해 데이터와 기능을 객체 내부에 묶어 객체 내에서만 데이터를 처리하도록 하고, 외부에서의 직접적인 접근을 제한함.\n절차 지향 vs 객체 지향 객체 지향 프로그래밍과 절차 지향 프로그래밍은 서로 대치되는 개념이 아니라, 각기 다른 초점을 가진 두 가지 접근 방식임.\n절차 지향 프로그래밍은 데이터와 해당 데이터에 대한 처리 방식이 분리되어 있으며, 프로그램의 실행 순서와 흐름에 초점을 맞춤.\n반면, 객체 지향 프로그래밍에서는 데이터와 그 데이터를 처리하는 메서드가 하나의 객체로 묶여 있으며, 객체 간의 설계와 관계를 중시함.\n","permalink":"http://localhost:1313/record/2025-02-07/","summary":"\u003ch2 id=\"절차-지향-프로그래밍\"\u003e절차 지향 프로그래밍\u003c/h2\u003e\n\u003cp\u003e프로그램의 흐름을 순차적으로 따르며 처리하는 방식. 즉, \u003ccode\u003e어떻게\u003c/code\u003e 를 중심으로 프로그래밍 함.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eMusicPlayerData\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003evolume\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"kt\"\u003eboolean\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eisOn\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kd\"\u003estatic\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e[]\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eargs\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"n\"\u003eMusicPlayerData\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003edata\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003enew\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eMusicPlayerData\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"c1\"\u003e// 음악 플레이어 켜기\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"n\"\u003eon\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"c1\"\u003e// 볼륨 증가\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"n\"\u003evolumeUp\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"c1\"\u003e// 음악 플레이어 끄기\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"n\"\u003eoff\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"kd\"\u003estatic\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"nf\"\u003eon\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eMusicPlayerData\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"n\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eisOn\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"n\"\u003eSystem\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eout\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eprintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;음악 플레이어를 시작합니다.\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"kd\"\u003estatic\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"nf\"\u003eoff\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eMusicPlayerData\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"n\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eisOn\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"n\"\u003eSystem\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eout\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eprintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;음악 플레이어를 종료합니다.\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"kd\"\u003estatic\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"nf\"\u003evolumeUp\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eMusicPlayerData\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"n\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003evolume\u003c/span\u003e\u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"n\"\u003eSystem\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eout\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eprintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;음악 플레이어 볼륨: \u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003evolume\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e데이터와 기능이 분리되어 있으며, 주로 함수로 작업을 처리함.\u003c/p\u003e","title":"객체 지향 프로그래밍"},{"content":"변수 대입 기본형 변수 대입 기본형 변수는 값을 복사하여 저장함.\nint a = 10; int b = a; // a: 10, b: 10 a = 20; // a: 20, b: 10 b = 30; // a: 20, b: 30 b에 a의 값을 복사해서 저장하므로, b를 변경해도 a에 영향을 주지 않음.\n참조형 변수 대입 참조형 변수는 객체의 메모리 주소를 저장함 → 주소(참조)가 복사됨.\npublic class Data { int value; } Data dataA = new Data(); dataA.value = 10; Data dataB = dataA; // dataA.value: 10, dataB.value: 10 dataA.value = 20; // dataA.value: 20, dataB.value: 20 dataB.value = 30; // dataA.value: 30, dataB.value: 30 같은 객체를 가리키므로 하나를 변경하면 다른 하나도 영향을 받음.\n메서드 호출 기본형 매개변수 값을 복사해서 전달함. 원본 값은 변경되지 않음.\nint a = 10; changePrimitive(a); // a: 10 void changePrimitive(int x) { x = 20; } 참조형 매개변수 참조가 복사되므로 메서드 내부에서 객체를 변경하면 원본도 영향을 받음.\nData dataA = new Data(); dataA.value = 10; changeReference(dataA); // dataA.value: 20 void changeReference(Data dataX) { dataX.value = 20; } ","permalink":"http://localhost:1313/record/2025-02-06/","summary":"\u003ch2 id=\"변수-대입\"\u003e변수 대입\u003c/h2\u003e\n\u003cbr\u003e\r\n\u003ch3 id=\"기본형-변수-대입\"\u003e기본형 변수 대입\u003c/h3\u003e\n\u003cp\u003e기본형 변수는 값을 복사하여 저장함.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003ea\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003e10\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eb\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"c1\"\u003e// a: 10, b: 10\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"n\"\u003ea\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003e20\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"c1\"\u003e// a: 20, b: 10\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"n\"\u003eb\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003e30\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"c1\"\u003e// a: 20, b: 30\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eb에 a의 값을 복사해서 저장하므로, b를 변경해도 a에 영향을 주지 않음.\u003c/p\u003e\n\u003cbr\u003e\r\n\u003ch3 id=\"참조형-변수-대입\"\u003e참조형 변수 대입\u003c/h3\u003e\n\u003cp\u003e참조형 변수는 객체의 메모리 주소를 저장함 → 주소(참조)가 복사됨.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eData\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003evalue\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eData\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003edataA\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003enew\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eData\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"n\"\u003edataA\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003evalue\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003e10\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"n\"\u003eData\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003edataB\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003edataA\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"c1\"\u003e// dataA.value: 10, dataB.value: 10\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"n\"\u003edataA\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003evalue\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003e20\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"c1\"\u003e// dataA.value: 20, dataB.value: 20\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"n\"\u003edataB\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003evalue\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003e30\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"c1\"\u003e// dataA.value: 30, dataB.value: 30\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e같은 객체를 가리키므로 하나를 변경하면 다른 하나도 영향을 받음.\u003c/p\u003e","title":"기본형과 참조형"},{"content":"클래스 객체를 생성하기 위한 설계도 또는 틀, 사용자 정의 타입 역할을 함.\npublic class Student { // 멤버 변수: 클래스 내에서 선언된 변수, 객체의 속성을 나타냄 String name; int age; int grade; } 객체와 인스턴스 객체: 클래스에서 정의한 속성과 기능을 가진 실체 인스턴스: 특정 클래스로부터 생성된 객체, 어떤 클래스에 속하는지 강조할 때 사용\n→ 객체와 특정 클래스의 관계를 명확히 할 때 \u0026ldquo;인스턴스\u0026quot;라는 용어를 사용하지만, 본질적으로 같은 개념이므로 보통 구분 없이 사용됨\n// 인스턴스 생성 // 참조 변수: 클래스 타입으로 선언된 변수, 객체의 참조값을 저장 Student student1 = new Student(); // 객체의 속성 값 설정 student1.name = \u0026#34;홍길동\u0026#34;; student1.age = 19; student1.grade = 90; 객체 배열 객체의 참조값을 저장하는 배열 → 객체 자체가 아니라 객체를 가리키는 참조 변수들의 배열\n// 객체 배열 생성 (각 요소는 null 상태) Student[] students = new Student[2]; // 객체 할당 (기존 객체 사용) students[0] = student1; // 객체 직접 생성 후 할당 students[1] = new Student(); students[1].name = \u0026#34;김갑돌\u0026#34;; students[1].age = 20; students[1].grade = 85; ","permalink":"http://localhost:1313/record/2025-02-04/","summary":"\u003ch2 id=\"클래스\"\u003e클래스\u003c/h2\u003e\n\u003cp\u003e객체를 생성하기 위한 설계도 또는 틀, 사용자 정의 타입 역할을 함.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eStudent\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\t\u003c/span\u003e\u003cspan class=\"c1\"\u003e// 멤버 변수: 클래스 내에서 선언된 변수, 객체의 속성을 나타냄\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eage\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003egrade\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cbr\u003e\r\n\u003ch2 id=\"객체와-인스턴스\"\u003e객체와 인스턴스\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003e객체\u003c/strong\u003e: 클래스에서 정의한 속성과 기능을 가진 실체\n\u003cstrong\u003e인스턴스\u003c/strong\u003e: 특정 클래스로부터 생성된 객체, 어떤 클래스에 속하는지 강조할 때 사용\u003c/p\u003e\n\u003cp\u003e→ 객체와 특정 클래스의 관계를 명확히 할 때 \u0026ldquo;인스턴스\u0026quot;라는 용어를 사용하지만, 본질적으로 같은 개념이므로 보통 구분 없이 사용됨\u003c/p\u003e","title":"클래스와 객체"},{"content":" TASKS\n✅ 달리기반 Java 보너스 문제\n+\n☑️ 자바의 정석 강의\nJava 보너스 문제: 가위 바위 보 첫 번째 코드 import java.util.HashMap; import java.util.Map; import java.util.Random; import java.util.Scanner; public class RockPaperScissors { public static void main(String[] args) { Scanner scanner = new Scanner(System.in); Random random = new Random(); Map\u0026lt;Integer, String\u0026gt; prize = new HashMap\u0026lt;\u0026gt;(); prize.put(1, \u0026#34;10,000원\u0026#34;); prize.put(2, \u0026#34;20,000원\u0026#34;); prize.put(3, \u0026#34;30,000원\u0026#34;); prize.put(4, \u0026#34;50,000원\u0026#34;); prize.put(5, \u0026#34;100,000원\u0026#34;); String[] rps = {\u0026#34;가위\u0026#34;, \u0026#34;바위\u0026#34;, \u0026#34;보\u0026#34;}; int gameCount = 0; int winCount = 0; boolean playing = true; System.out.println(\u0026#34;*********** GAME START ***********\u0026#34;); while (playing) { System.out.println(\u0026#34;------------- GAME \u0026#34; + (gameCount + 1) + \u0026#34; -------------\u0026#34;); System.out.print(\u0026#34;가위 바위 보! \u0026#34;); String user = scanner.nextLine(); String pc = rps[random.nextInt(rps.length)]; System.out.print(\u0026#34;[당신: \u0026#34; + user + \u0026#34;, 상대: \u0026#34; + pc + \u0026#34;] \u0026#34;); switch (user) { case \u0026#34;가위\u0026#34;: if (pc.equals(\u0026#34;바위\u0026#34;)) { System.out.println(\u0026#34;당신이 졌습니다!\u0026#34;); gameCount++; break; } else if (pc.equals(\u0026#34;보\u0026#34;)) { System.out.println(\u0026#34;당신이 이겼습니다!\u0026#34;); gameCount++; winCount++; break; } else { System.out.println(\u0026#34;무승부입니다!\u0026#34;); gameCount++; break; } case \u0026#34;바위\u0026#34;: if (pc.equals(\u0026#34;보\u0026#34;)) { System.out.println(\u0026#34;당신이 졌습니다!\u0026#34;); gameCount++; break; } else if (pc.equals(\u0026#34;가위\u0026#34;)) { System.out.println(\u0026#34;당신이 이겼습니다!\u0026#34;); gameCount++; winCount++; break; } else { System.out.println(\u0026#34;무승부입니다!\u0026#34;); gameCount++; break; } case \u0026#34;보\u0026#34;: if (pc.equals(\u0026#34;바위\u0026#34;)) { System.out.println(\u0026#34;당신이 이겼습니다!\u0026#34;); gameCount++; break; } else if (pc.equals(\u0026#34;가위\u0026#34;)) { System.out.println(\u0026#34;당신이 졌습니다!\u0026#34;); gameCount++; winCount++; break; } else { System.out.println(\u0026#34;무승부입니다!\u0026#34;); gameCount++; break; } default: System.out.println(\u0026#34;잘못된 입력입니다!\u0026#34;); break; } if (gameCount == 5) { System.out.println(\u0026#34;----------------------------------\u0026#34;); if (winCount \u0026gt; 0) { System.out.println(\u0026#34;총 \u0026#34; + winCount + \u0026#34;회 승리했습니다. 상품: \u0026#34; + prize.get(winCount)); } else { System.out.println(\u0026#34;상품을 획득하지 못했습니다.\u0026#34;); } System.out.println(\u0026#34;************ GAME END ************\u0026#34;); playing = false; break; } } } } 개선 코드 import java.util.HashMap; import java.util.Map; import java.util.Random; import java.util.Scanner; public class RpsRef { public static void main(String[] args) { Scanner scanner = new Scanner(System.in); Random random = new Random(); Map\u0026lt;Integer, String\u0026gt; prize = new HashMap\u0026lt;\u0026gt;(); prize.put(1, \u0026#34;10,000원\u0026#34;); prize.put(2, \u0026#34;20,000원\u0026#34;); prize.put(3, \u0026#34;30,000원\u0026#34;); prize.put(4, \u0026#34;50,000원\u0026#34;); prize.put(5, \u0026#34;100,000원\u0026#34;); String[] rps = {\u0026#34;가위\u0026#34;, \u0026#34;바위\u0026#34;, \u0026#34;보\u0026#34;}; int gameCount = 0; int winCount = 0; System.out.println(\u0026#34;*********** GAME START ***********\u0026#34;); // 게임은 5회로 고정되어 있으므로 횟수 제한으로 변경 while (gameCount \u0026lt; 5) { System.out.println(\u0026#34;------------- GAME \u0026#34; + (gameCount + 1) + \u0026#34; -------------\u0026#34;); System.out.print(\u0026#34;가위 바위 보! \u0026#34;); String user = scanner.nextLine(); // 사용자 입력 값 검사 if (!checkInput(user, rps)) { System.out.println(\u0026#34;잘못된 입력입니다!\u0026#34;); continue; } String pc = rps[random.nextInt(rps.length)]; System.out.print(\u0026#34;[당신: \u0026#34; + user + \u0026#34;, 상대: \u0026#34; + pc + \u0026#34;] \u0026#34;); // 승패 판정: 중복 코드 제거 int result = getResult(user, pc); switch (result) { case 1: System.out.println(\u0026#34;당신이 이겼습니다!\u0026#34;); winCount++; break; case -1: System.out.println(\u0026#34;당신이 졌습니다!\u0026#34;); break; case 0: System.out.println(\u0026#34;무승부입니다!\u0026#34;); break; } gameCount++; if (gameCount == 5) { System.out.println(\u0026#34;----------------------------------\u0026#34;); if (winCount \u0026gt; 0) { System.out.println(\u0026#34;총 \u0026#34; + winCount + \u0026#34;회 승리했습니다. 상품: \u0026#34; + prize.get(winCount)); } else { System.out.println(\u0026#34;꽝! 상품을 획득하지 못했습니다.\u0026#34;); } System.out.println(\u0026#34;************ GAME END ************\u0026#34;); break; } } } // 사용자 입력 값 검사: 가위 바위 보가 아니면 false public static boolean checkInput(String input, String[] rps) { for (String check : rps) { if (check.equals(input)) { return true; } } return false; } // 승패 판정: 1 = 승리, -1 = 패배, 0 = 무승부 public static int getResult(String user, String pc) { if (user.equals(pc)) { return 0; // 무승부 } if ((user.equals(\u0026#34;가위\u0026#34;) \u0026amp;\u0026amp; pc.equals(\u0026#34;보\u0026#34;)) || (user.equals(\u0026#34;바위\u0026#34;) \u0026amp;\u0026amp; pc.equals(\u0026#34;가위\u0026#34;)) || (user.equals(\u0026#34;보\u0026#34;) \u0026amp;\u0026amp; pc.equals(\u0026#34;바위\u0026#34;))) { return 1; // 승리 } return -1; // 패배 } } ","permalink":"http://localhost:1313/record/2025-01-23/","summary":"\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eTASKS\u003c/strong\u003e\u003cbr\u003e\n✅ 달리기반 Java 보너스 문제\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e+\u003c/strong\u003e\u003cbr\u003e\n☑️ 자바의 정석 강의\u003c/p\u003e\u003c/blockquote\u003e\n\u003chr\u003e\n\u003ch2 id=\"java\"\u003eJava\u003c/h2\u003e\n\u003ch3 id=\"보너스-문제-가위-바위-보\"\u003e보너스 문제: 가위 바위 보\u003c/h3\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"https://velog.velcdn.com/images/ezro/post/03819eb6-b262-4cbe-8882-06c7ae3f042e/image.png\"\u003e\u003c/p\u003e\n\u003ch3 id=\"첫-번째-코드\"\u003e첫 번째 코드\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"nn\"\u003ejava.util.HashMap\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"nn\"\u003ejava.util.Map\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"nn\"\u003ejava.util.Random\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"nn\"\u003ejava.util.Scanner\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eRockPaperScissors\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kd\"\u003estatic\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e[]\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eargs\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"n\"\u003eScanner\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003escanner\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003enew\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eScanner\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eSystem\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ein\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"n\"\u003eRandom\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003erandom\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003enew\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eRandom\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"n\"\u003eMap\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eInteger\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eprize\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003enew\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eHashMap\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"n\"\u003eprize\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eput\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;10,000원\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"n\"\u003eprize\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eput\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;20,000원\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"n\"\u003eprize\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eput\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;30,000원\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"n\"\u003eprize\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eput\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;50,000원\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"n\"\u003eprize\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eput\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;100,000원\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e[]\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003erps\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;가위\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;바위\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;보\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e};\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003egameCount\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003ewinCount\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"kt\"\u003eboolean\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eplaying\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"n\"\u003eSystem\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eout\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eprintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;*********** GAME START ***********\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"k\"\u003ewhile\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eplaying\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"n\"\u003eSystem\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eout\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eprintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;------------- GAME \u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003egameCount\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34; -------------\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"n\"\u003eSystem\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eout\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;가위 바위 보! \u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003euser\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003escanner\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003enextLine\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003epc\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003erps\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003erandom\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003enextInt\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003erps\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003elength\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"n\"\u003eSystem\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eout\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;[당신: \u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003euser\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;, 상대: \u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003epc\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;] \u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"k\"\u003eswitch\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003euser\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e                \u003c/span\u003e\u003cspan class=\"k\"\u003ecase\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;가위\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e                    \u003c/span\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epc\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eequals\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;바위\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e                        \u003c/span\u003e\u003cspan class=\"n\"\u003eSystem\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eout\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eprintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;당신이 졌습니다!\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e                        \u003c/span\u003e\u003cspan class=\"n\"\u003egameCount\u003c/span\u003e\u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e                        \u003c/span\u003e\u003cspan class=\"k\"\u003ebreak\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e                    \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003eelse\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epc\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eequals\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;보\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e                        \u003c/span\u003e\u003cspan class=\"n\"\u003eSystem\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eout\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eprintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;당신이 이겼습니다!\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e                        \u003c/span\u003e\u003cspan class=\"n\"\u003egameCount\u003c/span\u003e\u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e                        \u003c/span\u003e\u003cspan class=\"n\"\u003ewinCount\u003c/span\u003e\u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e                        \u003c/span\u003e\u003cspan class=\"k\"\u003ebreak\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e                    \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003eelse\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e                        \u003c/span\u003e\u003cspan class=\"n\"\u003eSystem\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eout\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eprintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;무승부입니다!\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e                        \u003c/span\u003e\u003cspan class=\"n\"\u003egameCount\u003c/span\u003e\u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e                        \u003c/span\u003e\u003cspan class=\"k\"\u003ebreak\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e                    \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e                \u003c/span\u003e\u003cspan class=\"k\"\u003ecase\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;바위\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e                    \u003c/span\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epc\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eequals\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;보\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e                        \u003c/span\u003e\u003cspan class=\"n\"\u003eSystem\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eout\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eprintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;당신이 졌습니다!\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e                        \u003c/span\u003e\u003cspan class=\"n\"\u003egameCount\u003c/span\u003e\u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e                        \u003c/span\u003e\u003cspan class=\"k\"\u003ebreak\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e                    \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003eelse\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epc\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eequals\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;가위\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e                        \u003c/span\u003e\u003cspan class=\"n\"\u003eSystem\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eout\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eprintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;당신이 이겼습니다!\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e                        \u003c/span\u003e\u003cspan class=\"n\"\u003egameCount\u003c/span\u003e\u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e                        \u003c/span\u003e\u003cspan class=\"n\"\u003ewinCount\u003c/span\u003e\u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e                        \u003c/span\u003e\u003cspan class=\"k\"\u003ebreak\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e                    \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003eelse\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e                        \u003c/span\u003e\u003cspan class=\"n\"\u003eSystem\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eout\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eprintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;무승부입니다!\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e                        \u003c/span\u003e\u003cspan class=\"n\"\u003egameCount\u003c/span\u003e\u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e                        \u003c/span\u003e\u003cspan class=\"k\"\u003ebreak\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e                    \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e                \u003c/span\u003e\u003cspan class=\"k\"\u003ecase\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;보\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e                    \u003c/span\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epc\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eequals\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;바위\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e                        \u003c/span\u003e\u003cspan class=\"n\"\u003eSystem\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eout\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eprintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;당신이 이겼습니다!\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e                        \u003c/span\u003e\u003cspan class=\"n\"\u003egameCount\u003c/span\u003e\u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e                        \u003c/span\u003e\u003cspan class=\"k\"\u003ebreak\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e                    \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003eelse\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epc\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eequals\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;가위\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e                        \u003c/span\u003e\u003cspan class=\"n\"\u003eSystem\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eout\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eprintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;당신이 졌습니다!\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e                        \u003c/span\u003e\u003cspan class=\"n\"\u003egameCount\u003c/span\u003e\u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e                        \u003c/span\u003e\u003cspan class=\"n\"\u003ewinCount\u003c/span\u003e\u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e                        \u003c/span\u003e\u003cspan class=\"k\"\u003ebreak\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e                    \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003eelse\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e                        \u003c/span\u003e\u003cspan class=\"n\"\u003eSystem\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eout\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eprintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;무승부입니다!\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e                        \u003c/span\u003e\u003cspan class=\"n\"\u003egameCount\u003c/span\u003e\u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e                        \u003c/span\u003e\u003cspan class=\"k\"\u003ebreak\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e                    \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e                \u003c/span\u003e\u003cspan class=\"k\"\u003edefault\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e                    \u003c/span\u003e\u003cspan class=\"n\"\u003eSystem\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eout\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eprintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;잘못된 입력입니다!\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e                    \u003c/span\u003e\u003cspan class=\"k\"\u003ebreak\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003egameCount\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e==\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e                \u003c/span\u003e\u003cspan class=\"n\"\u003eSystem\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eout\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eprintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;----------------------------------\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e                \u003c/span\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ewinCount\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e                    \u003c/span\u003e\u003cspan class=\"n\"\u003eSystem\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eout\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eprintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;총 \u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003ewinCount\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;회 승리했습니다. 상품: \u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eprize\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eget\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ewinCount\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e                \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003eelse\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e                    \u003c/span\u003e\u003cspan class=\"n\"\u003eSystem\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eout\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eprintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;상품을 획득하지 못했습니다.\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e                \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e                \u003c/span\u003e\u003cspan class=\"n\"\u003eSystem\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eout\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eprintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;************ GAME END ************\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e                \u003c/span\u003e\u003cspan class=\"n\"\u003eplaying\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e                \u003c/span\u003e\u003cspan class=\"k\"\u003ebreak\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"개선-코드\"\u003e개선 코드\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"nn\"\u003ejava.util.HashMap\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"nn\"\u003ejava.util.Map\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"nn\"\u003ejava.util.Random\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"nn\"\u003ejava.util.Scanner\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eRpsRef\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kd\"\u003estatic\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e[]\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eargs\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"n\"\u003eScanner\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003escanner\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003enew\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eScanner\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eSystem\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ein\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"n\"\u003eRandom\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003erandom\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003enew\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eRandom\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"n\"\u003eMap\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eInteger\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eprize\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003enew\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eHashMap\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"n\"\u003eprize\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eput\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;10,000원\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"n\"\u003eprize\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eput\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;20,000원\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"n\"\u003eprize\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eput\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;30,000원\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"n\"\u003eprize\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eput\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;50,000원\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"n\"\u003eprize\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eput\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;100,000원\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e[]\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003erps\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;가위\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;바위\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;보\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e};\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003egameCount\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003ewinCount\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"n\"\u003eSystem\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eout\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eprintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;*********** GAME START ***********\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"c1\"\u003e// 게임은 5회로 고정되어 있으므로 횟수 제한으로 변경\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"k\"\u003ewhile\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003egameCount\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"n\"\u003eSystem\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eout\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eprintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;------------- GAME \u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003egameCount\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34; -------------\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"n\"\u003eSystem\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eout\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;가위 바위 보! \u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003euser\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003escanner\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003enextLine\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"c1\"\u003e// 사용자 입력 값 검사\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"n\"\u003echeckInput\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003euser\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003erps\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e                \u003c/span\u003e\u003cspan class=\"n\"\u003eSystem\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eout\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eprintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;잘못된 입력입니다!\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e                \u003c/span\u003e\u003cspan class=\"k\"\u003econtinue\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003epc\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003erps\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003erandom\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003enextInt\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003erps\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003elength\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"n\"\u003eSystem\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eout\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;[당신: \u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003euser\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;, 상대: \u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003epc\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;] \u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"c1\"\u003e// 승패 판정: 중복 코드 제거\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eresult\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003egetResult\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003euser\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003epc\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e            \n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"k\"\u003eswitch\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eresult\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e                \u003c/span\u003e\u003cspan class=\"k\"\u003ecase\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e                    \u003c/span\u003e\u003cspan class=\"n\"\u003eSystem\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eout\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eprintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;당신이 이겼습니다!\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e                    \u003c/span\u003e\u003cspan class=\"n\"\u003ewinCount\u003c/span\u003e\u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e                    \u003c/span\u003e\u003cspan class=\"k\"\u003ebreak\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e                \u003c/span\u003e\u003cspan class=\"k\"\u003ecase\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e                    \u003c/span\u003e\u003cspan class=\"n\"\u003eSystem\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eout\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eprintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;당신이 졌습니다!\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e                    \u003c/span\u003e\u003cspan class=\"k\"\u003ebreak\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e                \u003c/span\u003e\u003cspan class=\"k\"\u003ecase\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e                    \u003c/span\u003e\u003cspan class=\"n\"\u003eSystem\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eout\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eprintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;무승부입니다!\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e                    \u003c/span\u003e\u003cspan class=\"k\"\u003ebreak\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e            \n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"n\"\u003egameCount\u003c/span\u003e\u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003egameCount\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e==\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e                \u003c/span\u003e\u003cspan class=\"n\"\u003eSystem\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eout\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eprintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;----------------------------------\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e                \u003c/span\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ewinCount\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e                    \u003c/span\u003e\u003cspan class=\"n\"\u003eSystem\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eout\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eprintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;총 \u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003ewinCount\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;회 승리했습니다. 상품: \u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eprize\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eget\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ewinCount\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e                \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003eelse\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e                    \u003c/span\u003e\u003cspan class=\"n\"\u003eSystem\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eout\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eprintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;꽝! 상품을 획득하지 못했습니다.\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e                \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e                \u003c/span\u003e\u003cspan class=\"n\"\u003eSystem\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eout\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eprintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;************ GAME END ************\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e                \u003c/span\u003e\u003cspan class=\"k\"\u003ebreak\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"c1\"\u003e// 사용자 입력 값 검사: 가위 바위 보가 아니면 false\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kd\"\u003estatic\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kt\"\u003eboolean\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"nf\"\u003echeckInput\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003einput\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e[]\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003erps\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"k\"\u003efor\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003echeck\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003erps\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003echeck\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eequals\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003einput\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e                \u003c/span\u003e\u003cspan class=\"k\"\u003ereturn\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"k\"\u003ereturn\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"c1\"\u003e// 승패 판정: 1 = 승리, -1 = 패배, 0 = 무승부\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kd\"\u003estatic\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"nf\"\u003egetResult\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003euser\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003epc\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003euser\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eequals\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epc\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"k\"\u003ereturn\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"c1\"\u003e// 무승부\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"n\"\u003euser\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eequals\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;가위\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003epc\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eequals\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;보\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e||\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e                \u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003euser\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eequals\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;바위\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003epc\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eequals\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;가위\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e||\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e                \u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003euser\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eequals\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;보\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003epc\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eequals\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;바위\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)))\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"k\"\u003ereturn\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"c1\"\u003e// 승리\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"k\"\u003ereturn\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"c1\"\u003e// 패배\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg loading=\"lazy\" src=\"https://velog.velcdn.com/images/ezro/post/b07a596c-bb42-4fff-8477-2f600eef0c1e/image.gif\"\u003e\u003c/p\u003e","title":"[사전캠프] 9일차."},{"content":" TASKS\n✅ Web 강의 5주차\n✅ 달리기반 SQL 4-5\n✅ 달리기반 Java 3\nSQL HAVING GROUP BY로 그룹화된 데이터에 조건을 적용할 때 사용\nSELECT 컬럼명, 집계함수(컬럼명) FROM 테이블명 WHERE 조건 (옵션) GROUP BY 그룹화할_컬럼명 HAVING 조건; WHERE과 HAVING의 차이점 WHERE : 그룹화 이전에 조건을 적용, 집계 함수를 사용할 수 없음. HAVING : 그룹화 이후에 조건을 적용, 집계 함수를 사용할 수 있음. Lv4. 단골 고객님 찾기 고객별로 주문 건수와 총 주문 금액을 조회 (주문을 한 적이 없는 고객도 결과에 포함) select c.customername \u0026#34;고객명\u0026#34;, count(o.customerid) \u0026#34;주문 건수\u0026#34;, coalesce(sum(o.TotalAmount), 0) \u0026#34;총 주문 금액\u0026#34; from customers c left join orders o on c.customerid = o.customerid group by c.customername 나라별로 총 주문 금액이 가장 높은 고객과 그 고객의 총 주문 금액을 조회 select c.country \u0026#34;국가\u0026#34;, c.customername \u0026#34;고객명\u0026#34;, coalesce(sum(o.TotalAmount), 0) \u0026#34;총 주문 금액\u0026#34; from customers c left join orders o on c.customerid = o.customerid group by c.country, c.customername having coalesce(sum(o.TotalAmount), 0) = ( -- 국가 내에서 가장 큰 총 주문 금액을 반환 select max(sum_amount) from ( select c2.customerid, -- 고객별 총 주문 금액 합계 계산 sum(o2.TotalAmount) sum_amount from customers c2 left join orders o2 on c2.customerid = o2.customerid -- 외부 쿼리의 현재 국가와 같은 국가에 속한 고객들만 필터링 where c2.Country = c.Country group by c2.customerid ) b ) Lv4. 가장 높은 월급을 받는 직원은? 각 직원의 이름, 부서, 월급 그리고 그 직원이 속한 부서에서 가장 높은 월급을 받고 있는 직원의 이름, 월급 조회 select e1.name, e1.department, e1.salary, e2.name, e2.salary from employees e1 inner join employees e2 on e1.department = e2.department where e2.salary = ( -- 부서별 가장 높은 월급 조회 select max(e3.salary) from employees e3 where e3.department = e1.department ) 평균 월급이 가장 높은 부서와 해당 부서의 평균 월급 조회 select department, avg(salary) top_avg_salary from employees group by department having top_avg_salary = ( -- 가장 높은 평균 월급 조회 select max(avg_salary) from ( -- 부서별 평균 월급 조회 select avg(salary) avg_salary from employees group by department ) q ) Lv5. 가장 많이 팔린 품목은? 각 고객이 구매한 모든 제품의 총 금액을 계산하고, 고객 이름, 총 구매 금액, 주문 수를 출력 select c.customername, sum(p.price * o.quantity) total_price, count(o.customerid) count_order from customers c inner join orders o on c.customerid = o.customerid inner join products p on o.productid = p.productid group by c.customername order by total_price desc 각 제품 카테고리별로 가장 많이 팔린 제품의 이름과 총 판매량을 조회 select p.category, p.productname, sum(o.quantity) total_quantity from products p inner join orders o on p.productid = o.productid group by p.category, p.productname having total_quantity = ( select max(sum_quantity) from ( select p2.category, p2.productname, sum(o2.quantity) sum_quantity from products p2 inner join orders o2 on p2.productid = o2.productid where p2.category = p.category group by p2.category, p2.productname ) sq ) Lv5. 예산이 가장 큰 프로젝트는? 부서별 가장 높은 월급을 받는 직원들의 이름, 부서, 월급 조회 select e1.name, e1.department, e1.salary from employees e1 where e1.salary = ( select max(e2.salary) from employees e2 where e2.department = e1.department ) 직원이 참여한 프로젝트 중 예산이 10,000 이상인 프로젝트 조회 select e.name, p.projectname, p.budget from employees e inner join employeeprojects ep on e.employeeid = ep.employeeid inner join projects p on ep.projectid = p.projectid where p.budget \u0026gt;= 10000 Java Lv3. 단어 맞히기 게임 import java.util.Random; import java.util.Scanner; public class WordGame { public static void main(String[] args) { Scanner scanner = new Scanner(System.in); Random random = new Random(); String[] words = { \u0026#34;apple\u0026#34;, \u0026#34;banana\u0026#34;, \u0026#34;orange\u0026#34;, \u0026#34;grape\u0026#34;, \u0026#34;cherry\u0026#34;, \u0026#34;strawberry\u0026#34;, \u0026#34;kiwi\u0026#34;, \u0026#34;peach\u0026#34;, \u0026#34;plum\u0026#34;, \u0026#34;pear\u0026#34;, \u0026#34;watermelon\u0026#34;, \u0026#34;melon\u0026#34;, \u0026#34;pineapple\u0026#34;, \u0026#34;mango\u0026#34;, \u0026#34;apricot\u0026#34;, \u0026#34;blueberry\u0026#34;, \u0026#34;raspberry\u0026#34;, \u0026#34;blackberry\u0026#34;, \u0026#34;appliance\u0026#34;, \u0026#34;travel\u0026#34;, \u0026#34;music\u0026#34;, \u0026#34;exercise\u0026#34;, \u0026#34;software\u0026#34;, \u0026#34;keyboard\u0026#34;, \u0026#34;computer\u0026#34;, \u0026#34;bicycle\u0026#34;, \u0026#34;guitar\u0026#34;, \u0026#34;piano\u0026#34;, \u0026#34;window\u0026#34;, \u0026#34;book\u0026#34; }; boolean power = true; boolean playing = true; while (power) { StringBuffer wordZip = new StringBuffer(); // 랜덤 단어 생성 String answer = words[random.nextInt(words.length)].toUpperCase(); // 글자 수 만큼 _ 담기 wordZip.append(\u0026#34;_\u0026#34;.repeat(answer.length())); // 게임 기회 int wrongCount = 9; while (playing) { if (answer.equals(wordZip.toString())) { showFormatWord(wordZip); System.out.println(\u0026#34;정답입니다!\u0026#34;); power = false; break; } if (wrongCount \u0026lt;= 0) { System.out.println(\u0026#34;기회를 모두 소진하였습니다.\u0026#34;); System.out.println(\u0026#34;게임을 종료합니다.\u0026#34;); System.out.print(\u0026#34;정답: \u0026#34; + answer); power = false; break; } else { System.out.println(\u0026#34;남은 기회: \u0026#34; + wrongCount + \u0026#34;번\u0026#34;); } showFormatWord(wordZip); System.out.print(\u0026#34;알파벳을 입력하세요: \u0026#34;); String userInput = scanner.nextLine().toUpperCase(); if (userInput.length() == 1) { char userLetter = userInput.charAt(0); if (!Character.isLetter(userLetter)) { System.out.println(\u0026#34;알파벳만 입력 가능합니다.\u0026#34;); System.out.println(\u0026#34;기회가 1 차감됩니다.\u0026#34;); wrongCount--; continue; } if (wordZip.toString().contains(String.valueOf(userLetter))) { System.out.println(\u0026#34;이미 입력한 알파벳입니다.\u0026#34;); System.out.println(\u0026#34;기회가 1 차감됩니다.\u0026#34;); wrongCount--; continue; } int answerCount = 0; for (int i = 0; i \u0026lt; answer.length(); i++) { char answerLetter = answer.charAt(i); if (userLetter == answerLetter) { wordZip.replace(i, i + 1, Character.toString(userLetter)); answerCount++; } } if (answerCount == 0) { System.out.println(\u0026#34;포함된 알파벳이 없습니다.\u0026#34;); System.out.println(\u0026#34;기회가 1 차감됩니다.\u0026#34;); wrongCount--; continue; } } else { System.out.println(\u0026#34;한 글자만 입력하세요.\u0026#34;); System.out.println(\u0026#34;기회가 1 차감됩니다.\u0026#34;); wrongCount--; continue; } } } } public static void showFormatWord(StringBuffer zip) { String result = \u0026#34;\u0026#34;; for (int i = 0; i \u0026lt; zip.length(); i++) { if (i == 0) { result += \u0026#34;[ \u0026#34;; } result += zip.substring(i, i + 1) + \u0026#34; \u0026#34;; if (i == zip.length() - 1) { result += \u0026#34;]\u0026#34;; } } System.out.println(\u0026#34;---------------------\u0026#34;); System.out.println(result); System.out.println(\u0026#34;---------------------\u0026#34;); } } ","permalink":"http://localhost:1313/record/2025-01-22/","summary":"\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eTASKS\u003c/strong\u003e\u003cbr\u003e\n✅ Web 강의 5주차\u003cbr\u003e\n✅ 달리기반 SQL 4-5\u003cbr\u003e\n✅ 달리기반 Java 3\u003c/p\u003e\u003c/blockquote\u003e\n\u003chr\u003e\n\u003ch2 id=\"sql\"\u003eSQL\u003c/h2\u003e\n\u003ch3 id=\"having\"\u003eHAVING\u003c/h3\u003e\n\u003cp\u003e\u003ccode\u003eGROUP BY\u003c/code\u003e로 그룹화된 데이터에 조건을 적용할 때 사용\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-sql\" data-lang=\"sql\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eSELECT\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"err\"\u003e컬럼명\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"err\"\u003e집계함수\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"err\"\u003e컬럼명\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eFROM\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"err\"\u003e테이블명\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eWHERE\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"err\"\u003e조건\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"err\"\u003e옵션\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eGROUP\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003eBY\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"err\"\u003e그룹화할\u003c/span\u003e\u003cspan class=\"n\"\u003e_컬럼명\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eHAVING\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"err\"\u003e조건\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eWHERE\u003c/code\u003e과 \u003ccode\u003eHAVING\u003c/code\u003e의 차이점\n\u003ccode\u003eWHERE\u003c/code\u003e : 그룹화 이전에 조건을 적용, 집계 함수를 사용할 수 없음.\n\u003ccode\u003eHAVING\u003c/code\u003e : 그룹화 이후에 조건을 적용, 집계 함수를 사용할 수 있음.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"lv4-단골-고객님-찾기\"\u003eLv4. 단골 고객님 찾기\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e고객별로 주문 건수와 총 주문 금액을 조회 (주문을 한 적이 없는 고객도 결과에 포함)\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-sql\" data-lang=\"sql\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eselect\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003ec\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ecustomername\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;고객명\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\t   \u003c/span\u003e\u003cspan class=\"k\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eo\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ecustomerid\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;주문 건수\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\t   \u003c/span\u003e\u003cspan class=\"n\"\u003ecoalesce\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003esum\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eo\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eTotalAmount\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;총 주문 금액\u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003efrom\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003ecustomers\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003ec\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eleft\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003ejoin\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eorders\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eo\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003eon\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003ec\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ecustomerid\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eo\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ecustomerid\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003egroup\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003eby\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003ec\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ecustomername\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg loading=\"lazy\" src=\"https://velog.velcdn.com/images/ezro/post/fd8b298f-8dd3-407a-a697-8324e5c32ff4/image.png\"\u003e\u003c/p\u003e","title":"[사전캠프] 8일차."},{"content":" TASKS\n✅ SQL 강의 5주차\n✅ Web 강의 4주차\n✅ 달리기반 SQL 1-2\n✅ 달리기반 Java 1-2\n+\n☑️ 달리기반 SQL 3\nSQL NULL 데이터가 존재하지 않거나 정의되지 않은 상태\n-- NULL 값인 데이터를 찾는 경우 SELECT * FROM table WHERE column IS NULL; -- NULL이 아닌 데이터를 찾는 경우 SELECT * FROM table WHERE column IS NOT NULL; -- NULL 값 대체하여 조회 SELECT COALESCE(column, \u0026#39;default_value\u0026#39;) AS alias FROM table; Pivot Table 데이터 집계 및 요약을 위해 특정 열의 값들을 열(Column)로 변환하고,\n관련 데이터를 행(Row)과 열 형태로 구조화한 테이블\nMySQL의 Pivot Table CASE와 집계 함수를 사용하여 수동으로 생성 -- 10~59세 연령대의 남성 및 여성 주문 수를 연령대별로 집계하고 피벗 형태로 변환 select age, -- 남성과 여성의 주문 수를 별도의 열로 출력 max(if(gender = \u0026#39;male\u0026#39;, order_count, 0)) male, max(if(gender = \u0026#39;female\u0026#39;, order_count, 0)) female from ( select b.gender, -- 나이를 연령대로 변환 case when age between 10 and 19 then 10 when age between 20 and 29 then 20 when age between 30 and 39 then 30 when age between 40 and 49 then 40 when age between 50 and 59 then 50 end age, -- 성별과 연령대 기준으로 주문 수 계산 count(1) order_count from food_orders a inner join customers b on a.customer_id = b.customer_id where b.age between 10 and 59 group by 1, 2 ) t group by 1 -- 연령대별 정렬 order by 1 desc RANK() 데이터의 순위를 계산하는 윈도우 함수\nRANK() OVER (PARTITION BY column_name ORDER BY column_name [ASC|DESC]) OVER : 윈도우 함수가 적용되는 범위를 정의 PARTITION BY : 데이터를 특정 그룹으로 나누어 순위를 계산 (옵션) ORDER BY : 순위를 계산할 기준 열과 정렬 방식 지정 특정 조건에 따라 정렬된 결과에서 행의 순위를 반환 동일한 값이 있는 경우 같은 순위를 부여하며, 이후 순위는 건너뜀 SUM() OVER() SUM(column_name) OVER ([PARTITION BY column_name] [ORDER BY column_name]) SUM(column) : 합계를 계산할 숫자 열 지정 OVER : 윈도우 함수가 적용되는 범위를 정의 PARTITION BY : 데이터를 그룹화하여 각 그룹별 합계를 계산 (옵션) ORDER BY : 정렬 순서 지정 및 누적 합계를 계산 (옵션) GROUP BY와 다르게 그룹화하지 않고도 각 행에 합계를 추가할 수 있음 기존 행을 유지하면서 집계 데이터를 제공하기 때문에 데이터 분석에서 유용 DATE_FORMAT() MySQL 날짜 포맷 함수, 날짜나 시간 값을 지정된 형식으로 출력할 때 사용\nDATE_FORMAT(date, format) 날짜 관련 형식 문자 형식 문자　설명 예시 %Y 4자리 연도 % 2자리 연도 %m 2자리 월 %d 2자리 일 %e 일 (1자리 또는 2자리) 1, 21 %M 월 이름 (전체) January %b 월 이름 (축약형) Jan %W 요일 이름 (전체) Monday %a 요일 이름 (축약형) Mon %w 요일의 숫자 값 0 - 6 (0: 일요일, 1: 월요일, 2: 화요일) 시간 관련 형식 문자 형식 문자　설명　예시　%H 24시간제 시간 15 %h 12시간제 시간 3 %i 분 45 %s 초 30 %p AM/PM 표시 PM SELECT DATE_FORMAT(NOW(), \u0026#39;%Y-%m-%d\u0026#39;) AS formatted_date; 2025-01-21 SELECT DATE_FORMAT(NOW(), \u0026#39;%M %d, %Y\u0026#39;) AS formatted_date; January 21, 2025 SELECT DATE_FORMAT(NOW(), \u0026#39;%Y-%m-%d %H:%i:%s\u0026#39;) AS formatted_datetime; 2025-01-21 15:45:30 SELECT DATE_FORMAT(NOW(), \u0026#39;%Y-%m-%d %h:%i:%s %p\u0026#39;) AS formatted_datetime; 2025-01-21 03:45:30 PM Java Lv1. 랜덤 닉네임 생성기 import java.util.Random; public class RandomNickname { public static void main(String[] args) { // 1번째 칸 옵션 String[] firstSlot = {\u0026#34;기절초풍\u0026#34;, \u0026#34;멋있는\u0026#34;, \u0026#34;재미있는\u0026#34;}; // 2번째 칸 옵션 String[] secondSlot = {\u0026#34;도전적인\u0026#34;, \u0026#34;노란색의\u0026#34;, \u0026#34;바보같은\u0026#34;}; // 3번째 칸 옵션 String[] thirdSlot = {\u0026#34;돌고래\u0026#34;, \u0026#34;개발자\u0026#34;, \u0026#34;오랑우탄\u0026#34;}; // 랜덤 객체 생성 Random random = new Random(); // 각 칸에서 랜덤으로 선택 String randomFirst = firstSlot[random.nextInt(firstSlot.length)]; String randomSecond = secondSlot[random.nextInt(secondSlot.length)]; String randomThird = thirdSlot[random.nextInt(thirdSlot.length)]; // 닉네임 생성 String randomNickname = randomFirst + \u0026#34; \u0026#34; + randomSecond + \u0026#34; \u0026#34; + randomThird; // 결과 출력 System.out.println(\u0026#34;랜덤 닉네임: \u0026#34; + randomNickname); } } Lv2. 스파르타 자판기 import java.util.HashMap; import java.util.Map; import java.util.Scanner; public class VendingMachine { public static void main(String[] args) { Scanner scanner = new Scanner(System.in); Map\u0026lt;String, Integer\u0026gt; drinks = new HashMap\u0026lt;\u0026gt;(); drinks.put(\u0026#34;사이다\u0026#34;, 1700); drinks.put(\u0026#34;콜라\u0026#34;, 1900); drinks.put(\u0026#34;식혜\u0026#34;, 2500); drinks.put(\u0026#34;솔의 눈\u0026#34;, 3000); while (true) { System.out.println(\u0026#34;---- MENU ----\u0026#34;); for (Map.Entry\u0026lt;String, Integer\u0026gt; drink : drinks.entrySet()) { System.out.println(drink.getKey() + \u0026#34; \u0026#34; + drink.getValue() + \u0026#34;원\u0026#34;); } System.out.println(\u0026#34;---------------\u0026#34;); System.out.print(\u0026#34;구매할 음료를 입력하세요: \u0026#34;); String drinkPick = scanner.nextLine(); if (drinks.containsKey(drinkPick)) { int price = drinks.get(drinkPick); System.out.println(price + \u0026#34;원입니다.\u0026#34;); System.out.print(\u0026#34;지불할 금액을 입력하세요: \u0026#34;); int pay = scanner.nextInt(); scanner.nextLine(); if (pay \u0026lt; price) { System.out.println(\u0026#34;돈이 부족합니다.\u0026#34;); break; } else if (pay \u0026gt; price) { System.out.println(\u0026#34;잔돈: \u0026#34; + (pay - price) + \u0026#34;원\u0026#34;); System.out.println(\u0026#34;구매가 완료되었습니다.\u0026#34;); } else { System.out.println(\u0026#34;구매가 완료되었습니다.\u0026#34;); } } else { System.out.println(\u0026#34;목록에 없는 음료입니다.\u0026#34;); break; } } } } ","permalink":"http://localhost:1313/record/2025-01-21/","summary":"\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eTASKS\u003c/strong\u003e\u003cbr\u003e\n✅ SQL 강의 5주차\u003cbr\u003e\n✅ Web 강의 4주차\u003cbr\u003e\n✅ 달리기반 SQL 1-2\u003cbr\u003e\n✅ 달리기반 Java 1-2\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003e\u003cstrong\u003e+\u003c/strong\u003e\u003cbr\u003e\n☑️ 달리기반 SQL 3\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"sql\"\u003eSQL\u003c/h2\u003e\n\u003ch3 id=\"null\"\u003eNULL\u003c/h3\u003e\n\u003cp\u003e데이터가 존재하지 않거나 정의되지 않은 상태\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-sql\" data-lang=\"sql\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e-- NULL 값인 데이터를 찾는 경우\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eSELECT\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003eFROM\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003etable\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003eWHERE\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003ecolumn\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003eIS\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003eNULL\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"c1\"\u003e-- NULL이 아닌 데이터를 찾는 경우\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eSELECT\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003eFROM\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003etable\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003eWHERE\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003ecolumn\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003eIS\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003eNOT\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003eNULL\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"c1\"\u003e-- NULL 값 대체하여 조회\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eSELECT\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eCOALESCE\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003ecolumn\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;default_value\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003eAS\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003ealias\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003eFROM\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003etable\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"pivot-table\"\u003ePivot Table\u003c/h3\u003e\n\u003cp\u003e데이터 집계 및 요약을 위해 특정 열의 값들을 열(Column)로 변환하고,\u003cbr\u003e\n관련 데이터를 행(Row)과 열 형태로 구조화한 테이블\u003c/p\u003e","title":"[사전캠프] 7일차."},{"content":" TASKS\n✅ SQL 강의 4주차\n✅ Web 강의 3주차\n✅ 걷기반 SQL 50번\n✅ 자바의 정석 강의\nSQL Subquery 하나의 SQL 쿼리 안에 포함된 또 다른 쿼리\nSELECT 절 내 서브쿼리 활용 select column1, special_column from ( /* subquery */ select column1, column2 special_column from table1 ) a WHERE 절 내 서브쿼리 활용 select column1, column2 from table1 where column1 = (select col1 from table2) JOIN 두 개 이상의 테이블을 결합하여 데이터를 조회하는 데 사용\nINNER JOIN 양쪽 테이블 모두에서 공통 열의 값이 일치하는 데이터만 반환\nselect 조회할 컬럼 from 테이블1 a inner join 테이블2 b on a.공통컬럼명 = b.공통컬럼명 LEFT JOIN 왼쪽 테이블(테이블1)의 모든 데이터를 반환 오른쪽 테이블(테이블2)에 일치하는 데이터가 없으면 결과에 NULL 값으로 채워진 행을 포함\nselect 조회할 컬럼 from 테이블1 a left join 테이블2 b on a.공통컬럼명 = b.공통컬럼명 JavaScript fetch JavaScript에서 HTTP 요청을 보내고 데이터를 가져오기 위해 사용되는 함수 fetch(url, options) .then(response =\u0026gt; { /* 응답 처리 */ }) .catch(error =\u0026gt; { /* 에러 처리 */ }); fetch(\u0026#39;https://api.example.com/data\u0026#39;) .then(response =\u0026gt; response.json()) // 응답을 JSON으로 변환 .then(data =\u0026gt; console.log(data)) // 데이터 출력 .catch(error =\u0026gt; console.error(\u0026#39;Error:\u0026#39;, error)); // 에러 처리 연습하기 1 (서울 실시간 미세먼지) .bad { color: red; } function q1() { let url = \u0026#34;http://spartacodingclub.shop/sparta_api/seoulair\u0026#34;; $(\u0026#34;#names-q1\u0026#34;).empty(); fetch(url).then(res =\u0026gt; res.json()).then(data =\u0026gt; { let rows = data[\u0026#34;RealtimeCityAir\u0026#34;][\u0026#34;row\u0026#34;]; rows.forEach(a =\u0026gt; { let gu_name = a[\u0026#34;MSRSTE_NM\u0026#34;]; let gu_mise = a[\u0026#34;IDEX_MVL\u0026#34;]; let temp_html = ``; if (gu_mise \u0026gt; 40) { temp_html = `\u0026lt;li class=\u0026#34;bad\u0026#34;\u0026gt;${gu_name} : ${gu_mise}\u0026lt;/li\u0026gt;`; } else { temp_html = `\u0026lt;li\u0026gt;${gu_name} : ${gu_mise}\u0026lt;/li\u0026gt;`; } $(\u0026#34;#names-q1\u0026#34;).append(temp_html); }); }) } \u0026lt;button onclick=\u0026#34;q1()\u0026#34;\u0026gt;업데이트\u0026lt;/button\u0026gt; \u0026lt;ul id=\u0026#34;names-q1\u0026#34;\u0026gt; \u0026lt;li\u0026gt;중구 : 82\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;종로구 : 87\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;용산구 : 84\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;은평구 : 82\u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; 연습하기 2 (고양이 관련 랜덤 정보) function randomInfoCats() { let url = \u0026#34;https://catfact.ninja/fact\u0026#34;; // 고양이 관련 랜덤 정보 api fetch(url).then(res =\u0026gt; { return res.json() }).then(data =\u0026gt; { let info = data[\u0026#34;fact\u0026#34;]; // 영어 → 한글 번역 api let transUrl = `https://translate.googleapis.com/translate_a/single?client=gtx\u0026amp;sl=en\u0026amp;tl=ko\u0026amp;dt=t\u0026amp;q=${encodeURIComponent(info)}` fetch(transUrl).then(trans =\u0026gt; trans.json()).then(data =\u0026gt; { let infoK = data[0][0][0]; $(\u0026#34;#cat_info\u0026#34;).text(info); $(\u0026#34;#cat_info_k\u0026#34;).text(infoK); }) }) } \u0026lt;button onclick=\u0026#34;randomInfoCats()\u0026#34;\u0026gt;알아보기\u0026lt;/button\u0026gt; \u0026lt;p id=\u0026#34;cat_info\u0026#34;\u0026gt;\u0026lt;/p\u0026gt; \u0026lt;p id=\u0026#34;cat_info_k\u0026#34;\u0026gt;\u0026lt;/p\u0026gt; ","permalink":"http://localhost:1313/record/2025-01-20/","summary":"\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eTASKS\u003c/strong\u003e\u003cbr\u003e\n✅ SQL 강의 4주차\u003cbr\u003e\n✅ Web 강의 3주차\u003cbr\u003e\n✅ 걷기반 SQL 50번\u003cbr\u003e\n✅ 자바의 정석 강의\u003c/p\u003e\u003c/blockquote\u003e\n\u003chr\u003e\n\u003ch2 id=\"sql\"\u003eSQL\u003c/h2\u003e\n\u003ch3 id=\"subquery\"\u003eSubquery\u003c/h3\u003e\n\u003cp\u003e하나의 SQL 쿼리 안에 포함된 또 다른 쿼리\u003c/p\u003e\n\u003ch4 id=\"select-절-내-서브쿼리-활용\"\u003eSELECT 절 내 서브쿼리 활용\u003c/h4\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-sql\" data-lang=\"sql\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eselect\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003ecolumn1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003especial_column\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003efrom\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"cm\"\u003e/* subquery */\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"k\"\u003eselect\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003ecolumn1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003ecolumn2\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003especial_column\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"k\"\u003efrom\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003etable1\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003ea\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"where-절-내-서브쿼리-활용\"\u003eWHERE 절 내 서브쿼리 활용\u003c/h4\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-sql\" data-lang=\"sql\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eselect\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003ecolumn1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003ecolumn2\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003efrom\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003etable1\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003ewhere\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003ecolumn1\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003eselect\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003ecol1\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003efrom\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003etable2\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"join\"\u003eJOIN\u003c/h3\u003e\n\u003cp\u003e두 개 이상의 테이블을 결합하여 데이터를 조회하는 데 사용\u003c/p\u003e","title":"[사전캠프] 6일차."},{"content":" TASKS\n✅ SQL 강의 3주차\n✅ Web 강의 2주차\n✅ Java 강의 Part 03.\n+\n☑️ 퀘스트 걷기반 Java Part 3\n☑️ 퀘스트 걷기반 SQL 45번\nSQL 1. 문자열 함수 REPLACE : 문자열의 특정 부분을 다른 문자열로 대체. replace(바꿀 컬럼, 현재 값, 바꿀 값) SUBSTR 또는 SUBSTRING : 문자열의 일부를 추출. substr(조회할 컬럼, 시작 위치, 글자 수) CONCAT : 문자열을 연결. concat(붙이고 싶은 값1, 붙이고 싶은 값2, 붙이고 싶은 값3, ...) 1-1. 서울 지역의 음식 타입별 평균 음식 주문 금액 구하기 1. 어떤 테이블에서 데이터를 뽑을 것인가 → from food_orders 2. 어떤 컬럼을 이용할 것인가 → price, cuisine_type, addr\r3. 어떤 조건을 지정해야 하는가 → where addr like ‘%서울%’\r4. 어떤 함수 (수식) 을 이용해야 하는가 → avg(price), substring(addr, 1, 2)\rselect substring(addr, 1, 2) \u0026#34;시도\u0026#34;, -- addr 첫 번째 글자에서 두 글자를 출력 cuisine_type \u0026#34;음식 종류\u0026#34;, avg(price) \u0026#34;평균 금액\u0026#34; from food_orders where addr like \u0026#39;%서울%\u0026#39; group by 1, 2\t-- 컬럼 순서로 입력 가능 -- 1 = substring(addr, 1, 2) \u0026#34;시도\u0026#34; -- 2 = cuisine_type \u0026#34;음식 종류\u0026#34; 1-2. ‘[지역(시도)] 음식점이름 (음식종류)’ 컬럼을 만들고, 총 주문 건수 구하기 1. 어떤 테이블에서 데이터를 뽑을 것인가 → from food_orders 2. 어떤 컬럼을 이용할 것인가 → addr, restaurant_name, cuisine_type, order_id\r3. 어떤 조건을 지정해야 하는가 → X\r4. 어떤 함수 (수식) 을 이용해야 하는가 → count(1), substring(addr, 1, 2), concat(’[’, 뽑은시도, ‘] ‘, restaurant_name, ‘ (’, cuisine_type, ‘)’)\rselect concat(\u0026#39;[\u0026#39;, substring(addr, 1, 2), \u0026#39;] \u0026#39;, restaurant_name, \u0026#39; (\u0026#39;, cuisine_type, \u0026#39;)\u0026#39;) \u0026#34;바뀐이름\u0026#34;, -- [서울] Hangawi (Korean) count(1) \u0026#34;주문건수\u0026#34; from food_orders group by 1 2. 조건문 IF : 특정 조건이 참인지 여부를 확인하고 참일 경우 특정 값을 반환. if(조건, 조건을 충족할 때, 조건을 충족하지 못할 때) CASE : 다양한 조건을 정의하고 조건에 따라 값을 반환. case when 조건1 then 값(수식)1 when 조건2 then 값(수식)2 else 값(수식)3 end 2-1. 10세 이상, 30세 미만의 고객의 나이와 성별로 그룹 나누기 1. 어떤 테이블에서 데이터를 뽑을 것인가 → from customers\r2. 어떤 컬럼을 이용할 것인가 → name, age, gender\r3. 어떤 조건을 지정해야 하는가 → where age between 10 and 29\r4. 어떤 함수 (수식) 을 이용해야 하는가 → case when … end\rselect name, age, gender, case when (age between 10 and 19) and gender=\u0026#39;male\u0026#39; then \u0026#34;10대 남자\u0026#34; when (age between 10 and 19) and gender=\u0026#39;female\u0026#39; then \u0026#34;10대 여자\u0026#34; when (age between 20 and 29) and gender=\u0026#39;male\u0026#39; then \u0026#34;20대 남자\u0026#34; when (age between 20 and 29) and gender=\u0026#39;female\u0026#39; then \u0026#34;20대 여자\u0026#34; end \u0026#34;그룹\u0026#34; from customers where age between 10 and 29 2-1. 지역과 배달 시간을 기반으로 배달 수수료 구하기 1. 어떤 테이블에서 데이터를 뽑을 것인가 → from food_orders 2. 어떤 컬럼을 이용할 것인가 → restaurant_name, order_id, addr, derlivery_time, price\r3. 어떤 조건을 지정해야 하는가 → X\r4. 어떤 함수 (수식) 을 이용해야 하는가 → case when, if\rselect restaurant_name, order_id, delivery_time, price, addr, case when delivery_time\u0026gt;25 and delivery_time\u0026lt;=30 then price*0.05*(if(addr like \u0026#39;%서울%\u0026#39;, 1.1, 1)) when delivery_time\u0026gt;30 then price*1.1*(if(addr like \u0026#39;%서울%\u0026#39;, 1.1, 1)) else 0 end \u0026#34;수수료\u0026#34; from food_orders 3주차 숙제 다음의 조건으로 배달 시간이 늦었는지 판단하는 값을 만들어주세요. 주중 : 25분 이상 주말 : 30분 이상 select day_of_the_week, delivery_time, case when day_of_the_week=\u0026#39;Weekday\u0026#39; and delivery_time\u0026gt;=25 then \u0026#39;지연\u0026#39; when day_of_the_week=\u0026#39;Weekend\u0026#39; and delivery_time\u0026gt;=30 then \u0026#39;지연\u0026#39; else \u0026#39;정시\u0026#39; end \u0026#34;지연 여부\u0026#34; from food_orders JavaScript 1. 딕셔너리 : 객체 (Object) 키-값 쌍(key-value pairs)으로 데이터를 저장하는 데이터 구조. let dictionary = { key1: \u0026#34;value1\u0026#34;, key2: \u0026#34;value2\u0026#34;, key3: 123, }; 접근 console.log(dictionary[\u0026#34;key1\u0026#34;]) console.log(dictionary[\u0026#34;key2\u0026#34;]) console.log(dictionary[\u0026#34;key3\u0026#34;]) 결과 value1\rvalue2\r123 2. 리스트 : 배열 (Array) 순서가 있는 데이터의 리스트로, 인덱스로 요소를 접근. let list = [\u0026#34;item1\u0026#34;, \u0026#34;item2\u0026#34;, 456]; 접근 console.log(list[0]); console.log(list[1]); console.log(list[2]); 결과 item1\ritem2\r456 3. 리스트 안의 딕서녀리 : 배열과 객체의 조합 배열의 순서 유지: 배열의 인덱스를 통해 각 객체에 접근. 객체의 키-값 접근: 배열의 요소인 객체에서 키를 사용해 값 출력. let people = [ {\u0026#34;name\u0026#34;: \u0026#34;김서영\u0026#34;, \u0026#34;age\u0026#34;: 23}, {\u0026#34;name\u0026#34;: \u0026#34;이현아\u0026#34;, \u0026#34;age\u0026#34;: 33}, {\u0026#34;name\u0026#34;: \u0026#34;최영환\u0026#34;, \u0026#34;age\u0026#34;: 18}, {\u0026#34;name\u0026#34;: \u0026#34;빅서연\u0026#34;, \u0026#34;age\u0026#34;: 19}, {\u0026#34;name\u0026#34;: \u0026#34;김지용\u0026#34;, \u0026#34;age\u0026#34;: 21}, {\u0026#34;name\u0026#34;: \u0026#34;나예지\u0026#34;, \u0026#34;age\u0026#34;: 30} ] 접근 console.log(people[0]); console.log(people[2][\u0026#34;name\u0026#34;]); console.log(people[3][\u0026#34;age\u0026#34;]); 결과 {name: \u0026#39;김서영\u0026#39;, age: 23}\r최영환\r19 4. 배열 함수 forEach 배열의 각 요소에 대해 주어진 콜백 함수를 한 번씩 실행. 반환값은 없으며, 주로 배열 요소를 순회하며 특정 작업을 수행할 때 사용. array.forEach(element =\u0026gt; {}); 실행 people.forEach(person =\u0026gt; { console.log(person[\u0026#34;name\u0026#34;], person[\u0026#34;age\u0026#34;]); }); 결과 김서영 23 이현아 33 최영환 18 빅서연 19 김지용 21 나예지 30 5. 조건문 if-else 조건에 따라 서로 다른 코드를 실행하는 데 사용. 특정 조건을 만족하는 경우에만 코드를 실행할 수 있음. if (조건) { // 조건이 true일 때 실행되는 코드 } else { // 조건이 false일 때 실행되는 코드 } 실행 let age = 18; if (age \u0026lt; 20) { console.log(\u0026#34;미성년자입니다.\u0026#34;) } else { console.log(\u0026#34;성인입니다.\u0026#34;) } 결과 미성년자입니다. 5. 활용하기 20살 미만일 경우 \u0026ldquo;[이름]님은 미성년자입니다.\u0026rdquo;\n20살 이상일 경우 \u0026ldquo;[이름]님은 성인입니다.\u0026rdquo; 출력 people.forEach(person =\u0026gt; { if (person[\u0026#34;age\u0026#34;] \u0026lt; 20) { console.log(person[\u0026#34;name\u0026#34;] + \u0026#34;님은 미성년자입니다.\u0026#34;) } else { console.log(person[\u0026#34;name\u0026#34;] + \u0026#34;님은 성인입니다.\u0026#34;) } }); 결과 김서영님은 성인입니다.\r이현아님은 성인입니다.\r최영환님은 미성년자입니다.\r빅서연님은 미성년자입니다.\r김지용님은 성인입니다.\r나예지님은 성인입니다. 6. function 특정 작업을 수행하는 코드를 정의하고 필요할 때 호출해서 사용. function hello() {\t// hello 라는 이름의 함수를 생성 alert(\u0026#34;안녕하세요!\u0026#34;);\t// 안녕하세요! 를 출력하는 알림창 } 호출 \u0026lt;!-- 인사하기 버튼 클릭 시 hello() 함수 호출 --\u0026gt; \u0026lt;button onclick=\u0026#34;hello()\u0026#34;\u0026gt;인사하기\u0026lt;/button\u0026gt; 결과 jQuery JavaScript 코드를 간단하게 작성하도록 돕는 경량 JavaScript 라이브러리 \u0026lt;div id=\u0026#34;htmlId\u0026#34;\u0026gt;Hello, ID!\u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;htmlClass\u0026#34;\u0026gt;Hello, Class!\u0026lt;/div\u0026gt; JavaScript로 호출 let getId = document.getElementById(\u0026#34;htmlId\u0026#34;); let getId2 = document.querySelector(\u0026#34;#htmlId\u0026#34;); let getClass = document.getElementsByClassName(\u0026#34;htmlClass\u0026#34;); let getClass2 = document.querySelectorAll(\u0026#34;.htmlClass\u0026#34;); jQuery로 호출 let getId = $(\u0026#34;#htmlId\u0026#34;); let getClass = $(\u0026#34;.htmlClass\u0026#34;); Java 반복문 연습하기 Part 1 1부터 100까지의 숫자 출력하기. for 또는 while 반복문을 사용하여 1부터 100까지의 숫자를 출력하세요.\nfor문 for (int i = 1; i \u0026lt;= 100; i++) { System.out.println(\u0026#34;i = \u0026#34; + i); } while문 int i = 1; while (i \u0026lt;= 100) { System.out.println(\u0026#34;i = \u0026#34; + i); i++; } 반복문 연습하기 Part 2 1부터 100까지의 짝수만 출력하기. 반복문을 사용하여 1부터 100까지의 숫자 중 짝수만 출력하세요.\nfor문 for (int i = 1; i \u0026lt;= 100; i++) { if (i % 2 == 0) { System.out.println(\u0026#34;i = \u0026#34; + i); } while문 int i = 1; while(i \u0026lt;= 100) { if (i % 2 == 0) { System.out.println(\u0026#34;i = \u0026#34; + i); } i++; } 반복문 연습하기 Part 3 구구단 출력하기. 2단부터 9단까지의 구구단을 출력하세요.\nfor (int i = 2; i \u0026lt;= 9; i++) { System.out.println(\u0026#34;--- \u0026#34; + i + \u0026#34;단 ---\u0026#34;); for(int j = 1; j \u0026lt;= 9; j++) { System.out.println(i + \u0026#34; * \u0026#34; + j + \u0026#34; = \u0026#34; + i * j); } } ","permalink":"http://localhost:1313/record/2025-01-17/","summary":"\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eTASKS\u003c/strong\u003e\u003cbr\u003e\n✅ SQL 강의 3주차\u003cbr\u003e\n✅ Web 강의 2주차\u003cbr\u003e\n✅ Java 강의 Part 03.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e+\u003c/strong\u003e\u003cbr\u003e\n☑️ 퀘스트 걷기반 Java Part 3\u003cbr\u003e\n☑️ 퀘스트 걷기반 SQL 45번\u003c/p\u003e\u003c/blockquote\u003e\n\u003chr\u003e\n\u003ch2 id=\"sql\"\u003eSQL\u003c/h2\u003e\n\u003ch3 id=\"1-문자열-함수\"\u003e1. 문자열 함수\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eREPLACE\u003c/code\u003e : 문자열의 특정 부분을 다른 문자열로 대체.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-sql\" data-lang=\"sql\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\t\u003c/span\u003e\u003cspan class=\"k\"\u003ereplace\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"err\"\u003e바꿀\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"err\"\u003e컬럼\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"err\"\u003e현재\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"err\"\u003e값\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"err\"\u003e바꿀\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"err\"\u003e값\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eSUBSTR\u003c/code\u003e 또는 \u003ccode\u003eSUBSTRING\u003c/code\u003e : 문자열의 일부를 추출.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-sql\" data-lang=\"sql\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\t\u003c/span\u003e\u003cspan class=\"n\"\u003esubstr\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"err\"\u003e조회할\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"err\"\u003e컬럼\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"err\"\u003e시작\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"err\"\u003e위치\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"err\"\u003e글자\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"err\"\u003e수\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eCONCAT\u003c/code\u003e : 문자열을 연결.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-sql\" data-lang=\"sql\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\t\u003c/span\u003e\u003cspan class=\"n\"\u003econcat\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"err\"\u003e붙이고\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"err\"\u003e싶은\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"err\"\u003e값\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"err\"\u003e붙이고\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"err\"\u003e싶은\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"err\"\u003e값\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"err\"\u003e붙이고\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"err\"\u003e싶은\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"err\"\u003e값\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e...)\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"1-1-서울-지역의-음식-타입별-평균-음식-주문-금액-구하기\"\u003e1-1. 서울 지역의 음식 타입별 평균 음식 주문 금액 구하기\u003c/h4\u003e\n\u003cpre\u003e\u003ccode\u003e1. 어떤 테이블에서 데이터를 뽑을 것인가 → from food_orders \r\n2. 어떤 컬럼을 이용할 것인가 → price, cuisine_type, addr\r\n3. 어떤 조건을 지정해야 하는가 → where addr like ‘%서울%’\r\n4. 어떤 함수 (수식) 을 이용해야 하는가 → avg(price), substring(addr, 1, 2)\r\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-sql\" data-lang=\"sql\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eselect\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003esubstring\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eaddr\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;시도\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"c1\"\u003e-- addr 첫 번째 글자에서 두 글자를 출력\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"w\"\u003e       \u003c/span\u003e\u003cspan class=\"n\"\u003ecuisine_type\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;음식 종류\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e       \u003c/span\u003e\u003cspan class=\"k\"\u003eavg\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eprice\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;평균 금액\u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003efrom\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003efood_orders\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003ewhere\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eaddr\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003elike\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;%서울%\u0026#39;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003egroup\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003eby\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"w\"\u003e\t\u003c/span\u003e\u003cspan class=\"c1\"\u003e-- 컬럼 순서로 입력 가능 \n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"w\"\u003e\t\t\t\t\u003c/span\u003e\u003cspan class=\"c1\"\u003e-- 1 = substring(addr, 1, 2) \u0026#34;시도\u0026#34;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"w\"\u003e\t\t\t\t\u003c/span\u003e\u003cspan class=\"c1\"\u003e-- 2 = cuisine_type \u0026#34;음식 종류\u0026#34;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"1-2-지역시도-음식점이름-음식종류-컬럼을-만들고-총-주문-건수-구하기\"\u003e1-2. ‘[지역(시도)] 음식점이름 (음식종류)’ 컬럼을 만들고, 총 주문 건수 구하기\u003c/h4\u003e\n\u003cpre\u003e\u003ccode\u003e1. 어떤 테이블에서 데이터를 뽑을 것인가 → from food_orders \r\n2. 어떤 컬럼을 이용할 것인가 → addr, restaurant_name, cuisine_type, order_id\r\n3. 어떤 조건을 지정해야 하는가 → X\r\n4. 어떤 함수 (수식) 을 이용해야 하는가 → count(1), substring(addr, 1, 2), concat(’[’, 뽑은시도, ‘] ‘, restaurant_name, ‘ (’, cuisine_type, ‘)’)\r\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-sql\" data-lang=\"sql\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eselect\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003econcat\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;[\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003esubstring\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eaddr\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;] \u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003erestaurant_name\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39; (\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003ecuisine_type\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;)\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;바뀐이름\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"c1\"\u003e-- [서울] Hangawi (Korean)\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"w\"\u003e       \u003c/span\u003e\u003cspan class=\"k\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;주문건수\u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003efrom\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003efood_orders\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003egroup\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003eby\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"2-조건문\"\u003e2. 조건문\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eIF\u003c/code\u003e : 특정 조건이 참인지 여부를 확인하고 참일 경우 특정 값을 반환.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-sql\" data-lang=\"sql\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\t\u003c/span\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"err\"\u003e조건\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"err\"\u003e조건을\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"err\"\u003e충족할\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"err\"\u003e때\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"err\"\u003e조건을\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"err\"\u003e충족하지\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"err\"\u003e못할\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"err\"\u003e때\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eCASE\u003c/code\u003e : 다양한 조건을 정의하고 조건에 따라 값을 반환.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-sql\" data-lang=\"sql\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\t\u003c/span\u003e\u003cspan class=\"k\"\u003ecase\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003ewhen\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"err\"\u003e조건\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003ethen\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"err\"\u003e값\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"err\"\u003e수식\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\t \t \u003c/span\u003e\u003cspan class=\"k\"\u003ewhen\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"err\"\u003e조건\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003ethen\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"err\"\u003e값\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"err\"\u003e수식\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\t\t \u003c/span\u003e\u003cspan class=\"k\"\u003eelse\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"err\"\u003e값\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"err\"\u003e수식\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\t\u003c/span\u003e\u003cspan class=\"k\"\u003eend\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"2-1-10세-이상-30세-미만의-고객의-나이와-성별로-그룹-나누기\"\u003e2-1. 10세 이상, 30세 미만의 고객의 나이와 성별로 그룹 나누기\u003c/h4\u003e\n\u003cpre\u003e\u003ccode\u003e1. 어떤 테이블에서 데이터를 뽑을 것인가 → from customers\r\n2. 어떤 컬럼을 이용할 것인가 → name, age, gender\r\n3. 어떤 조건을 지정해야 하는가 → where age between 10 and 29\r\n4. 어떤 함수 (수식) 을 이용해야 하는가 → case when … end\r\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-sql\" data-lang=\"sql\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eselect\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\t   \u003c/span\u003e\u003cspan class=\"n\"\u003eage\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e       \u003c/span\u003e\u003cspan class=\"n\"\u003egender\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\t   \u003c/span\u003e\u003cspan class=\"k\"\u003ecase\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003ewhen\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eage\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003ebetween\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003eand\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e19\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003eand\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003egender\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;male\u0026#39;\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003ethen\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;10대 남자\u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\t\t\t\u003c/span\u003e\u003cspan class=\"k\"\u003ewhen\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eage\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003ebetween\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003eand\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e19\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003eand\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003egender\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;female\u0026#39;\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003ethen\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;10대 여자\u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"k\"\u003ewhen\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eage\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003ebetween\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e20\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003eand\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e29\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003eand\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003egender\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;male\u0026#39;\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003ethen\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;20대 남자\u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"k\"\u003ewhen\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eage\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003ebetween\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e20\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003eand\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e29\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003eand\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003egender\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;female\u0026#39;\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003ethen\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;20대 여자\u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e       \u003c/span\u003e\u003cspan class=\"k\"\u003eend\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;그룹\u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e \n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003efrom\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003ecustomers\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003ewhere\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eage\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003ebetween\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003eand\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e29\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"2-1-지역과-배달-시간을-기반으로-배달-수수료-구하기\"\u003e2-1. 지역과 배달 시간을 기반으로 배달 수수료 구하기\u003c/h4\u003e\n\u003cpre\u003e\u003ccode\u003e1. 어떤 테이블에서 데이터를 뽑을 것인가 → from food_orders \r\n2. 어떤 컬럼을 이용할 것인가 → restaurant_name, order_id, addr, derlivery_time, price\r\n3. 어떤 조건을 지정해야 하는가 → X\r\n4. 어떤 함수 (수식) 을 이용해야 하는가 → case when, if\r\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-sql\" data-lang=\"sql\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eselect\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003erestaurant_name\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e       \u003c/span\u003e\u003cspan class=\"n\"\u003eorder_id\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e       \u003c/span\u003e\u003cspan class=\"n\"\u003edelivery_time\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e       \u003c/span\u003e\u003cspan class=\"n\"\u003eprice\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e       \u003c/span\u003e\u003cspan class=\"n\"\u003eaddr\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e       \u003c/span\u003e\u003cspan class=\"k\"\u003ecase\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003ewhen\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003edelivery_time\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"mi\"\u003e25\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003eand\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003edelivery_time\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;=\u003c/span\u003e\u003cspan class=\"mi\"\u003e30\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003ethen\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eprice\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"mi\"\u003e05\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eaddr\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003elike\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;%서울%\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"k\"\u003ewhen\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003edelivery_time\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"mi\"\u003e30\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003ethen\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eprice\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eaddr\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003elike\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;%서울%\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"k\"\u003eelse\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003eend\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;수수료\u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003efrom\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003efood_orders\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"3주차-숙제\"\u003e3주차 숙제\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e다음의 조건으로 배달 시간이 늦었는지 판단하는 값을 만들어주세요.\n\u003cul\u003e\n\u003cli\u003e주중 : 25분 이상\u003c/li\u003e\n\u003cli\u003e주말 : 30분 이상\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-sql\" data-lang=\"sql\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eselect\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eday_of_the_week\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e       \u003c/span\u003e\u003cspan class=\"n\"\u003edelivery_time\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e       \u003c/span\u003e\u003cspan class=\"k\"\u003ecase\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003ewhen\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eday_of_the_week\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;Weekday\u0026#39;\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003eand\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003edelivery_time\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;=\u003c/span\u003e\u003cspan class=\"mi\"\u003e25\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003ethen\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;지연\u0026#39;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"k\"\u003ewhen\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eday_of_the_week\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;Weekend\u0026#39;\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003eand\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003edelivery_time\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;=\u003c/span\u003e\u003cspan class=\"mi\"\u003e30\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003ethen\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;지연\u0026#39;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"k\"\u003eelse\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;정시\u0026#39;\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003eend\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;지연 여부\u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003efrom\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003efood_orders\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003chr\u003e\n\u003ch2 id=\"javascript\"\u003eJavaScript\u003c/h2\u003e\n\u003ch3 id=\"1-딕셔너리--객체-object\"\u003e1. 딕셔너리 : 객체 (Object)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e키-값 쌍(key-value pairs)으로 데이터를 저장하는 데이터 구조.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-js\" data-lang=\"js\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\t\u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nx\"\u003edictionary\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\t\t\u003cspan class=\"nx\"\u003ekey1\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;value1\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\t\t\u003cspan class=\"nx\"\u003ekey2\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;value2\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\t\t\u003cspan class=\"nx\"\u003ekey3\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e123\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\t\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003e접근\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-js\" data-lang=\"js\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\t\u003cspan class=\"nx\"\u003econsole\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003edictionary\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;key1\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\t\u003cspan class=\"nx\"\u003econsole\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003edictionary\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;key2\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\t\u003cspan class=\"nx\"\u003econsole\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003edictionary\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;key3\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003e결과\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e\tvalue1\r\n\tvalue2\r\n\t123\n\u003c/code\u003e\u003c/pre\u003e\u003ch3 id=\"2-리스트--배열-array\"\u003e2. 리스트 : 배열 (Array)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e순서가 있는 데이터의 리스트로, 인덱스로 요소를 접근.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-js\" data-lang=\"js\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\t\u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nx\"\u003elist\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;item1\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;item2\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e456\u003c/span\u003e\u003cspan class=\"p\"\u003e];\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003e접근\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-js\" data-lang=\"js\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\t\u003cspan class=\"nx\"\u003econsole\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003elist\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e]);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\t\u003cspan class=\"nx\"\u003econsole\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003elist\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e]);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\t\u003cspan class=\"nx\"\u003econsole\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003elist\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e]);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003e결과\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e\titem1\r\n\titem2\r\n\t456\n\u003c/code\u003e\u003c/pre\u003e\u003ch3 id=\"3-리스트-안의-딕서녀리--배열과-객체의-조합\"\u003e3. 리스트 안의 딕서녀리 : 배열과 객체의 조합\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e배열의 순서 유지: 배열의 인덱스를 통해 각 객체에 접근.\u003c/li\u003e\n\u003cli\u003e객체의 키-값 접근: 배열의 요소인 객체에서 키를 사용해 값 출력.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-js\" data-lang=\"js\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\t\u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nx\"\u003epeople\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\t\t\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;name\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;김서영\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;age\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e23\u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\t\t\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;name\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;이현아\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;age\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e33\u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\t\t\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;name\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;최영환\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;age\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e18\u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\t\t\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;name\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;빅서연\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;age\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e19\u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\t\t\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;name\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;김지용\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;age\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e21\u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\t\t\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;name\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;나예지\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;age\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e30\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003e접근\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-js\" data-lang=\"js\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\t\u003cspan class=\"nx\"\u003econsole\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003epeople\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e]);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\t\u003cspan class=\"nx\"\u003econsole\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003epeople\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e][\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;name\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e]);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\t\u003cspan class=\"nx\"\u003econsole\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003epeople\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e][\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;age\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e]);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003e결과\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e\t{name: \u0026#39;김서영\u0026#39;, age: 23}\r\n    최영환\r\n    19\n\u003c/code\u003e\u003c/pre\u003e\u003ch3 id=\"4-배열-함수-foreach\"\u003e4. 배열 함수 forEach\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e배열의 각 요소에 대해 주어진 콜백 함수를 한 번씩 실행.\u003c/li\u003e\n\u003cli\u003e반환값은 없으며, 주로 배열 요소를 순회하며 특정 작업을 수행할 때 사용.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-js\" data-lang=\"js\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\t\u003cspan class=\"nx\"\u003earray\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eforEach\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eelement\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{});\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003e실행\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-js\" data-lang=\"js\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\t\u003cspan class=\"nx\"\u003epeople\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eforEach\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eperson\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \t\u003cspan class=\"nx\"\u003econsole\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eperson\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;name\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e \u003cspan class=\"nx\"\u003eperson\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;age\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e]);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003e결과\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-js\" data-lang=\"js\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\t\u003cspan class=\"nx\"\u003e김서영\u003c/span\u003e \u003cspan class=\"mi\"\u003e23\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\t\u003cspan class=\"nx\"\u003e이현아\u003c/span\u003e \u003cspan class=\"mi\"\u003e33\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\t\u003cspan class=\"nx\"\u003e최영환\u003c/span\u003e \u003cspan class=\"mi\"\u003e18\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\t\u003cspan class=\"nx\"\u003e빅서연\u003c/span\u003e \u003cspan class=\"mi\"\u003e19\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\t\u003cspan class=\"nx\"\u003e김지용\u003c/span\u003e \u003cspan class=\"mi\"\u003e21\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\t\u003cspan class=\"nx\"\u003e나예지\u003c/span\u003e \u003cspan class=\"mi\"\u003e30\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"5-조건문-if-else\"\u003e5. 조건문 if-else\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e조건에 따라 서로 다른 코드를 실행하는 데 사용.\u003c/li\u003e\n\u003cli\u003e특정 조건을 만족하는 경우에만 코드를 실행할 수 있음.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-js\" data-lang=\"js\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\t\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003e조건\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\t\t\u003cspan class=\"c1\"\u003e// 조건이 true일 때 실행되는 코드\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\t\u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\t\t\u003cspan class=\"c1\"\u003e// 조건이 false일 때 실행되는 코드\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\t\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003e실행\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-js\" data-lang=\"js\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\t\u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nx\"\u003eage\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e18\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\t\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eage\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e20\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\t\t\u003cspan class=\"nx\"\u003econsole\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;미성년자입니다.\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \t\u003cspan class=\"nx\"\u003econsole\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;성인입니다.\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003e결과\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-js\" data-lang=\"js\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\t\u003cspan class=\"nx\"\u003e미성년자입니다\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"5-활용하기\"\u003e5. 활용하기\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e20살 미만일 경우 \u0026ldquo;[이름]님은 미성년자입니다.\u0026rdquo;\u003cbr\u003e\n20살 이상일 경우 \u0026ldquo;[이름]님은 성인입니다.\u0026rdquo; 출력\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-js\" data-lang=\"js\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\t\u003cspan class=\"nx\"\u003epeople\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eforEach\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eperson\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\t\t\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eperson\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;age\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e20\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\t\t\t\u003cspan class=\"nx\"\u003econsole\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eperson\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;name\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;님은 미성년자입니다.\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\t\t\u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\t\t\t\u003cspan class=\"nx\"\u003econsole\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eperson\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;name\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;님은 성인입니다.\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\t\t\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\t\u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003e결과\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e\t김서영님은 성인입니다.\r\n\t이현아님은 성인입니다.\r\n\t최영환님은 미성년자입니다.\r\n\t빅서연님은 미성년자입니다.\r\n\t김지용님은 성인입니다.\r\n\t나예지님은 성인입니다.\n\u003c/code\u003e\u003c/pre\u003e\u003ch3 id=\"6-function\"\u003e6. function\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e특정 작업을 수행하는 코드를 정의하고 필요할 때 호출해서 사용.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-js\" data-lang=\"js\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\t\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003ehello\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\t\t\t\u003cspan class=\"c1\"\u003e// hello 라는 이름의 함수를 생성\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e    \t\u003cspan class=\"nx\"\u003ealert\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;안녕하세요!\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\t\u003cspan class=\"c1\"\u003e// 안녕하세요! 를 출력하는 알림창\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003e호출\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-html\" data-lang=\"html\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\t\u003cspan class=\"c\"\u003e\u0026lt;!-- 인사하기 버튼 클릭 시 hello() 함수 호출 --\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\t\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ebutton\u003c/span\u003e \u003cspan class=\"na\"\u003eonclick\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;hello()\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e인사하기\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ebutton\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e \n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003e결과\n\u003cimg loading=\"lazy\" src=\"https://velog.velcdn.com/images/ezro/post/7e15e1f1-596a-4e12-a4e2-8ed1dfb6e801/image.png\"\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003chr\u003e\n\u003ch2 id=\"jquery\"\u003ejQuery\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eJavaScript 코드를 간단하게 작성하도록 돕는 경량 JavaScript 라이브러리\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-html\" data-lang=\"html\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e \u003cspan class=\"na\"\u003eid\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;htmlId\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003eHello, ID!\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e \u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;htmlClass\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003eHello, Class!\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003eJavaScript로 호출\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-js\" data-lang=\"js\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\t\u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nx\"\u003egetId\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003edocument\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003egetElementById\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;htmlId\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\t\u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nx\"\u003egetId2\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003edocument\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003equerySelector\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;#htmlId\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\t\u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nx\"\u003egetClass\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003edocument\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003egetElementsByClassName\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;htmlClass\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\t\u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nx\"\u003egetClass2\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003edocument\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003equerySelectorAll\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;.htmlClass\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003ejQuery로 호출\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-js\" data-lang=\"js\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\t\u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nx\"\u003egetId\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003e$\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;#htmlId\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\t\u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nx\"\u003egetClass\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003e$\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;.htmlClass\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003chr\u003e\n\u003ch2 id=\"java\"\u003eJava\u003c/h2\u003e\n\u003ch3 id=\"반복문-연습하기-part-1\"\u003e반복문 연습하기 Part 1\u003c/h3\u003e\n\u003cp\u003e1부터 100까지의 숫자 출력하기.\n\u003ccode\u003efor\u003c/code\u003e 또는 \u003ccode\u003ewhile\u003c/code\u003e 반복문을 사용하여 1부터 100까지의 숫자를 출력하세요.\u003c/p\u003e","title":"[사전캠프] 5일차."},{"content":" TASKS\n✅ SQL 강의 2주차\n✅ Web 강의 1주차\n🟩 Java Part01-04\nSQL 1. 집계 함수 SUM : 특정 열의 값들을 모두 더함. AVG : 특정 열의 값들의 평균을 계산함. COUNT : 레코드(행)의 개수를 셈. count(distinct 컬럼명) : 중복을 제외한 고유한 값들의 개수 반환 MIN : 특정 열에서 가장 작은 값을 반환함. MAX : 특정 열에서 가장 큰 값을 반환함. 1-1. 주문 금액이 30,000원 이상인 주문 건의 개수 구하기 1. 어떤 컬럼을 이용할 것인가 → select order_id, price\r2. 어떤 테이블에서 데이터를 뽑을 것인가 → from food_orders 3. 어떤 조건을 지정해야 하는가 → where price \u0026gt;= 30000 4. 어떤 함수 (수식) 을 이용해야 하는가 → count(order_id) 혹은 count(1)\rselect count(order_id) count_of_orders from food_orders where price\u0026gt;=30000; 1-2. 한국 음식의 주문당 평균 음식 가격 구하기 1. 어떤 컬럼을 이용할 것인가 → select cuisine_type, price\r2. 어떤 테이블에서 데이터를 뽑을 것인가 → from food_orders\r3. 어떤 조건을 지정해야 하는가 → where cuisint_type=’Korean’\r4. 어떤 함수 (수식)을 이용해야 하는가 → avg(price)\rselect avg(price) as average_price from food_orders where cuisine_type=\u0026#39;Korean\u0026#39;; 2. GROUP BY절 데이터를 그룹화하여 집계 함수와 함께 사용. 2-1. 음식점별 주문 금액 최댓값 조회하기 1. 어떤 컬럼을 이용할 것인가 → select restaurant_name, price\r2. 어떤 테이블에서 데이터를 뽑을 것인가 → from food_orders\r3. 어떤 조건을 지정해야 하는가 → X\r4. 어떤 함수 (수식) 을 이용해야 하는가 → max(price)\r5. 어떤 컬럼 기준으로 계산할 것인가 → group by restaurant_name\rselect restaurant_name, max(price) from food_orders group by restaurant_name; 2-2. 결제 타입별 가장 최근 결제일 조회하기 1. 어떤 컬럼을 이용할 것인가 → select pay_type, date\r2. 어떤 테이블에서 데이터를 뽑을 것인가 → from payments\r3. 어떤 조건을 지정해야 하는가 → X\r4. 어떤 함수 (수식) 을 이용해야 하는가 → max(date)\r5. 어떤 컬럼 기준으로 계산할 것인가 → group by pay_type\rselect pay_type \u0026#34;결제타입\u0026#34;, max(date) \u0026#34;최근 결제일\u0026#34; from payments group by pay_type; 3. ORDER BY절 지정한 컬럼을 기준으로 오름차순(ASC) 또는 내림차순(DESC)으로 정렬 ORDER BY 컬럼명\t-- 오름차순 ORDER BY 컬럼명 DESC\t-- 내림차순 ORDER BY 컬럼명1, 컬럼명2\t-- 컬럼1 기준으로 오름차순 정렬 후, -- 그 결과값 내에서 컬럼2 기준으로 오름차순 정렬 3-1. 음식점별 주문 금액 최댓값 조회하기 - 최댓값 기준 내림차순 정렬 1. 어떤 컬럼을 이용할 것인가 → select restaurant_name, price\r2. 어떤 테이블에서 데이터를 뽑을 것인가 → from food_orders\r3. 어떤 조건을 지정해야 하는가 → X\r4. 어떤 함수 (수식) 을 이용해야 하는가 → max(price)\r5. 어떤 컬럼 기준으로 계산할 것인가 → group by restaurant_name\r6. 어떤 컬럼 기준으로 정렬할 것인가 → order by desc\rselect restaurant_name, max(price) from food_orders group by restaurant_name order by max(price) desc; 4. SQL 기본 구조 SELECT\t-- (필수) 반환할 데이터를 선택 FROM\t-- (필수) 데이터를 가져올 테이블 지정 WHERE\t-- (선택) 특정 조건으로 데이터를 필터링 GROUP BY\t-- (선택) 데이터를 그룹화 ORDER BY\t-- (선택) 결과를 정렬 Web HTML/CSS HTML 기초 Tag과 CSS 활용해서 간단한 로그인 페이지 만들기 부트스트랩 활용해서 나만의 추억 앨범 만들기 한 세트로 자주 쓰이는 CSS // 이미지를 중앙에 위치시키고 비율 유지하며 가득차도록 설정 background-image: url(\u0026#39;\u0026#39;); background-position: center; background-size: cover; // 플렉스 박스를 중심으로 컨테이너 안의 자식 요소들을 중앙에 정렬 display: flex; flex-direction: column; \u0026lt;!-- 또는 row --\u0026gt; align-items: center; justify-content: center; ","permalink":"http://localhost:1313/record/2025-01-16/","summary":"\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eTASKS\u003c/strong\u003e\u003cbr\u003e\n✅ SQL 강의 2주차\u003cbr\u003e\n✅ Web 강의 1주차\u003cbr\u003e\n🟩 Java Part01-04\u003c/p\u003e\u003c/blockquote\u003e\n\u003chr\u003e\n\u003ch2 id=\"sql\"\u003eSQL\u003c/h2\u003e\n\u003ch3 id=\"1-집계-함수\"\u003e1. 집계 함수\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eSUM\u003c/code\u003e : 특정 열의 값들을 모두 더함.\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eAVG\u003c/code\u003e : 특정 열의 값들의 평균을 계산함.\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eCOUNT\u003c/code\u003e : 레코드(행)의 개수를 셈.\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003ecount(distinct 컬럼명)\u003c/code\u003e : 중복을 제외한 고유한 값들의 개수 반환\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eMIN\u003c/code\u003e : 특정 열에서 가장 작은 값을 반환함.\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eMAX\u003c/code\u003e : 특정 열에서 가장 큰 값을 반환함.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch4 id=\"1-1-주문-금액이-30000원-이상인-주문-건의-개수-구하기\"\u003e1-1. 주문 금액이 30,000원 이상인 주문 건의 개수 구하기\u003c/h4\u003e\n\u003cpre\u003e\u003ccode\u003e1. 어떤 컬럼을 이용할 것인가 → select order_id, price\r\n2. 어떤 테이블에서 데이터를 뽑을 것인가 → from food_orders \r\n3. 어떤 조건을 지정해야 하는가 → where price \u0026gt;= 30000 \r\n4. 어떤 함수 (수식) 을 이용해야 하는가 → count(order_id) 혹은 count(1)\r\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-sql\" data-lang=\"sql\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eselect\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eorder_id\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003ecount_of_orders\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003efrom\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003efood_orders\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003ewhere\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eprice\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;=\u003c/span\u003e\u003cspan class=\"mi\"\u003e30000\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"1-2-한국-음식의-주문당-평균-음식-가격-구하기\"\u003e1-2. 한국 음식의 주문당 평균 음식 가격 구하기\u003c/h4\u003e\n\u003cpre\u003e\u003ccode\u003e1. 어떤 컬럼을 이용할 것인가 → select cuisine_type, price\r\n2. 어떤 테이블에서 데이터를 뽑을 것인가 → from food_orders\r\n3. 어떤 조건을 지정해야 하는가 → where cuisint_type=’Korean’\r\n4. 어떤 함수 (수식)을 이용해야 하는가 → avg(price)\r\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-sql\" data-lang=\"sql\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eselect\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003eavg\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eprice\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003eas\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eaverage_price\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003efrom\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003efood_orders\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003ewhere\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003ecuisine_type\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;Korean\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"2-group-by절\"\u003e2. GROUP BY절\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e데이터를 그룹화하여 집계 함수와 함께 사용.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch4 id=\"2-1-음식점별-주문-금액-최댓값-조회하기\"\u003e2-1. 음식점별 주문 금액 최댓값 조회하기\u003c/h4\u003e\n\u003cpre\u003e\u003ccode\u003e1. 어떤 컬럼을 이용할 것인가 → select restaurant_name, price\r\n2. 어떤 테이블에서 데이터를 뽑을 것인가 → from food_orders\r\n3. 어떤 조건을 지정해야 하는가 → X\r\n4. 어떤 함수 (수식) 을 이용해야 하는가 → max(price)\r\n5. 어떤 컬럼 기준으로 계산할 것인가 → group by restaurant_name\r\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-sql\" data-lang=\"sql\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eselect\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003erestaurant_name\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e       \u003c/span\u003e\u003cspan class=\"k\"\u003emax\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eprice\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003efrom\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003efood_orders\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003egroup\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003eby\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003erestaurant_name\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"2-2-결제-타입별-가장-최근-결제일-조회하기\"\u003e2-2. 결제 타입별 가장 최근 결제일 조회하기\u003c/h4\u003e\n\u003cpre\u003e\u003ccode\u003e1. 어떤 컬럼을 이용할 것인가 → select pay_type, date\r\n2. 어떤 테이블에서 데이터를 뽑을 것인가 → from payments\r\n3. 어떤 조건을 지정해야 하는가 → X\r\n4. 어떤 함수 (수식) 을 이용해야 하는가 → max(date)\r\n5. 어떤 컬럼 기준으로 계산할 것인가 → group by pay_type\r\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-sql\" data-lang=\"sql\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eselect\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003epay_type\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;결제타입\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e       \u003c/span\u003e\u003cspan class=\"k\"\u003emax\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003edate\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;최근 결제일\u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003efrom\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003epayments\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003egroup\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003eby\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003epay_type\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"3-order-by절\"\u003e3. ORDER BY절\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e지정한 컬럼을 기준으로 오름차순(ASC) 또는 내림차순(DESC)으로 정렬\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-sql\" data-lang=\"sql\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eORDER\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003eBY\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"err\"\u003e컬럼명\u003c/span\u003e\u003cspan class=\"w\"\u003e\t\t\t\t\u003c/span\u003e\u003cspan class=\"c1\"\u003e-- 오름차순\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eORDER\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003eBY\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"err\"\u003e컬럼명\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003eDESC\u003c/span\u003e\u003cspan class=\"w\"\u003e\t\t\u003c/span\u003e\u003cspan class=\"c1\"\u003e-- 내림차순\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eORDER\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003eBY\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"err\"\u003e컬럼명\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"err\"\u003e컬럼명\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"w\"\u003e\t\u003c/span\u003e\u003cspan class=\"c1\"\u003e-- 컬럼1 기준으로 오름차순 정렬 후, \n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"w\"\u003e\t\t\t\t\t\t\t\u003c/span\u003e\u003cspan class=\"c1\"\u003e-- 그 결과값 내에서 컬럼2 기준으로 오름차순 정렬\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"3-1-음식점별-주문-금액-최댓값-조회하기---최댓값-기준-내림차순-정렬\"\u003e3-1. 음식점별 주문 금액 최댓값 조회하기 - 최댓값 기준 내림차순 정렬\u003c/h4\u003e\n\u003cpre\u003e\u003ccode\u003e1. 어떤 컬럼을 이용할 것인가 → select restaurant_name, price\r\n2. 어떤 테이블에서 데이터를 뽑을 것인가 → from food_orders\r\n3. 어떤 조건을 지정해야 하는가 → X\r\n4. 어떤 함수 (수식) 을 이용해야 하는가 → max(price)\r\n5. 어떤 컬럼 기준으로 계산할 것인가 → group by restaurant_name\r\n6. 어떤 컬럼 기준으로 정렬할 것인가 → order by desc\r\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-sql\" data-lang=\"sql\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eselect\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003erestaurant_name\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e       \u003c/span\u003e\u003cspan class=\"k\"\u003emax\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eprice\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003efrom\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003efood_orders\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003egroup\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003eby\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003erestaurant_name\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eorder\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003eby\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003emax\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eprice\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003edesc\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"4-sql-기본-구조\"\u003e4. SQL 기본 구조\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-sql\" data-lang=\"sql\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eSELECT\u003c/span\u003e\u003cspan class=\"w\"\u003e\t\t\u003c/span\u003e\u003cspan class=\"c1\"\u003e-- (필수) 반환할 데이터를 선택\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eFROM\u003c/span\u003e\u003cspan class=\"w\"\u003e\t\t\u003c/span\u003e\u003cspan class=\"c1\"\u003e-- (필수) 데이터를 가져올 테이블 지정\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eWHERE\u003c/span\u003e\u003cspan class=\"w\"\u003e\t\t\u003c/span\u003e\u003cspan class=\"c1\"\u003e-- (선택) 특정 조건으로 데이터를 필터링\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eGROUP\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003eBY\u003c/span\u003e\u003cspan class=\"w\"\u003e\t\u003c/span\u003e\u003cspan class=\"c1\"\u003e-- (선택) 데이터를 그룹화\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eORDER\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003eBY\u003c/span\u003e\u003cspan class=\"w\"\u003e\t\u003c/span\u003e\u003cspan class=\"c1\"\u003e-- (선택) 결과를 정렬\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003chr\u003e\n\u003ch2 id=\"web\"\u003eWeb\u003c/h2\u003e\n\u003ch3 id=\"htmlcss\"\u003eHTML/CSS\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eHTML 기초 Tag과 CSS 활용해서 간단한 로그인 페이지 만들기\n\u003cimg loading=\"lazy\" src=\"https://velog.velcdn.com/images/ezro/post/fd8f47f4-c6b2-450a-a814-8e6c8092fc0b/image.png\"\u003e\u003c/p\u003e","title":"[사전캠프] 4일차."},{"content":" TASKS\n✅ SQL 강의 1주차\n🟩 SQL 걷기반 31-50\nSQL 1. SELECT / FROM 데이터를 조회할 때 사용하는 가장 기본적인 명령어. SELECT는 가져올 데이터를, FROM은 데이터를 가져올 테이블을 지정함. food_orders 테이블에서 모든 데이터를 조회 : SELECT * FROM food_orders; customers 테이블에서 이름(name)과 이메일(email)만 조회 : SELECT name, email FROM customers; 2. WHERE 조건에 맞는 데이터만 필터링할 때 사용. customers 테이블에서 나이가 21세인 고객만 조회 : SELECT * FROM customers WHERE age = 21; food_orders 테이블에서 음식 종류가 한식(Korean)인 주문만 조회 : SELECT * FROM food_orders WHERE cuisine_type = \u0026#39;Korean\u0026#39;; 3. 비교 연산자 = : 특정 값과 같은 경우 사용 \u0026lt;\u0026gt; : 특정 값과 다른 경우 사용 \u0026gt; : 특정 값보다 큰 경우 사용 \u0026lt; : 특정 값보다 작은 경우 사용 \u0026gt;= : 특정 값보다 크거나 같은 경우 사용 \u0026lt;= : 특정 값보다 작거나 같은 경우 사용 salary가 3000인 직원을 조회 : SELECT * FROM employees WHERE salary = 3000; salary가 3000이 아닌 직원을 조회 : SELECT * FROM employees WHERE salary \u0026lt;\u0026gt; 3000; 100보다 큰 가격의 상품을 조회 : SELECT * FROM products WHERE price \u0026gt; 100; 100보다 작은 가격의 상품을 조회 : SELECT * FROM products WHERE price \u0026lt; 100; 나이가 30세 이상인 직원을 조회 : SELECT * FROM employees WHERE age \u0026gt;= 30; 나이가 30세 이하인 직원을 조회 : SELECT * FROM employees WHERE age \u0026lt;= 30; 4. 필터링 함수 BETWEEN : 특정 범위 안에 있는 경우 사용 IN : 여러 값 중 하나에 해당하는 경우 사용 LIKE : 특정 패턴과 일치하는 경우 사용 % : 0개 이상의 문자를 대체함 → 부분 일치 검색 _ : 단일 문자를 대체함 → 특정 위치의 문자 일치 검색 주문 금액이 20,000원에서 30,000원 사이인 주문 조회 : SELECT * FROM food_orders WHERE price BETWEEN 20000 AND 30000; 나이가 21세, 25세, 30세인 고객 조회 : SELECT * FROM customers WHERE age IN (21, 25, 30); 음식 종류가 한식(Korean) 또는 일식(Japanese)인 주문 조회 : SELECT * FROM food_orders WHERE cuisine_type IN (\u0026#39;Korean\u0026#39;, \u0026#39;Japanese\u0026#39;); 이름이 \u0026lsquo;김\u0026rsquo;으로 시작하는 고객 조회 : SELECT * FROM customers WHERE name LIKE \u0026#39;김%\u0026#39;; 이메일 주소에 \u0026lsquo;gmail\u0026rsquo;이 포함된 고객 조회 : SELECT * FROM customers WHERE email LIKE \u0026#39;%gmail%\u0026#39;; 이름이 \u0026lsquo;김\u0026rsquo;으로 시작하고 두 글자인 고객 조회 : SELECT * FROM customers WHERE name LIKE \u0026#39;김_\u0026#39;; * 1주차 숙제 : 상품 준비시간이 20~30분 사이인, 한국 음식점의 식당명과 고객번호 조회하기 SELECT restaurant_name as \u0026#34;식당명\u0026#34;, customer_id as \u0026#34;고객번호\u0026#34; FROM food_orders WHERE food_preparation_time BETWEEN 20 AND 30 AND cuisine_type = \u0026#39;Korean\u0026#39; ","permalink":"http://localhost:1313/record/2025-01-15/","summary":"\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eTASKS\u003c/strong\u003e\u003cbr\u003e\n✅ SQL 강의 1주차\u003cbr\u003e\n🟩 SQL 걷기반 31-50\u003c/p\u003e\u003c/blockquote\u003e\n\u003chr\u003e\n\u003ch2 id=\"sql\"\u003eSQL\u003c/h2\u003e\n\u003ch3 id=\"1-select--from\"\u003e1. SELECT / FROM\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e데이터를 조회할 때 사용하는 가장 기본적인 명령어.\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eSELECT\u003c/code\u003e는 가져올 데이터를, \u003ccode\u003eFROM\u003c/code\u003e은 데이터를 가져올 테이블을 지정함.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch5 id=\"food_orders-테이블에서-모든-데이터를-조회-\"\u003e\u003ccode\u003efood_orders\u003c/code\u003e 테이블에서 모든 데이터를 조회 :\u003c/h5\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-sql\" data-lang=\"sql\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\t\u003c/span\u003e\u003cspan class=\"k\"\u003eSELECT\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"k\"\u003eFROM\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003efood_orders\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch5 id=\"customers-테이블에서-이름name과-이메일email만-조회-\"\u003e\u003ccode\u003ecustomers\u003c/code\u003e 테이블에서 이름(name)과 이메일(email)만 조회 :\u003c/h5\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-sql\" data-lang=\"sql\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\t\u003c/span\u003e\u003cspan class=\"k\"\u003eSELECT\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eemail\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"k\"\u003eFROM\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003ecustomers\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"2-where\"\u003e2. WHERE\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e조건에 맞는 데이터만 필터링할 때 사용.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch5 id=\"customers-테이블에서-나이가-21세인-고객만-조회-\"\u003e\u003ccode\u003ecustomers\u003c/code\u003e 테이블에서 나이가 21세인 고객만 조회 :\u003c/h5\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-sql\" data-lang=\"sql\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eSELECT\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eFROM\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003ecustomers\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eWHERE\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eage\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e21\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch5 id=\"food_orders-테이블에서-음식-종류가-한식korean인-주문만-조회-\"\u003e\u003ccode\u003efood_orders\u003c/code\u003e 테이블에서 음식 종류가 한식(Korean)인 주문만 조회 :\u003c/h5\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-sql\" data-lang=\"sql\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eSELECT\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eFROM\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003efood_orders\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eWHERE\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003ecuisine_type\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;Korean\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"3-비교-연산자\"\u003e3. 비교 연산자\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003e=\u003c/code\u003e : 특정 값과 같은 경우 사용\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e\u0026lt;\u0026gt;\u003c/code\u003e : 특정 값과 다른 경우 사용\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e\u0026gt;\u003c/code\u003e : 특정 값보다 큰 경우 사용\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e\u0026lt;\u003c/code\u003e : 특정 값보다 작은 경우 사용\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e\u0026gt;=\u003c/code\u003e : 특정 값보다 크거나 같은 경우 사용\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e\u0026lt;=\u003c/code\u003e : 특정 값보다 작거나 같은 경우 사용\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch5 id=\"salary가-3000인-직원을-조회-\"\u003esalary가 3000인 직원을 조회 :\u003c/h5\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-sql\" data-lang=\"sql\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eSELECT\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"w\"\u003e \n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eFROM\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eemployees\u003c/span\u003e\u003cspan class=\"w\"\u003e \n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eWHERE\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003esalary\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e3000\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch5 id=\"salary가-3000이-아닌-직원을-조회-\"\u003esalary가 3000이 아닌 직원을 조회 :\u003c/h5\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-sql\" data-lang=\"sql\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eSELECT\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"w\"\u003e \n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eFROM\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eemployees\u003c/span\u003e\u003cspan class=\"w\"\u003e \n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eWHERE\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003esalary\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u0026gt;\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e3000\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch5 id=\"100보다-큰-가격의-상품을-조회-\"\u003e100보다 큰 가격의 상품을 조회 :\u003c/h5\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-sql\" data-lang=\"sql\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eSELECT\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"w\"\u003e \n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eFROM\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eproducts\u003c/span\u003e\u003cspan class=\"w\"\u003e \n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eWHERE\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eprice\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e100\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch5 id=\"100보다-작은-가격의-상품을-조회-\"\u003e100보다 작은 가격의 상품을 조회 :\u003c/h5\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-sql\" data-lang=\"sql\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eSELECT\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"w\"\u003e \n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eFROM\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eproducts\u003c/span\u003e\u003cspan class=\"w\"\u003e \n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eWHERE\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eprice\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e100\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch5 id=\"나이가-30세-이상인-직원을-조회-\"\u003e나이가 30세 이상인 직원을 조회 :\u003c/h5\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-sql\" data-lang=\"sql\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eSELECT\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"w\"\u003e \n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eFROM\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eemployees\u003c/span\u003e\u003cspan class=\"w\"\u003e \n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eWHERE\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eage\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;=\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e30\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch5 id=\"나이가-30세-이하인-직원을-조회-\"\u003e나이가 30세 이하인 직원을 조회 :\u003c/h5\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-sql\" data-lang=\"sql\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eSELECT\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"w\"\u003e \n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eFROM\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eemployees\u003c/span\u003e\u003cspan class=\"w\"\u003e \n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eWHERE\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eage\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;=\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e30\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"4-필터링-함수\"\u003e4. 필터링 함수\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003e\u003ccode\u003eBETWEEN\u003c/code\u003e\u003c/strong\u003e : 특정 범위 안에 있는 경우 사용\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e\u003ccode\u003eIN\u003c/code\u003e\u003c/strong\u003e : 여러 값 중 하나에 해당하는 경우 사용\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e\u003ccode\u003eLIKE\u003c/code\u003e\u003c/strong\u003e : 특정 패턴과 일치하는 경우 사용\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003e%\u003c/code\u003e : 0개 이상의 문자를 대체함 → 부분 일치 검색\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e_\u003c/code\u003e : 단일 문자를 대체함 → 특정 위치의 문자 일치 검색\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch5 id=\"주문-금액이-20000원에서-30000원-사이인-주문-조회-\"\u003e주문 금액이 20,000원에서 30,000원 사이인 주문 조회 :\u003c/h5\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-sql\" data-lang=\"sql\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eSELECT\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eFROM\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003efood_orders\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eWHERE\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eprice\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003eBETWEEN\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e20000\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003eAND\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e30000\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch5 id=\"나이가-21세-25세-30세인-고객-조회-\"\u003e나이가 21세, 25세, 30세인 고객 조회 :\u003c/h5\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-sql\" data-lang=\"sql\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eSELECT\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eFROM\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003ecustomers\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eWHERE\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eage\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003eIN\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e21\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e25\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e30\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch5 id=\"음식-종류가-한식korean-또는-일식japanese인-주문-조회-\"\u003e음식 종류가 한식(Korean) 또는 일식(Japanese)인 주문 조회 :\u003c/h5\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-sql\" data-lang=\"sql\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eSELECT\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eFROM\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003efood_orders\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eWHERE\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003ecuisine_type\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003eIN\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;Korean\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;Japanese\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch5 id=\"이름이-김으로-시작하는-고객-조회-\"\u003e이름이 \u0026lsquo;김\u0026rsquo;으로 시작하는 고객 조회 :\u003c/h5\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-sql\" data-lang=\"sql\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eSELECT\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eFROM\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003ecustomers\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eWHERE\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003ename\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003eLIKE\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;김%\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch5 id=\"이메일-주소에-gmail이-포함된-고객-조회-\"\u003e이메일 주소에 \u0026lsquo;gmail\u0026rsquo;이 포함된 고객 조회 :\u003c/h5\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-sql\" data-lang=\"sql\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eSELECT\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eFROM\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003ecustomers\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eWHERE\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eemail\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003eLIKE\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;%gmail%\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch5 id=\"이름이-김으로-시작하고-두-글자인-고객-조회-\"\u003e이름이 \u0026lsquo;김\u0026rsquo;으로 시작하고 두 글자인 고객 조회 :\u003c/h5\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-sql\" data-lang=\"sql\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eSELECT\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eFROM\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003ecustomers\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eWHERE\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003ename\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003eLIKE\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;김_\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"-1주차-숙제--상품-준비시간이-2030분-사이인-한국-음식점의-식당명과-고객번호-조회하기\"\u003e* 1주차 숙제 : 상품 준비시간이 20~30분 사이인, 한국 음식점의 식당명과 고객번호 조회하기\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-sql\" data-lang=\"sql\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eSELECT\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003erestaurant_name\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003eas\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;식당명\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003ecustomer_id\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003eas\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;고객번호\u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eFROM\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003efood_orders\u003c/span\u003e\u003cspan class=\"w\"\u003e \n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eWHERE\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003efood_preparation_time\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003eBETWEEN\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e20\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003eAND\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e30\u003c/span\u003e\u003cspan class=\"w\"\u003e \n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eAND\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003ecuisine_type\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;Korean\u0026#39;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","title":"[사전캠프] 3일차."}]